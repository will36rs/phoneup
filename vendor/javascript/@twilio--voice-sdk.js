import*as e from"events";import*as t from"loglevel";import*as n from"rtcpeerconnection-shim";import*as r from"md5";var o=e;try{"default"in e&&(o=e.default)}catch(e){}var i={},a=false;function dew$B(){if(a)return i;a=true;var e=i&&i.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(i,"__esModule",{value:true});var t=o;var n=function(t){e(Backoff,t);
/**
     * Construct a {@link Backoff}.
     * @param {object} options
     * @property {number} min - Initial timeout in milliseconds [100]
     * @property {number} max - Max timeout [10000]
     * @property {boolean} jitter - Apply jitter [0]
     * @property {number} factor - Multiplication factor for Backoff operation [2]
     */function Backoff(e){var n=t.call(this)||this;Object.defineProperties(n,{_attempts:{value:0,writable:true},_duration:{enumerable:false,get:function(){var e=this._min*Math.pow(this._factor,this._attempts);if(this._jitter){var t=Math.random();var n=Math.floor(t*this._jitter*e);e=(Math.floor(t*10)&1)===0?e-n:e+n}return Math.min(e,this._max)|0}},_factor:{value:e.factor||2},_jitter:{value:e.jitter>0&&e.jitter<=1?e.jitter:0},_max:{value:e.max||1e4},_min:{value:e.min||100},_timeoutID:{value:null,writable:true}});return n}Backoff.prototype.backoff=function(){var e=this;var t=this._duration;if(this._timeoutID){clearTimeout(this._timeoutID);this._timeoutID=null}this.emit("backoff",this._attempts,t);this._timeoutID=setTimeout((function(){e.emit("ready",e._attempts,t);e._attempts++}),t)};Backoff.prototype.reset=function(){this._attempts=0;if(this._timeoutID){clearTimeout(this._timeoutID);this._timeoutID=null}};return Backoff}(t.EventEmitter);i.default=n;return i}var s={},c=false;function dew$A(){if(c)return s;c=true;var e=s&&s.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(s,"__esModule",{value:true});var t=function(t){e(TwilioError,t);function TwilioError(e,n){var r=t.call(this)||this;Object.setPrototypeOf(r,TwilioError.prototype);var o=typeof e==="string"?e:r.explanation;var i=typeof e==="object"?e:n;r.message=r.name+" ("+r.code+"): "+o;r.originalError=i;return r}return TwilioError}(Error);s.default=t;return s}var u={},l=false;function dew$z(){if(l)return u;l=true;var e=u&&u.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(u,"__esModule",{value:true});u.errorsByCode=u.MediaErrors=u.SignalingErrors=u.UserMediaErrors=u.MalformedRequestErrors=u.GeneralErrors=u.SIPServerErrors=u.ClientErrors=u.SignatureValidationErrors=u.AuthorizationErrors=u.TwilioError=void 0;var t=dew$A();u.TwilioError=t.default;var n;(function(n){var r=function(t){e(AccessTokenInvalid,t);function AccessTokenInvalid(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=20101;o.description="Invalid access token";o.explanation="Twilio was unable to validate your Access Token";o.name="AccessTokenInvalid";o.solutions=[];Object.setPrototypeOf(o,n.AccessTokenInvalid.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AccessTokenInvalid}(t.default);n.AccessTokenInvalid=r;var o=function(t){e(AccessTokenExpired,t);function AccessTokenExpired(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=20104;o.description="Access token expired or expiration date invalid";o.explanation="The Access Token provided to the Twilio API has expired, the expiration time specified in the token was invalid, or the expiration time specified was too far in the future";o.name="AccessTokenExpired";o.solutions=[];Object.setPrototypeOf(o,n.AccessTokenExpired.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AccessTokenExpired}(t.default);n.AccessTokenExpired=o;var i=function(t){e(AuthenticationFailed,t);function AuthenticationFailed(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=20151;o.description="Authentication Failed";o.explanation="The Authentication with the provided JWT failed";o.name="AuthenticationFailed";o.solutions=[];Object.setPrototypeOf(o,n.AuthenticationFailed.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AuthenticationFailed}(t.default);n.AuthenticationFailed=i})(n=u.AuthorizationErrors||(u.AuthorizationErrors={}));var r;(function(n){var r=function(t){e(AccessTokenSignatureValidationFailed,t);function AccessTokenSignatureValidationFailed(e,r){var o=t.call(this,e,r)||this;o.causes=["The access token has an invalid Account SID, API Key, or API Key Secret."];o.code=31202;o.description="Signature validation failed.";o.explanation="The provided access token failed signature validation.";o.name="AccessTokenSignatureValidationFailed";o.solutions=["Ensure the Account SID, API Key, and API Key Secret are valid when generating your access token."];Object.setPrototypeOf(o,n.AccessTokenSignatureValidationFailed.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AccessTokenSignatureValidationFailed}(t.default);n.AccessTokenSignatureValidationFailed=r})(r=u.SignatureValidationErrors||(u.SignatureValidationErrors={}));var o;(function(n){var r=function(t){e(BadRequest,t);function BadRequest(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31400;o.description="Bad Request (HTTP/SIP)";o.explanation="The request could not be understood due to malformed syntax.";o.name="BadRequest";o.solutions=[];Object.setPrototypeOf(o,n.BadRequest.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return BadRequest}(t.default);n.BadRequest=r;var o=function(t){e(NotFound,t);function NotFound(e,r){var o=t.call(this,e,r)||this;o.causes=["The outbound call was made to an invalid phone number.","The TwiML application sid is missing a Voice URL."];o.code=31404;o.description="Not Found (HTTP/SIP)";o.explanation="The server has not found anything matching the request.";o.name="NotFound";o.solutions=["Ensure the phone number dialed is valid.","Ensure the TwiML application is configured correctly with a Voice URL link."];Object.setPrototypeOf(o,n.NotFound.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return NotFound}(t.default);n.NotFound=o;var i=function(t){e(TemporarilyUnavailable,t);function TemporarilyUnavailable(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31480;o.description="Temporarily Unavailable (SIP)";o.explanation="The callee is currently unavailable.";o.name="TemporarilyUnavailable";o.solutions=[];Object.setPrototypeOf(o,n.TemporarilyUnavailable.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return TemporarilyUnavailable}(t.default);n.TemporarilyUnavailable=i;var a=function(t){e(BusyHere,t);function BusyHere(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31486;o.description="Busy Here (SIP)";o.explanation="The callee is busy.";o.name="BusyHere";o.solutions=[];Object.setPrototypeOf(o,n.BusyHere.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return BusyHere}(t.default);n.BusyHere=a})(o=u.ClientErrors||(u.ClientErrors={}));var i;(function(n){var r=function(t){e(Decline,t);function Decline(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31603;o.description="Decline (SIP)";o.explanation="The callee does not wish to participate in the call.";o.name="Decline";o.solutions=[];Object.setPrototypeOf(o,n.Decline.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return Decline}(t.default);n.Decline=r})(i=u.SIPServerErrors||(u.SIPServerErrors={}));var a;(function(n){var r=function(t){e(UnknownError,t);function UnknownError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31e3;o.description="Unknown Error";o.explanation="An unknown error has occurred. See error details for more information.";o.name="UnknownError";o.solutions=[];Object.setPrototypeOf(o,n.UnknownError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return UnknownError}(t.default);n.UnknownError=r;var o=function(t){e(ApplicationNotFoundError,t);function ApplicationNotFoundError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31001;o.description="Application Not Found";o.explanation="";o.name="ApplicationNotFoundError";o.solutions=[];Object.setPrototypeOf(o,n.ApplicationNotFoundError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ApplicationNotFoundError}(t.default);n.ApplicationNotFoundError=o;var i=function(t){e(ConnectionDeclinedError,t);function ConnectionDeclinedError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31002;o.description="Connection Declined";o.explanation="";o.name="ConnectionDeclinedError";o.solutions=[];Object.setPrototypeOf(o,n.ConnectionDeclinedError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ConnectionDeclinedError}(t.default);n.ConnectionDeclinedError=i;var a=function(t){e(ConnectionTimeoutError,t);function ConnectionTimeoutError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31003;o.description="Connection Timeout";o.explanation="The server could not produce a response within a suitable amount of time.";o.name="ConnectionTimeoutError";o.solutions=[];Object.setPrototypeOf(o,n.ConnectionTimeoutError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ConnectionTimeoutError}(t.default);n.ConnectionTimeoutError=a;var s=function(t){e(ConnectionError,t);function ConnectionError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31005;o.description="Connection error";o.explanation="A connection error occurred during the call";o.name="ConnectionError";o.solutions=[];Object.setPrototypeOf(o,n.ConnectionError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ConnectionError}(t.default);n.ConnectionError=s;var c=function(t){e(CallCancelledError,t);function CallCancelledError(e,r){var o=t.call(this,e,r)||this;o.causes=["The incoming call was cancelled because it was not answered in time or it was accepted/rejected by another application instance registered with the same identity."];o.code=31008;o.description="Call cancelled";o.explanation="Unable to answer because the call has ended";o.name="CallCancelledError";o.solutions=[];Object.setPrototypeOf(o,n.CallCancelledError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return CallCancelledError}(t.default);n.CallCancelledError=c;var u=function(t){e(TransportError,t);function TransportError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31009;o.description="Transport error";o.explanation="No transport available to send or receive messages";o.name="TransportError";o.solutions=[];Object.setPrototypeOf(o,n.TransportError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return TransportError}(t.default);n.TransportError=u})(a=u.GeneralErrors||(u.GeneralErrors={}));var s;(function(n){var r=function(t){e(MalformedRequestError,t);function MalformedRequestError(e,r){var o=t.call(this,e,r)||this;o.causes=["Invalid content or MessageType passed to sendMessage method."];o.code=31100;o.description="The request had malformed syntax.";o.explanation="The request could not be understood due to malformed syntax.";o.name="MalformedRequestError";o.solutions=["Ensure content and MessageType passed to sendMessage method are valid."];Object.setPrototypeOf(o,n.MalformedRequestError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return MalformedRequestError}(t.default);n.MalformedRequestError=r;var o=function(t){e(MissingParameterArrayError,t);function MissingParameterArrayError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31101;o.description="Missing parameter array in request";o.explanation="";o.name="MissingParameterArrayError";o.solutions=[];Object.setPrototypeOf(o,n.MissingParameterArrayError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return MissingParameterArrayError}(t.default);n.MissingParameterArrayError=o;var i=function(t){e(AuthorizationTokenMissingError,t);function AuthorizationTokenMissingError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31102;o.description="Authorization token missing in request.";o.explanation="";o.name="AuthorizationTokenMissingError";o.solutions=[];Object.setPrototypeOf(o,n.AuthorizationTokenMissingError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AuthorizationTokenMissingError}(t.default);n.AuthorizationTokenMissingError=i;var a=function(t){e(MaxParameterLengthExceededError,t);function MaxParameterLengthExceededError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31103;o.description="Maximum parameter length has been exceeded.";o.explanation="Length of parameters cannot exceed MAX_PARAM_LENGTH.";o.name="MaxParameterLengthExceededError";o.solutions=[];Object.setPrototypeOf(o,n.MaxParameterLengthExceededError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return MaxParameterLengthExceededError}(t.default);n.MaxParameterLengthExceededError=a;var s=function(t){e(InvalidBridgeTokenError,t);function InvalidBridgeTokenError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31104;o.description="Invalid bridge token";o.explanation="";o.name="InvalidBridgeTokenError";o.solutions=[];Object.setPrototypeOf(o,n.InvalidBridgeTokenError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return InvalidBridgeTokenError}(t.default);n.InvalidBridgeTokenError=s;var c=function(t){e(InvalidClientNameError,t);function InvalidClientNameError(e,r){var o=t.call(this,e,r)||this;o.causes=["Client name contains invalid characters."];o.code=31105;o.description="Invalid client name";o.explanation="Client name should not contain control, space, delims, or unwise characters.";o.name="InvalidClientNameError";o.solutions=["Make sure that client name does not contain any of the invalid characters."];Object.setPrototypeOf(o,n.InvalidClientNameError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return InvalidClientNameError}(t.default);n.InvalidClientNameError=c;var u=function(t){e(ReconnectParameterInvalidError,t);function ReconnectParameterInvalidError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31107;o.description="The reconnect parameter is invalid";o.explanation="";o.name="ReconnectParameterInvalidError";o.solutions=[];Object.setPrototypeOf(o,n.ReconnectParameterInvalidError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ReconnectParameterInvalidError}(t.default);n.ReconnectParameterInvalidError=u})(s=u.MalformedRequestErrors||(u.MalformedRequestErrors={}));(function(n){var r=function(t){e(AuthorizationError,t);function AuthorizationError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31201;o.description="Authorization error";o.explanation="The request requires user authentication. The server understood the request, but is refusing to fulfill it.";o.name="AuthorizationError";o.solutions=[];Object.setPrototypeOf(o,n.AuthorizationError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AuthorizationError}(t.default);n.AuthorizationError=r;var o=function(t){e(NoValidAccountError,t);function NoValidAccountError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31203;o.description="No valid account";o.explanation="";o.name="NoValidAccountError";o.solutions=[];Object.setPrototypeOf(o,n.NoValidAccountError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return NoValidAccountError}(t.default);n.NoValidAccountError=o;var i=function(t){e(InvalidJWTTokenError,t);function InvalidJWTTokenError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31204;o.description="Invalid JWT token";o.explanation="";o.name="InvalidJWTTokenError";o.solutions=[];Object.setPrototypeOf(o,n.InvalidJWTTokenError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return InvalidJWTTokenError}(t.default);n.InvalidJWTTokenError=i;var a=function(t){e(JWTTokenExpiredError,t);function JWTTokenExpiredError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31205;o.description="JWT token expired";o.explanation="";o.name="JWTTokenExpiredError";o.solutions=[];Object.setPrototypeOf(o,n.JWTTokenExpiredError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return JWTTokenExpiredError}(t.default);n.JWTTokenExpiredError=a;var s=function(t){e(RateExceededError,t);function RateExceededError(e,r){var o=t.call(this,e,r)||this;o.causes=["Rate limit exceeded."];o.code=31206;o.description="Rate exceeded authorized limit.";o.explanation="The request performed exceeds the authorized limit.";o.name="RateExceededError";o.solutions=["Ensure message send rate does not exceed authorized limits."];Object.setPrototypeOf(o,n.RateExceededError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return RateExceededError}(t.default);n.RateExceededError=s;var c=function(t){e(JWTTokenExpirationTooLongError,t);function JWTTokenExpirationTooLongError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=31207;o.description="JWT token expiration too long";o.explanation="";o.name="JWTTokenExpirationTooLongError";o.solutions=[];Object.setPrototypeOf(o,n.JWTTokenExpirationTooLongError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return JWTTokenExpirationTooLongError}(t.default);n.JWTTokenExpirationTooLongError=c;var u=function(t){e(PayloadSizeExceededError,t);function PayloadSizeExceededError(e,r){var o=t.call(this,e,r)||this;o.causes=["The payload size of Call Message Event exceeds the authorized limit."];o.code=31209;o.description="Call Message Event Payload size exceeded authorized limit.";o.explanation="The request performed to send a Call Message Event exceeds the payload size authorized limit";o.name="PayloadSizeExceededError";o.solutions=["Reduce payload size of Call Message Event to be within the authorized limit and try again."];Object.setPrototypeOf(o,n.PayloadSizeExceededError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return PayloadSizeExceededError}(t.default);n.PayloadSizeExceededError=u})(n=u.AuthorizationErrors||(u.AuthorizationErrors={}));var c;(function(n){var r=function(t){e(PermissionDeniedError,t);function PermissionDeniedError(e,r){var o=t.call(this,e,r)||this;o.causes=["The user denied the getUserMedia request.","The browser denied the getUserMedia request."];o.code=31401;o.description="UserMedia Permission Denied Error";o.explanation="The browser or end-user denied permissions to user media. Therefore we were unable to acquire input audio.";o.name="PermissionDeniedError";o.solutions=["The user should accept the request next time prompted. If the browser saved the deny, the user should change that permission in their browser.","The user should to verify that the browser has permission to access the microphone at this address."];Object.setPrototypeOf(o,n.PermissionDeniedError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return PermissionDeniedError}(t.default);n.PermissionDeniedError=r;var o=function(t){e(AcquisitionFailedError,t);function AcquisitionFailedError(e,r){var o=t.call(this,e,r)||this;o.causes=["NotFoundError - The deviceID specified was not found.","The getUserMedia constraints were overconstrained and no devices matched."];o.code=31402;o.description="UserMedia Acquisition Failed Error";o.explanation="The browser and end-user allowed permissions, however getting the media failed. Usually this is due to bad constraints, but can sometimes fail due to browser, OS or hardware issues.";o.name="AcquisitionFailedError";o.solutions=["Ensure the deviceID being specified exists.","Try acquiring media with fewer constraints."];Object.setPrototypeOf(o,n.AcquisitionFailedError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return AcquisitionFailedError}(t.default);n.AcquisitionFailedError=o})(c=u.UserMediaErrors||(u.UserMediaErrors={}));var d;(function(n){var r=function(t){e(ConnectionError,t);function ConnectionError(e,r){var o=t.call(this,e,r)||this;o.causes=[];o.code=53e3;o.description="Signaling connection error";o.explanation="Raised whenever a signaling connection error occurs that is not covered by a more specific error code.";o.name="ConnectionError";o.solutions=[];Object.setPrototypeOf(o,n.ConnectionError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ConnectionError}(t.default);n.ConnectionError=r;var o=function(t){e(ConnectionDisconnected,t);function ConnectionDisconnected(e,r){var o=t.call(this,e,r)||this;o.causes=["The device running your application lost its Internet connection."];o.code=53001;o.description="Signaling connection disconnected";o.explanation="Raised whenever the signaling connection is unexpectedly disconnected.";o.name="ConnectionDisconnected";o.solutions=["Ensure the device running your application has access to a stable Internet connection."];Object.setPrototypeOf(o,n.ConnectionDisconnected.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ConnectionDisconnected}(t.default);n.ConnectionDisconnected=o})(d=u.SignalingErrors||(u.SignalingErrors={}));var p;(function(n){var r=function(t){e(ClientLocalDescFailed,t);function ClientLocalDescFailed(e,r){var o=t.call(this,e,r)||this;o.causes=["The Client may not be using a supported WebRTC implementation.","The Client may not have the necessary resources to create or apply a new media description."];o.code=53400;o.description="Client is unable to create or apply a local media description";o.explanation="Raised whenever a Client is unable to create or apply a local media description.";o.name="ClientLocalDescFailed";o.solutions=["If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation."];Object.setPrototypeOf(o,n.ClientLocalDescFailed.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ClientLocalDescFailed}(t.default);n.ClientLocalDescFailed=r;var o=function(t){e(ClientRemoteDescFailed,t);function ClientRemoteDescFailed(e,r){var o=t.call(this,e,r)||this;o.causes=["The Client may not be using a supported WebRTC implementation.","The Client may be connecting peer-to-peer with another Participant that is not using a supported WebRTC implementation.","The Client may not have the necessary resources to apply a new media description."];o.code=53402;o.description="Client is unable to apply a remote media description";o.explanation="Raised whenever the Client receives a remote media description but is unable to apply it.";o.name="ClientRemoteDescFailed";o.solutions=["If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation."];Object.setPrototypeOf(o,n.ClientRemoteDescFailed.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ClientRemoteDescFailed}(t.default);n.ClientRemoteDescFailed=o;var i=function(t){e(ConnectionError,t);function ConnectionError(e,r){var o=t.call(this,e,r)||this;o.causes=["The Client was unable to establish a media connection.","A media connection which was active failed liveliness checks."];o.code=53405;o.description="Media connection failed";o.explanation="Raised by the Client or Server whenever a media connection fails.";o.name="ConnectionError";o.solutions=["If the problem persists, try connecting to another region.","Check your Client's network connectivity.","If you've provided custom ICE Servers then ensure that the URLs and credentials are valid."];Object.setPrototypeOf(o,n.ConnectionError.prototype);var i=typeof e==="string"?e:o.explanation;var a=typeof e==="object"?e:r;o.message=o.name+" ("+o.code+"): "+i;o.originalError=a;return o}return ConnectionError}(t.default);n.ConnectionError=i})(p=u.MediaErrors||(u.MediaErrors={}));u.errorsByCode=new Map([[20101,n.AccessTokenInvalid],[20104,n.AccessTokenExpired],[20151,n.AuthenticationFailed],[31202,r.AccessTokenSignatureValidationFailed],[31400,o.BadRequest],[31404,o.NotFound],[31480,o.TemporarilyUnavailable],[31486,o.BusyHere],[31603,i.Decline],[31e3,a.UnknownError],[31001,a.ApplicationNotFoundError],[31002,a.ConnectionDeclinedError],[31003,a.ConnectionTimeoutError],[31005,a.ConnectionError],[31008,a.CallCancelledError],[31009,a.TransportError],[31100,s.MalformedRequestError],[31101,s.MissingParameterArrayError],[31102,s.AuthorizationTokenMissingError],[31103,s.MaxParameterLengthExceededError],[31104,s.InvalidBridgeTokenError],[31105,s.InvalidClientNameError],[31107,s.ReconnectParameterInvalidError],[31201,n.AuthorizationError],[31203,n.NoValidAccountError],[31204,n.InvalidJWTTokenError],[31205,n.JWTTokenExpiredError],[31206,n.RateExceededError],[31207,n.JWTTokenExpirationTooLongError],[31209,n.PayloadSizeExceededError],[31401,c.PermissionDeniedError],[31402,c.AcquisitionFailedError],[53e3,d.ConnectionError],[53001,d.ConnectionDisconnected],[53400,p.ClientLocalDescFailed],[53402,p.ClientRemoteDescFailed],[53405,p.ConnectionError]]);Object.freeze(u.errorsByCode);return u}var d={},p=false;function dew$y(){if(p)return d;p=true;var e=d&&d.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(d,"__esModule",{value:true});d.UserMediaErrors=d.TwilioError=d.SIPServerErrors=d.SignatureValidationErrors=d.SignalingErrors=d.MediaErrors=d.MalformedRequestErrors=d.GeneralErrors=d.ClientErrors=d.AuthorizationErrors=d.hasErrorByCode=d.getErrorByCode=d.NotSupportedError=d.InvalidStateError=d.InvalidArgumentError=d.getPreciseSignalingErrorByCode=void 0;var t=dew$z();Object.defineProperty(d,"AuthorizationErrors",{enumerable:true,get:function(){return t.AuthorizationErrors}});Object.defineProperty(d,"ClientErrors",{enumerable:true,get:function(){return t.ClientErrors}});Object.defineProperty(d,"GeneralErrors",{enumerable:true,get:function(){return t.GeneralErrors}});Object.defineProperty(d,"MalformedRequestErrors",{enumerable:true,get:function(){return t.MalformedRequestErrors}});Object.defineProperty(d,"MediaErrors",{enumerable:true,get:function(){return t.MediaErrors}});Object.defineProperty(d,"SignalingErrors",{enumerable:true,get:function(){return t.SignalingErrors}});Object.defineProperty(d,"SignatureValidationErrors",{enumerable:true,get:function(){return t.SignatureValidationErrors}});Object.defineProperty(d,"SIPServerErrors",{enumerable:true,get:function(){return t.SIPServerErrors}});Object.defineProperty(d,"TwilioError",{enumerable:true,get:function(){return t.TwilioError}});Object.defineProperty(d,"UserMediaErrors",{enumerable:true,get:function(){return t.UserMediaErrors}});var n=new Set([31001,31002,31003,31101,31102,31103,31104,31105,31107,31201,31202,31203,31204,31205,31207,31404,31480,31486,31603]);function getPreciseSignalingErrorByCode(e,t){if(typeof t==="number"&&hasErrorByCode(t)){var r=!!e||!n.has(t);if(r)return getErrorByCode(t)}}d.getPreciseSignalingErrorByCode=getPreciseSignalingErrorByCode;var r=function(t){e(InvalidArgumentError,t);function InvalidArgumentError(e){var n=t.call(this,e)||this;n.name="InvalidArgumentError";return n}return InvalidArgumentError}(Error);d.InvalidArgumentError=r;var o=function(t){e(InvalidStateError,t);function InvalidStateError(e){var n=t.call(this,e)||this;n.name="InvalidStateError";return n}return InvalidStateError}(Error);d.InvalidStateError=o;var i=function(t){e(NotSupportedError,t);function NotSupportedError(e){var n=t.call(this,e)||this;n.name="NotSupportedError";return n}return NotSupportedError}(Error);d.NotSupportedError=i;function getErrorByCode(e){var n=t.errorsByCode.get(e);if(!n)throw new r("Error code "+e+" not found");return n}d.getErrorByCode=getErrorByCode;function hasErrorByCode(e){return t.errorsByCode.has(e)}d.hasErrorByCode=hasErrorByCode;return d}var f={},h=false;function dew$x(){if(h)return f;h=true;Object.defineProperty(f,"__esModule",{value:true});f.SOUNDS_BASE_URL=f.RELEASE_VERSION=f.PACKAGE_NAME=f.ECHO_TEST_DURATION=f.COWBELL_AUDIO_URL=void 0;var e="@twilio/voice-sdk";f.PACKAGE_NAME=e;var t="2.10.1";f.RELEASE_VERSION=t;var n="https://sdk.twilio.com/js/client/sounds/releases/1.0.0";f.SOUNDS_BASE_URL=n;var r=n+"/cowbell.mp3?cache="+t;f.COWBELL_AUDIO_URL=r;var o=2e4;f.ECHO_TEST_DURATION=o;return f}var v=t;try{"default"in t&&(v=t.default)}catch(e){}var m={},g=false;function dew$w(){if(g)return m;g=true;var e=m&&m.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,s=i.length;a<s;a++,o++)r[o]=i[a];return r};Object.defineProperty(m,"__esModule",{value:true});m.Logger=void 0;var t=v;var n=dew$x();var r=function(){
/**
     * @constructor
     * @param [tag] - tag name for the logs
     * @param [options] - Optional settings
     */
function Log(e,t){this._log=Log.getLogLevelInstance(t);this._prefix="[TwilioVoice]["+e+"]"}
/**
     * Return the `loglevel` instance maintained internally.
     * @param [options] - Optional settings
     * @returns The `loglevel` instance.
     */Log.getLogLevelInstance=function(e){if(!Log.loglevelInstance)try{Log.loglevelInstance=(e&&e.LogLevelModule?e.LogLevelModule:t).getLogger(n.PACKAGE_NAME)}catch(e){console.warn("Cannot create custom logger");Log.loglevelInstance=console}return Log.loglevelInstance};
/**
     * Log a debug message
     * @param args - Any number of arguments to be passed to loglevel.debug
     */Log.prototype.debug=function(){var t;var n=[];for(var r=0;r<arguments.length;r++)n[r]=arguments[r];(t=this._log).debug.apply(t,e([this._prefix],n))};
/**
     * Log an error message
     * @param args - Any number of arguments to be passed to loglevel.error
     */Log.prototype.error=function(){var t;var n=[];for(var r=0;r<arguments.length;r++)n[r]=arguments[r];(t=this._log).error.apply(t,e([this._prefix],n))};
/**
     * Log an info message
     * @param args - Any number of arguments to be passed to loglevel.info
     */Log.prototype.info=function(){var t;var n=[];for(var r=0;r<arguments.length;r++)n[r]=arguments[r];(t=this._log).info.apply(t,e([this._prefix],n))};Log.prototype.setDefaultLevel=function(e){this._log.setDefaultLevel?this._log.setDefaultLevel(e):console.warn("Logger cannot setDefaultLevel")};
/**
     * Log a warning message
     * @param args - Any number of arguments to be passed to loglevel.warn
     */Log.prototype.warn=function(){var t;var n=[];for(var r=0;r<arguments.length;r++)n[r]=arguments[r];(t=this._log).warn.apply(t,e([this._prefix],n))};Log.levels=t.levels;return Log}();m.Logger=r.getLogLevelInstance();m.default=r;return m}var _={},y=false;function dew$v(){if(y)return _;y=true;Object.defineProperty(_,"__esModule",{value:true});var e=dew$x();var t=dew$y();var n=dew$w();var r=e.SOUNDS_BASE_URL+"/outgoing.mp3";var o=function(){function OutputDeviceCollection(e,t,r,o){this._name=e;this._availableDevices=t;this._beforeChange=r;this._isSupported=o;this._activeDevices=new Set;this._log=new n.default("OutputDeviceCollection")}
/**
     * Delete a device from the collection. If no devices remain, the 'default'
     * device will be added as the sole device. If no `default` device exists,
     * the first available device will be used.
     * @param device - The device to delete from the collection
     * @returns whether the device was present before it was deleted
     */OutputDeviceCollection.prototype.delete=function(e){this._log.debug(".delete",e);var t=!!this._activeDevices.delete(e);var n=this._availableDevices.get("default")||Array.from(this._availableDevices.values())[0];!this._activeDevices.size&&n&&this._activeDevices.add(n);var r=Array.from(this._activeDevices.values()).map((function(e){return e.deviceId}));this._beforeChange(this._name,r);return!!t};OutputDeviceCollection.prototype.get=function(){return this._activeDevices};
/**
     * Replace the current set of devices with a new set of devices.
     * @param deviceIdOrIds - An ID or array of IDs of devices to replace the existing devices with.
     * @returns Rejects if this feature is not supported, any of the supplied IDs are not found,
     * or no IDs are passed.
     */OutputDeviceCollection.prototype.set=function(e){var n=this;this._log.debug(".set",e);if(!this._isSupported)return Promise.reject(new t.NotSupportedError("This browser does not support audio output selection"));var r=Array.isArray(e)?e:[e];if(!r.length)return Promise.reject(new t.InvalidArgumentError("Must specify at least one device to set"));var o=[];var i=r.map((function(e){var t=n._availableDevices.get(e);t||o.push(e);return t}));return o.length?Promise.reject(new t.InvalidArgumentError("Devices not found: "+o.join(", "))):new Promise((function(e){e(n._beforeChange(n._name,r))})).then((function(){n._activeDevices.clear();i.forEach(n._activeDevices.add,n._activeDevices)}))};
/**
     * Test the devices by playing audio through them.
     * @param [soundUrl] - An optional URL. If none is specified, we will
     *   play a default test tone.
     * @returns Resolves with the result of the underlying HTMLAudioElements' play() calls.
     */OutputDeviceCollection.prototype.test=function(e){e===void 0&&(e=r);return this._isSupported?this._activeDevices.size?Promise.all(Array.from(this._activeDevices).map((function(t){var n;return new Promise((function(t){n=new Audio(e);n.oncanplay=t})).then((function(){return n.setSinkId(t.deviceId).then((function(){return n.play()}))}))}))):Promise.reject(new t.InvalidStateError("No active output devices to test")):Promise.reject(new t.NotSupportedError("This browser does not support audio output selection"))};return OutputDeviceCollection}();_.default=o;return _}var S={},b=false;function dew$u(){if(b)return S;b=true;Object.defineProperty(S,"__esModule",{value:true});var e=function(){function MediaDeviceInfoShim(e){Object.defineProperties(this,{deviceId:{get:function(){return e.deviceId}},groupId:{get:function(){return e.groupId}},kind:{get:function(){return e.kind}},label:{get:function(){return e.label}}})}return MediaDeviceInfoShim}();S.default=e;return S}var C={},w=false;var E=typeof globalThis!=="undefined"?globalThis:typeof self!=="undefined"?self:global;function dew$t(){if(w)return C;w=true;Object.defineProperty(C,"__esModule",{value:true});C.promisifyEvents=C.flatMap=C.queryToJson=C.isUnifiedPlanDefault=C.isSafari=C.isLegacyEdge=C.isFirefox=C.isChrome=C.isElectron=C.difference=C.average=C.Exception=void 0;
/**
   * Exception class.
   * @class
   * @name Exception
   * @exports Exception as Twilio.Exception
   * @memberOf Twilio
   * @param {string} message The exception message
   */function TwilioException(e){if(!(this instanceof TwilioException))return new TwilioException(e);this.message=e}TwilioException.prototype.toString=function(){return"Twilio.Exception: "+this.message};function average(e){return e&&e.length?e.reduce((function(e,t){return e+t}))/e.length:0}C.average=average;function difference(e,t,n){n=n||function(e){return e};var r=new Set(t.map(n));return e.filter((function(e){return!r.has(n(e))}))}C.difference=difference;function isElectron(e){return!!e.userAgent.match("Electron")}C.isElectron=isElectron;function isChrome(e,t){var n=!!t.userAgent.match("CriOS");var r=!!t.userAgent.match("HeadlessChrome");var o=typeof e.chrome!=="undefined"&&t.vendor==="Google Inc."&&t.userAgent.indexOf("OPR")===-1&&t.userAgent.indexOf("Edge")===-1;return n||isElectron(t)||o||r}C.isChrome=isChrome;function isFirefox(e){e=e||(typeof window==="undefined"?E.navigator:window.navigator);return!!e&&typeof e.userAgent==="string"&&/firefox|fxios/i.test(e.userAgent)}C.isFirefox=isFirefox;function isLegacyEdge(e){e=e||(typeof window==="undefined"?E.navigator:window.navigator);return!!e&&typeof e.userAgent==="string"&&/edge\/\d+/i.test(e.userAgent)}C.isLegacyEdge=isLegacyEdge;function isSafari(e){return!!e.vendor&&e.vendor.indexOf("Apple")!==-1&&e.userAgent&&e.userAgent.indexOf("CriOS")===-1&&e.userAgent.indexOf("FxiOS")===-1}C.isSafari=isSafari;function isUnifiedPlanDefault(e,t,n,r){if(typeof e==="undefined"||typeof t==="undefined"||typeof n==="undefined"||typeof r==="undefined"||typeof n.prototype==="undefined"||typeof r.prototype==="undefined")return false;if(isChrome(e,t)&&n.prototype.addTransceiver){var o=new n;var i=true;try{o.addTransceiver("audio")}catch(e){i=false}o.close();return i}return!!isFirefox(t)||!!isSafari(t)&&"currentDirection"in r.prototype}C.isUnifiedPlanDefault=isUnifiedPlanDefault;function queryToJson(e){return e?e.split("&").reduce((function(e,t){var n=t.split("=");var r=n[0];var o=decodeURIComponent((n[1]||"").replace(/\+/g,"%20"));r&&(e[r]=o);return e}),{}):""}C.queryToJson=queryToJson;
/**
   * Map a list to an array of arrays, and return the flattened result.
   * @param {Array<*>|Set<*>|Map<*>} list
   * @param {function(*): Array<*>} [mapFn]
   * @returns Array<*>
   */function flatMap(e,t){var n=e instanceof Map||e instanceof Set?Array.from(e.values()):e;t=t||function(e){return e};return n.reduce((function(e,n){var r=t(n);return e.concat(r)}),[])}C.flatMap=flatMap;function promisifyEvents(e,t,n){return new Promise((function(r,o){function resolveHandler(){e.removeListener(n,rejectHandler);r()}function rejectHandler(){e.removeListener(t,resolveHandler);o()}e.once(t,resolveHandler);e.once(n,rejectHandler)}))}C.promisifyEvents=promisifyEvents;var e=TwilioException;C.Exception=e;return C}var T=e;try{"default"in e&&(T=e.default)}catch(e){}var P={},I=false;function dew$s(){if(I)return P;I=true;var e=P&&P.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(P,"__esModule",{value:true});var t=T;var n=dew$5();var r=dew$y();var o=dew$w();var i=dew$v();var a=dew$u();var s=dew$t();var c={audioinput:"Audio Input",audiooutput:"Audio Output"};var u=function(t){e(AudioHelper,t);
/**
     * @constructor
     * @private
     * @param onActiveOutputsChanged - A callback to be called when the user changes the active output devices.
     * @param onActiveInputChanged - A callback to be called when the user changes the active input device.
     * @param [options]
     */function AudioHelper(e,r,a){var s;var c=t.call(this)||this;c.availableInputDevices=new Map;c.availableOutputDevices=new Map;c._audioConstraints=null;c._defaultInputDeviceStream=null;c._enabledSounds=(s={},s[n.default.SoundName.Disconnect]=true,s[n.default.SoundName.Incoming]=true,s[n.default.SoundName.Outgoing]=true,s);c._inputDevice=null;c._isPollingInputVolume=false;c._log=new o.default("AudioHelper");c._processedStream=null;c._selectedInputDeviceStream=null;c._unknownDeviceIndexes={audioinput:{},audiooutput:{}};c._updateAvailableDevices=function(){return c._mediaDevices&&c._enumerateDevices?c._enumerateDevices().then((function(e){c._updateDevices(e.filter((function(e){return e.kind==="audiooutput"})),c.availableOutputDevices,c._removeLostOutput);c._updateDevices(e.filter((function(e){return e.kind==="audioinput"})),c.availableInputDevices,c._removeLostInput);var t=c.availableOutputDevices.get("default")||Array.from(c.availableOutputDevices.values())[0];[c.speakerDevices,c.ringtoneDevices].forEach((function(e){!e.get().size&&c.availableOutputDevices.size&&c.isOutputSelectionSupported&&e.set(t.deviceId).catch((function(e){c._log.warn("Unable to set audio output devices. "+e)}))}))})):Promise.reject("Enumeration not supported")};
/**
       * Remove an input device from inputs
       * @param lostDevice
       * @returns Whether the device was active
       */c._removeLostInput=function(e){if(!c.inputDevice||c.inputDevice.deviceId!==e.deviceId)return false;c._destroyProcessedStream();c._replaceStream(null);c._inputDevice=null;c._maybeStopPollingVolume();var t=c.availableInputDevices.get("default")||Array.from(c.availableInputDevices.values())[0];t&&c.setInputDevice(t.deviceId);return true};
/**
       * Remove an input device from outputs
       * @param lostDevice
       * @returns Whether the device was active
       */c._removeLostOutput=function(e){var t=c.speakerDevices.delete(e);var n=c.ringtoneDevices.delete(e);return t||n};a=Object.assign({AudioContext:typeof AudioContext!=="undefined"&&AudioContext,setSinkId:typeof HTMLAudioElement!=="undefined"&&HTMLAudioElement.prototype.setSinkId},a);c._updateUserOptions(a);c._audioProcessorEventObserver=a.audioProcessorEventObserver;c._mediaDevices=a.mediaDevices||navigator.mediaDevices;c._onActiveInputChanged=r;c._enumerateDevices=typeof a.enumerateDevices==="function"?a.enumerateDevices:c._mediaDevices&&c._mediaDevices.enumerateDevices.bind(c._mediaDevices);var u=!!(a.AudioContext||a.audioContext);var l=!!c._enumerateDevices;a.enabledSounds&&(c._enabledSounds=a.enabledSounds);var d=typeof a.setSinkId==="function";c.isOutputSelectionSupported=l&&d;c.isVolumeSupported=u;if(c.isVolumeSupported){c._audioContext=a.audioContext||a.AudioContext&&new a.AudioContext;if(c._audioContext){c._inputVolumeAnalyser=c._audioContext.createAnalyser();c._inputVolumeAnalyser.fftSize=32;c._inputVolumeAnalyser.smoothingTimeConstant=.3}}c.ringtoneDevices=new i.default("ringtone",c.availableOutputDevices,e,c.isOutputSelectionSupported);c.speakerDevices=new i.default("speaker",c.availableOutputDevices,e,c.isOutputSelectionSupported);c.addListener("newListener",(function(e){e==="inputVolume"&&c._maybeStartPollingVolume()}));c.addListener("removeListener",(function(e){e==="inputVolume"&&c._maybeStopPollingVolume()}));c.once("newListener",(function(){c.isOutputSelectionSupported||c._log.warn("Warning: This browser does not support audio output selection.");c.isVolumeSupported||c._log.warn("Warning: This browser does not support Twilio's volume indicator feature.")}));l&&c._initializeEnumeration();return c}Object.defineProperty(AudioHelper.prototype,"audioConstraints",{get:function(){return this._audioConstraints},enumerable:false,configurable:true});Object.defineProperty(AudioHelper.prototype,"inputDevice",{get:function(){return this._inputDevice},enumerable:false,configurable:true});Object.defineProperty(AudioHelper.prototype,"inputStream",{get:function(){return this._processedStream||this._selectedInputDeviceStream},enumerable:false,configurable:true});Object.defineProperty(AudioHelper.prototype,"processedStream",{get:function(){return this._processedStream},enumerable:false,configurable:true});AudioHelper.prototype._destroy=function(){this._stopDefaultInputDeviceStream();this._stopSelectedInputDeviceStream();this._destroyProcessedStream();this._maybeStopPollingVolume();this.removeAllListeners();this._unbind()};AudioHelper.prototype._maybeStartPollingVolume=function(){var e=this;if(this.isVolumeSupported&&this.inputStream){this._updateVolumeSource();if(!this._isPollingInputVolume&&this._inputVolumeAnalyser){var t=this._inputVolumeAnalyser.frequencyBinCount;var n=new Uint8Array(t);this._isPollingInputVolume=true;var emitVolume=function(){if(e._isPollingInputVolume){if(e._inputVolumeAnalyser){e._inputVolumeAnalyser.getByteFrequencyData(n);var t=s.average(n);e.emit("inputVolume",t/255)}requestAnimationFrame(emitVolume)}};requestAnimationFrame(emitVolume)}}};AudioHelper.prototype._maybeStopPollingVolume=function(){if(this.isVolumeSupported&&!(!this._isPollingInputVolume||this.inputStream&&this.listenerCount("inputVolume"))){if(this._inputVolumeSource){this._inputVolumeSource.disconnect();delete this._inputVolumeSource}this._isPollingInputVolume=false}};AudioHelper.prototype._openDefaultDeviceWithConstraints=function(e){var t=this;this._log.info("Opening default device with constraints",e);return this._getUserMedia(e).then((function(e){t._log.info("Opened default device. Updating available devices.");t._updateAvailableDevices().catch((function(e){t._log.warn("Unable to updateAvailableDevices after gUM call",e)}));t._defaultInputDeviceStream=e;return t._maybeCreateProcessedStream(e)}))};AudioHelper.prototype._stopDefaultInputDeviceStream=function(){if(this._defaultInputDeviceStream){this._log.info("stopping default device stream");this._defaultInputDeviceStream.getTracks().forEach((function(e){return e.stop()}));this._defaultInputDeviceStream=null;this._destroyProcessedStream()}};AudioHelper.prototype._unbind=function(){if(!this._mediaDevices||!this._enumerateDevices)throw new r.NotSupportedError("Enumeration is not supported");this._mediaDevices.removeEventListener&&this._mediaDevices.removeEventListener("devicechange",this._updateAvailableDevices)};AudioHelper.prototype._updateUserOptions=function(e){typeof e.enumerateDevices==="function"&&(this._enumerateDevices=e.enumerateDevices);typeof e.getUserMedia==="function"&&(this._getUserMedia=e.getUserMedia)};
/**
     * Adds an {@link AudioProcessor} object. Once added, the AudioHelper will route
     * the input audio stream through the processor before sending the audio
     * stream to Twilio. Only one AudioProcessor can be added at this time.
     *
     * See the {@link AudioProcessor} interface for an example.
     *
     * @param processor The AudioProcessor to add.
     * @returns
     */AudioHelper.prototype.addProcessor=function(e){this._log.debug(".addProcessor");if(this._processor)throw new r.NotSupportedError("Adding multiple AudioProcessors is not supported at this time.");if(typeof e!=="object"||e===null)throw new r.InvalidArgumentError("Missing AudioProcessor argument.");if(typeof e.createProcessedStream!=="function")throw new r.InvalidArgumentError("Missing createProcessedStream() method.");if(typeof e.destroyProcessedStream!=="function")throw new r.InvalidArgumentError("Missing destroyProcessedStream() method.");this._processor=e;this._audioProcessorEventObserver.emit("add");return this._restartStreams()};
/**
     * Enable or disable the disconnect sound.
     * @param doEnable Passing `true` will enable the sound and `false` will disable the sound.
     * Not passing this parameter will not alter the enable-status of the sound.
     * @returns The enable-status of the sound.
     */AudioHelper.prototype.disconnect=function(e){this._log.debug(".disconnect",e);return this._maybeEnableSound(n.default.SoundName.Disconnect,e)};
/**
     * Enable or disable the incoming sound.
     * @param doEnable Passing `true` will enable the sound and `false` will disable the sound.
     * Not passing this parameter will not alter the enable-status of the sound.
     * @returns The enable-status of the sound.
     */AudioHelper.prototype.incoming=function(e){this._log.debug(".incoming",e);return this._maybeEnableSound(n.default.SoundName.Incoming,e)};
/**
     * Enable or disable the outgoing sound.
     * @param doEnable Passing `true` will enable the sound and `false` will disable the sound.
     * Not passing this parameter will not alter the enable-status of the sound.
     * @returns The enable-status of the sound.
     */AudioHelper.prototype.outgoing=function(e){this._log.debug(".outgoing",e);return this._maybeEnableSound(n.default.SoundName.Outgoing,e)};
/**
     * Removes an {@link AudioProcessor}. Once removed, the AudioHelper will start using
     * the audio stream from the selected input device for existing or future calls.
     *
     * @param processor The AudioProcessor to remove.
     * @returns
     */AudioHelper.prototype.removeProcessor=function(e){this._log.debug(".removeProcessor");if(typeof e!=="object"||e===null)throw new r.InvalidArgumentError("Missing AudioProcessor argument.");if(this._processor!==e)throw new r.InvalidArgumentError("Cannot remove an AudioProcessor that has not been previously added.");this._destroyProcessedStream();this._processor=null;this._audioProcessorEventObserver.emit("remove");return this._restartStreams()};
/**
     * Set the MediaTrackConstraints to be applied on every getUserMedia call for new input
     * device audio. Any deviceId specified here will be ignored. Instead, device IDs should
     * be specified using {@link AudioHelper#setInputDevice}. The returned Promise resolves
     * when the media is successfully reacquired, or immediately if no input device is set.
     * @param audioConstraints - The MediaTrackConstraints to apply.
     */AudioHelper.prototype.setAudioConstraints=function(e){this._log.debug(".setAudioConstraints",e);this._audioConstraints=Object.assign({},e);delete this._audioConstraints.deviceId;return this.inputDevice?this._setInputDevice(this.inputDevice.deviceId,true):Promise.resolve()};
/**
     * Replace the current input device with a new device by ID.
     * @param deviceId - An ID of a device to replace the existing
     *   input device with.
     */AudioHelper.prototype.setInputDevice=function(e){this._log.debug(".setInputDevice",e);return this._setInputDevice(e,false)};AudioHelper.prototype.unsetAudioConstraints=function(){this._log.debug(".unsetAudioConstraints");this._audioConstraints=null;return this.inputDevice?this._setInputDevice(this.inputDevice.deviceId,true):Promise.resolve()};AudioHelper.prototype.unsetInputDevice=function(){var e=this;this._log.debug(".unsetInputDevice",this.inputDevice);if(!this.inputDevice)return Promise.resolve();this._destroyProcessedStream();return this._onActiveInputChanged(null).then((function(){e._replaceStream(null);e._inputDevice=null;e._maybeStopPollingVolume()}))};AudioHelper.prototype._destroyProcessedStream=function(){if(this._processor&&this._processedStream){this._log.info("destroying processed stream");var e=this._processedStream;this._processedStream.getTracks().forEach((function(e){return e.stop()}));this._processedStream=null;this._processor.destroyProcessedStream(e);this._audioProcessorEventObserver.emit("destroy")}};
/**
     * Get the index of an un-labeled Device.
     * @param mediaDeviceInfo
     * @returns The index of the passed MediaDeviceInfo
     */AudioHelper.prototype._getUnknownDeviceIndex=function(e){var t=e.deviceId;var n=e.kind;var r=this._unknownDeviceIndexes[n][t];if(!r){r=Object.keys(this._unknownDeviceIndexes[n]).length+1;this._unknownDeviceIndexes[n][t]=r}return r};AudioHelper.prototype._initializeEnumeration=function(){var e=this;if(!this._mediaDevices||!this._enumerateDevices)throw new r.NotSupportedError("Enumeration is not supported");this._mediaDevices.addEventListener&&this._mediaDevices.addEventListener("devicechange",this._updateAvailableDevices);this._updateAvailableDevices().then((function(){e.isOutputSelectionSupported&&Promise.all([e.speakerDevices.set("default"),e.ringtoneDevices.set("default")]).catch((function(t){e._log.warn("Warning: Unable to set audio output devices. "+t)}))}))};AudioHelper.prototype._maybeCreateProcessedStream=function(e){var t=this;if(this._processor){this._log.info("Creating processed stream");return this._processor.createProcessedStream(e).then((function(e){t._processedStream=e;t._audioProcessorEventObserver.emit("create");return t._processedStream}))}return Promise.resolve(e)};
/**
     * Set whether the sound is enabled or not
     * @param soundName
     * @param doEnable
     * @returns Whether the sound is enabled or not
     */AudioHelper.prototype._maybeEnableSound=function(e,t){typeof t!=="undefined"&&(this._enabledSounds[e]=t);return this._enabledSounds[e]};
/**
     * Stop the tracks on the current input stream before replacing it with the passed stream.
     * @param stream - The new stream
     */AudioHelper.prototype._replaceStream=function(e){this._log.info("Replacing with new stream.");if(this._selectedInputDeviceStream){this._log.info("Old stream detected. Stopping tracks.");this._stopSelectedInputDeviceStream()}this._selectedInputDeviceStream=e};AudioHelper.prototype._restartStreams=function(){if(this.inputDevice&&this._selectedInputDeviceStream){this._log.info("Restarting selected input device");return this._setInputDevice(this.inputDevice.deviceId,true)}if(this._defaultInputDeviceStream){var e=this.availableInputDevices.get("default")||Array.from(this.availableInputDevices.values())[0];this._log.info("Restarting default input device, now becoming selected.");return this._setInputDevice(e.deviceId,true)}return Promise.resolve()};
/**
     * Replace the current input device with a new device by ID.
     * @param deviceId - An ID of a device to replace the existing
     *   input device with.
     * @param forceGetUserMedia - If true, getUserMedia will be called even if
     *   the specified device is already active.
     */AudioHelper.prototype._setInputDevice=function(e,t){var n=this;if(typeof e!=="string")return Promise.reject(new r.InvalidArgumentError("Must specify the device to set"));var o=this.availableInputDevices.get(e);if(!o)return Promise.reject(new r.InvalidArgumentError("Device not found: "+e));this._log.info("Setting input device. ID: "+e);if(this._inputDevice&&this._inputDevice.deviceId===e&&this._selectedInputDeviceStream){if(!t)return Promise.resolve();this._log.info("Same track detected on setInputDevice, stopping old tracks.");this._stopSelectedInputDeviceStream()}this._stopDefaultInputDeviceStream();var i={audio:Object.assign({deviceId:{exact:e}},this.audioConstraints)};this._log.info("setInputDevice: getting new tracks.");return this._getUserMedia(i).then((function(e){n._destroyProcessedStream();return n._maybeCreateProcessedStream(e).then((function(t){n._log.info("setInputDevice: invoking _onActiveInputChanged.");return n._onActiveInputChanged(t).then((function(){n._replaceStream(e);n._inputDevice=o;n._maybeStartPollingVolume()}))}))}))};AudioHelper.prototype._stopSelectedInputDeviceStream=function(){if(this._selectedInputDeviceStream){this._log.info("Stopping selected device stream");this._selectedInputDeviceStream.getTracks().forEach((function(e){return e.stop()}))}};
/**
     * Update a set of devices.
     * @param updatedDevices - An updated list of available Devices
     * @param availableDevices - The previous list of available Devices
     * @param removeLostDevice - The method to call if a previously available Device is
     *   no longer available.
     */AudioHelper.prototype._updateDevices=function(e,t,n){var r=this;var o=e.map((function(e){return e.deviceId}));var i=Array.from(t.values()).map((function(e){return e.deviceId}));var a=[];var c=s.difference(i,o);c.forEach((function(e){var r=t.get(e);if(r){t.delete(e);n(r)&&a.push(r)}}));var u=false;e.forEach((function(e){var n=t.get(e.deviceId);var o=r._wrapMediaDeviceInfo(e);if(!n||n.label!==o.label){t.set(e.deviceId,o);u=true}}));if(u||c.length){if(this.inputDevice!==null&&this.inputDevice.deviceId==="default"){this._log.warn("Calling getUserMedia after device change to ensure that the           tracks of the active device (default) have not gone stale.");this._setInputDevice(this.inputDevice.deviceId,true)}this._log.debug("#deviceChange",a);this.emit("deviceChange",a)}};AudioHelper.prototype._updateVolumeSource=function(){if(this.inputStream&&this._audioContext&&this._inputVolumeAnalyser){this._inputVolumeSource&&this._inputVolumeSource.disconnect();try{this._inputVolumeSource=this._audioContext.createMediaStreamSource(this.inputStream);this._inputVolumeSource.connect(this._inputVolumeAnalyser)}catch(e){this._log.warn("Unable to update volume source",e);delete this._inputVolumeSource}}};
/**
     * Convert a MediaDeviceInfo to a IMediaDeviceInfoShim.
     * @param mediaDeviceInfo - The info to convert
     * @returns The converted shim
     */AudioHelper.prototype._wrapMediaDeviceInfo=function(e){var t={deviceId:e.deviceId,groupId:e.groupId,kind:e.kind,label:e.label};if(!t.label)if(t.deviceId==="default")t.label="Default";else{var n=this._getUnknownDeviceIndex(e);t.label="Unknown "+c[t.kind]+" Device "+n}return new a.default(t)};return AudioHelper}(t.EventEmitter);(function(e){})(u||(u={}));P.default=u;return P}var k=e;try{"default"in e&&(k=e.default)}catch(e){}var D={},A=false;function dew$r(){if(A)return D;A=true;var e=D&&D.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(D,"__esModule",{value:true});D.AudioProcessorEventObserver=void 0;var t=k;var n=dew$w();var r=function(t){e(AudioProcessorEventObserver,t);function AudioProcessorEventObserver(){var e=t.call(this)||this;e._log=new n.default("AudioProcessorEventObserver");e._log.info("Creating AudioProcessorEventObserver instance");e.on("enabled",(function(){return e._reEmitEvent("enabled")}));e.on("add",(function(){return e._reEmitEvent("add")}));e.on("remove",(function(){return e._reEmitEvent("remove")}));e.on("create",(function(){return e._reEmitEvent("create-processed-stream")}));e.on("destroy",(function(){return e._reEmitEvent("destroy-processed-stream")}));return e}AudioProcessorEventObserver.prototype.destroy=function(){this.removeAllListeners()};AudioProcessorEventObserver.prototype._reEmitEvent=function(e){this._log.info("AudioProcessor:"+e);this.emit("event",{name:e,group:"audio-processor"})};return AudioProcessorEventObserver}(t.EventEmitter);D.AudioProcessorEventObserver=r;return D}var R={},O=false;function dew$q(){if(O)return R;O=true;Object.defineProperty(R,"__esModule",{value:true});var e=dew$y();var t={dtmf0:[1360,960],dtmf1:[1230,720],dtmf2:[1360,720],dtmf3:[1480,720],dtmf4:[1230,790],dtmf5:[1360,790],dtmf6:[1480,790],dtmf7:[1230,870],dtmf8:[1360,870],dtmf9:[1480,870],dtmfh:[1480,960],dtmfs:[1230,960]};var n=function(){function DialtonePlayer(e){var t=this;this._context=e;this._gainNodes=[];this._gainNodes=[this._context.createGain(),this._context.createGain()];this._gainNodes.forEach((function(e){e.connect(t._context.destination);e.gain.value=.1;t._gainNodes.push(e)}))}DialtonePlayer.prototype.cleanup=function(){this._gainNodes.forEach((function(e){e.disconnect()}))};
/**
     * Play the dual frequency tone for the passed DTMF name.
     * @param sound
     */DialtonePlayer.prototype.play=function(n){var r=this;var o=t[n];if(!o)throw new e.InvalidArgumentError("Invalid DTMF sound name");var i=[this._context.createOscillator(),this._context.createOscillator()];i.forEach((function(e,t){e.type="sine";e.frequency.value=o[t];e.connect(r._gainNodes[t]);e.start();e.stop(r._context.currentTime+.1);e.addEventListener("ended",(function(){return e.disconnect()}))}))};return DialtonePlayer}();R.default=n;return R}var x={},M=false;function dew$p(){if(M)return x;M=true;Object.defineProperty(x,"__esModule",{value:true});function request(e,t,n){var r=JSON.stringify(t.body||{});var o=new Headers;t.headers=t.headers||[];Object.entries(t.headers).forEach((function(e){var t=e[0],n=e[1];return o.append(t,n)}));fetch(t.url,{body:r,headers:o,method:e}).then((function(e){return e.text()}),n).then((function(e){return n(null,e)}),n)}
/**
   * Use XMLHttpRequest to get a network resource.
   * @param {String} method - HTTP Method
   * @param {Object} params - Request parameters
   * @param {String} params.url - URL of the resource
   * @param {Array}  params.headers - An array of headers to pass [{ headerName : headerBody }]
   * @param {Object} params.body - A JSON body to send to the resource
   * @returns {response}
   */var e=request;
/**
   * Sugar function for request('GET', params, callback);
   * @param {Object} params - Request parameters
   * @param {Request~get} callback - The callback that handles the response.
   */e.get=function get(e,t){return new this("GET",e,t)};
/**
   * Sugar function for request('POST', params, callback);
   * @param {Object} params - Request parameters
   * @param {Request~post} callback - The callback that handles the response.
   */e.post=function post(e,t){return new this("POST",e,t)};x.default=e;return x}var j=e;try{"default"in e&&(j=e.default)}catch(e){}var L={},N=false;function dew$o(){if(N)return L;N=true;var e=L&&L.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(L,"__esModule",{value:true});var t=j;var n=dew$w();var r=dew$p();
/**
   * Builds Endpoint Analytics (EA) event payloads and sends them to
   *   the EA server.
   * @constructor
   * @param {String} productName - Name of the product publishing events.
   * @param {String} token - The JWT token to use to authenticate with
   *   the EA server.
   * @param {EventPublisher.Options} options
   * @property {Boolean} isEnabled - Whether or not this publisher is publishing
   *   to the server. Currently ignores the request altogether, in the future this
   *   may store them in case publishing is re-enabled later. Defaults to true.
   */
/**
   * @typedef {Object} EventPublisher.Options
   * @property {Object} [metadata=undefined] - A publisher_metadata object to send
   *   with each payload.
   * @property {String} [host='eventgw.twilio.com'] - The host address of the EA
   *   server to publish to.
   * @property {Object|Function} [defaultPayload] - A default payload to extend
   *   when creating and sending event payloads. Also takes a function that
   *   should return an object representing the default payload. This is
   *   useful for fields that should always be present when they are
   *   available, but are not always available.
   */var o=function(t){e(EventPublisher,t);function EventPublisher(e,o,i){var a=t.call(this)||this;if(!(a instanceof EventPublisher))return new EventPublisher(e,o,i);i=Object.assign({defaultPayload:function(){return{}}},i);var s=i.defaultPayload;typeof s!=="function"&&(s=function(){return Object.assign({},i.defaultPayload)});var c=true;var u=Object.assign({app_name:void 0,app_version:void 0},i.metadata);Object.defineProperties(a,{_defaultPayload:{value:s},_host:{value:i.host,writable:true},_isEnabled:{get:function(){return c},set:function(e){c=e}},_log:{value:new n.default("EventPublisher")},_request:{value:i.request||r.default,writable:true},_token:{value:o,writable:true},isEnabled:{enumerable:true,get:function(){return c}},metadata:{enumerable:true,get:function(){return u}},productName:{enumerable:true,value:e},token:{enumerable:true,get:function(){return this._token}}});return a}return EventPublisher}(t.EventEmitter);
/**
   * Post to an EA server.
   * @private
   * @param {String} endpointName - Endpoint to post the event to
   * @param {String} level - ['debug', 'info', 'warning', 'error']
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {?Object} [payload=null] - The payload to pass. This will be extended
   *    onto the default payload object, if one exists.
   * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.
   * @param {?Boolean} [force=false] - Whether or not to send this even if
   *    publishing is disabled.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype._post=function _post(e,t,n,r,o,i,a){var s=this;if(!this.isEnabled&&!a||!this._host){this._log.debug("Publishing cancelled",JSON.stringify({isEnabled:this.isEnabled,force:a,host:this._host}));return Promise.resolve()}if(!i||(!i.parameters||!i.parameters.CallSid)&&!i.outboundConnectionId){i?this._log.debug("Publishing cancelled. Missing connection info",JSON.stringify({outboundConnectionId:i.outboundConnectionId,parameters:i.parameters})):this._log.debug("Publishing cancelled. Missing connection object");return Promise.resolve()}var c={group:n,level:t.toUpperCase(),name:r,payload:o&&o.forEach?o.slice(0):Object.assign(this._defaultPayload(i),o),payload_type:"application/json",private:false,publisher:this.productName,timestamp:(new Date).toISOString()};this.metadata&&(c.publisher_metadata=this.metadata);e==="EndpointEvents"&&this._log.debug("Publishing insights",JSON.stringify({endpointName:e,event:c,force:a,host:this._host}));var u={body:c,headers:{"Content-Type":"application/json","X-Twilio-Token":this.token},url:"https://"+this._host+"/v4/"+e};return new Promise((function(e,t){s._request.post(u,(function(n){if(n){s.emit("error",n);t(n)}else e()}))})).catch((function(e){s._log.error("Unable to post "+n+" "+r+" event to Insights. Received error: "+e)}))};
/**
   * Post an event to the EA server. Use this method when the level
   *  is dynamic. Otherwise, it's better practice to use the sugar
   *  methods named for the specific level.
   * @param {String} level - ['debug', 'info', 'warning', 'error']
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {?Object} [payload=null] - The payload to pass. This will be extended
   *    onto the default payload object, if one exists.
   * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype.post=function post(e,t,n,r,o,i){return this._post("EndpointEvents",e,t,n,r,o,i)};
/**
   * Post a debug-level event to the EA server.
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {?Object} [payload=null] - The payload to pass. This will be extended
   *    onto the default payload object, if one exists.
   * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype.debug=function debug(e,t,n,r){return this.post("debug",e,t,n,r)};
/**
   * Post an info-level event to the EA server.
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {?Object} [payload=null] - The payload to pass. This will be extended
   *    onto the default payload object, if one exists.
   * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype.info=function info(e,t,n,r){return this.post("info",e,t,n,r)};
/**
   * Post a warning-level event to the EA server.
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {?Object} [payload=null] - The payload to pass. This will be extended
   *    onto the default payload object, if one exists.
   * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype.warn=function warn(e,t,n,r){return this.post("warning",e,t,n,r)};
/**
   * Post an error-level event to the EA server.
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {?Object} [payload=null] - The payload to pass. This will be extended
   *    onto the default payload object, if one exists.
   * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype.error=function error(e,t,n,r){return this.post("error",e,t,n,r)};
/**
   * Post a metrics event to the EA server.
   * @param {String} group - The name of the group the event belongs to.
   * @param {String} name - The designated event name.
   * @param {Array<Object>} metrics - The metrics to post.
   * @param {?Object} [customFields] - Custom fields to append to each payload.
   * @returns {Promise} Fulfilled if the HTTP response is 20x.
   */o.prototype.postMetrics=function postMetrics(e,t,n,r,o){var i=this;return new Promise((function(a){var s=n.map(formatMetric).map((function(e){return Object.assign(e,r)}));a(i._post("EndpointMetrics","info",e,t,s,o))}))};
/**
   * Update the host address of the insights server to publish to.
   * @param {String} host - The new host address of the insights server.
   */o.prototype.setHost=function setHost(e){this._host=e};
/**
   * Update the token to use to authenticate requests.
   * @param {string} token
   * @returns {void}
   */o.prototype.setToken=function setToken(e){this._token=e};o.prototype.enable=function enable(){this._isEnabled=true};o.prototype.disable=function disable(){this._isEnabled=false};function formatMetric(e){return{audio_codec:e.codecName,audio_level_in:e.audioInputLevel,audio_level_out:e.audioOutputLevel,bytes_received:e.bytesReceived,bytes_sent:e.bytesSent,call_volume_input:e.inputVolume,call_volume_output:e.outputVolume,jitter:e.jitter,mos:e.mos&&Math.round(e.mos*100)/100,packets_lost:e.packetsLost,packets_lost_fraction:e.packetsLostFraction&&Math.round(e.packetsLostFraction*100)/100,packets_received:e.packetsReceived,rtt:e.rtt,timestamp:new Date(e.timestamp).toISOString(),total_bytes_received:e.totals.bytesReceived,total_bytes_sent:e.totals.bytesSent,total_packets_lost:e.totals.packetsLost,total_packets_received:e.totals.packetsReceived,total_packets_sent:e.totals.packetsSent}}L.default=o;return L}var U={},F=false;function dew$n(){if(F)return U;F=true;Object.defineProperty(U,"__esModule",{value:true});var e=32767;var t=typeof window!=="undefined"?window.RTCStatsReport:void 0;
/**
   * Create a MockRTCStatsReport wrapper around a Map of RTCStats objects. If RTCStatsReport is available
   *   natively, it will be inherited so that instanceof checks pass.
   * @constructor
   * @extends RTCStatsReport
   * @param {Map<string, RTCStats>} statsMap - A Map of RTCStats objects to wrap
   *   with a MockRTCStatsReport object.
   */function MockRTCStatsReport(e){if(!(this instanceof MockRTCStatsReport))return new MockRTCStatsReport(e);var t=this;Object.defineProperties(this,{_map:{value:e},size:{enumerable:true,get:function(){return t._map.size}}});this[Symbol.iterator]=e[Symbol.iterator]}if(t){MockRTCStatsReport.prototype=Object.create(t.prototype);MockRTCStatsReport.prototype.constructor=MockRTCStatsReport}["entries","forEach","get","has","keys","values"].forEach((function(e){MockRTCStatsReport.prototype[e]=function(){var t;var n=[];for(var r=0;r<arguments.length;r++)n[r]=arguments[r];return(t=this._map)[e].apply(t,n)}}));
/**
   * Convert an array of RTCStats objects into a mock RTCStatsReport object.
   * @param {Array<RTCStats>}
   * @return {MockRTCStatsReport}
   */MockRTCStatsReport.fromArray=function fromArray(e){return new MockRTCStatsReport(e.reduce((function(e,t){e.set(t.id,t);return e}),new Map))};
/**
   * Convert a legacy RTCStatsResponse object into a mock RTCStatsReport object.
   * @param {RTCStatsResponse} statsResponse - An RTCStatsResponse object returned by the
   *   legacy getStats(callback) method in Chrome.
   * @return {MockRTCStatsReport} A mock RTCStatsReport object.
   */MockRTCStatsReport.fromRTCStatsResponse=function fromRTCStatsResponse(e){var t;var n=new Map;var r=e.result().reduce((function(e,r){var o=r.id;switch(r.type){case"googCertificate":e.set(o,createRTCCertificateStats(r));break;case"datachannel":e.set(o,createRTCDataChannelStats(r));break;case"googCandidatePair":getBoolean(r,"googActiveConnection")&&(t=o);e.set(o,createRTCIceCandidatePairStats(r));break;case"localcandidate":e.set(o,createRTCIceCandidateStats(r,false));break;case"remotecandidate":e.set(o,createRTCIceCandidateStats(r,true));break;case"ssrc":isPresent(r,"packetsReceived")?e.set("rtp-"+o,createRTCInboundRTPStreamStats(r)):e.set("rtp-"+o,createRTCOutboundRTPStreamStats(r));e.set("track-"+o,createRTCMediaStreamTrackStats(r));e.set("codec-"+o,createRTCCodecStats(r));break;case"googComponent":var i=createRTCTransportStats(r);n.set(i.selectedCandidatePairId,o);e.set(o,createRTCTransportStats(r));break}return e}),new Map);if(t){var o=n.get(t);o&&(r.get(o).dtlsState="connected")}return new MockRTCStatsReport(r)};
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCTransportStats}
   */function createRTCTransportStats(e){return{bytesReceived:void 0,bytesSent:void 0,dtlsState:void 0,id:e.id,localCertificateId:e.stat("localCertificateId"),remoteCertificateId:e.stat("remoteCertificateId"),rtcpTransportStatsId:void 0,selectedCandidatePairId:e.stat("selectedCandidatePairId"),timestamp:Date.parse(e.timestamp),type:"transport"}}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCCodecStats}
   */function createRTCCodecStats(e){return{channels:void 0,clockRate:void 0,id:e.id,implementation:void 0,mimeType:e.stat("mediaType")+"/"+e.stat("googCodecName"),payloadType:void 0,sdpFmtpLine:void 0,timestamp:Date.parse(e.timestamp),type:"codec"}}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCMediaStreamTrackStats}
   */function createRTCMediaStreamTrackStats(t){return{audioLevel:isPresent(t,"audioOutputLevel")?getInt(t,"audioOutputLevel")/e:(getInt(t,"audioInputLevel")||0)/e,detached:void 0,echoReturnLoss:getFloat(t,"googEchoCancellationReturnLoss"),echoReturnLossEnhancement:getFloat(t,"googEchoCancellationReturnLossEnhancement"),ended:void 0,frameHeight:isPresent(t,"googFrameHeightReceived")?getInt(t,"googFrameHeightReceived"):getInt(t,"googFrameHeightSent"),frameWidth:isPresent(t,"googFrameWidthReceived")?getInt(t,"googFrameWidthReceived"):getInt(t,"googFrameWidthSent"),framesCorrupted:void 0,framesDecoded:getInt(t,"framesDecoded"),framesDropped:void 0,framesPerSecond:void 0,framesReceived:void 0,framesSent:getInt(t,"framesEncoded"),fullFramesLost:void 0,id:t.id,kind:t.stat("mediaType"),partialFramesLost:void 0,remoteSource:void 0,ssrcIds:void 0,timestamp:Date.parse(t.timestamp),trackIdentifier:t.stat("googTrackId"),type:"track"}}
/**
   * @param {RTCLegacyStatsReport} report
   * @param {boolean} isInbound - Whether to create an inbound stats object, or outbound.
   * @returns {RTCRTPStreamStats}
   */function createRTCRTPStreamStats(e,t){return{associateStatsId:void 0,codecId:"codec-"+e.id,firCount:t?getInt(e,"googFirsSent"):void 0,id:e.id,isRemote:void 0,mediaType:e.stat("mediaType"),nackCount:getInt(e,t?"googNacksSent":"googNacksReceived"),pliCount:getInt(e,t?"googPlisSent":"googPlisReceived"),qpSum:getInt(e,"qpSum"),sliCount:void 0,ssrc:e.stat("ssrc"),timestamp:Date.parse(e.timestamp),trackId:"track-"+e.id,transportId:e.stat("transportId")}}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCInboundRTPStreamStats}
   */function createRTCInboundRTPStreamStats(e){var t=createRTCRTPStreamStats(e,true);Object.assign(t,{burstDiscardCount:void 0,burstDiscardRate:void 0,burstLossCount:void 0,burstLossRate:void 0,burstPacketsDiscarded:void 0,burstPacketsLost:void 0,bytesReceived:getInt(e,"bytesReceived"),fractionLost:void 0,framesDecoded:getInt(e,"framesDecoded"),gapDiscardRate:void 0,gapLossRate:void 0,jitter:convertMsToSeconds(e.stat("googJitterReceived")),packetsDiscarded:void 0,packetsLost:getInt(e,"packetsLost"),packetsReceived:getInt(e,"packetsReceived"),packetsRepaired:void 0,roundTripTime:convertMsToSeconds(e.stat("googRtt")),type:"inbound-rtp"});return t}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCOutboundRTPStreamStats}
   */function createRTCOutboundRTPStreamStats(e){var t=createRTCRTPStreamStats(e,false);Object.assign(t,{bytesSent:getInt(e,"bytesSent"),framesEncoded:getInt(e,"framesEncoded"),packetsSent:getInt(e,"packetsSent"),remoteTimestamp:void 0,targetBitrate:void 0,type:"outbound-rtp"});return t}
/**
   * @param {RTCLegacyStatsReport} report
   * @param {boolean} isRemote - Whether to create for a remote candidate, or local candidate.
   * @returns {RTCIceCandidateStats}
   */function createRTCIceCandidateStats(e,t){return{candidateType:translateCandidateType(e.stat("candidateType")),deleted:void 0,id:e.id,ip:e.stat("ipAddress"),isRemote:t,port:getInt(e,"portNumber"),priority:getFloat(e,"priority"),protocol:e.stat("transport"),relayProtocol:void 0,timestamp:Date.parse(e.timestamp),transportId:void 0,type:t?"remote-candidate":"local-candidate",url:void 0}}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCIceCandidatePairStats}
   */function createRTCIceCandidatePairStats(e){return{availableIncomingBitrate:void 0,availableOutgoingBitrate:void 0,bytesReceived:getInt(e,"bytesReceived"),bytesSent:getInt(e,"bytesSent"),consentRequestsSent:getInt(e,"consentRequestsSent"),currentRoundTripTime:convertMsToSeconds(e.stat("googRtt")),id:e.id,lastPacketReceivedTimestamp:void 0,lastPacketSentTimestamp:void 0,localCandidateId:e.stat("localCandidateId"),nominated:void 0,priority:void 0,readable:void 0,remoteCandidateId:e.stat("remoteCandidateId"),requestsReceived:getInt(e,"requestsReceived"),requestsSent:getInt(e,"requestsSent"),responsesReceived:getInt(e,"responsesReceived"),responsesSent:getInt(e,"responsesSent"),retransmissionsReceived:void 0,retransmissionsSent:void 0,state:void 0,timestamp:Date.parse(e.timestamp),totalRoundTripTime:void 0,transportId:e.stat("googChannelId"),type:"candidate-pair",writable:getBoolean(e,"googWritable")}}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCIceCertificateStats}
   */function createRTCCertificateStats(e){return{base64Certificate:e.stat("googDerBase64"),fingerprint:e.stat("googFingerprint"),fingerprintAlgorithm:e.stat("googFingerprintAlgorithm"),id:e.id,issuerCertificateId:e.stat("googIssuerId"),timestamp:Date.parse(e.timestamp),type:"certificate"}}
/**
   * @param {RTCLegacyStatsReport} report
   * @returns {RTCDataChannelStats}
   */function createRTCDataChannelStats(e){return{bytesReceived:void 0,bytesSent:void 0,datachannelid:e.stat("datachannelid"),id:e.id,label:e.stat("label"),messagesReceived:void 0,messagesSent:void 0,protocol:e.stat("protocol"),state:e.stat("state"),timestamp:Date.parse(e.timestamp),transportId:e.stat("transportId"),type:"data-channel"}}
/**
   * @param {number} inMs - A time in milliseconds
   * @returns {number} The time in seconds
   */function convertMsToSeconds(e){return isNaN(e)||e===""?void 0:parseInt(e,10)/1e3}
/**
   * @param {string} type - A type in the legacy format
   * @returns {string} The type adjusted to new standards for known naming changes
   */function translateCandidateType(e){switch(e){case"peerreflexive":return"prflx";case"serverreflexive":return"srflx";case"host":case"relay":default:return e}}function getInt(e,t){var n=e.stat(t);return isPresent(e,t)?parseInt(n,10):void 0}function getFloat(e,t){var n=e.stat(t);return isPresent(e,t)?parseFloat(n):void 0}function getBoolean(e,t){var n=e.stat(t);return isPresent(e,t)?n==="true"||n===true:void 0}function isPresent(e,t){var n=e.stat(t);return typeof n!=="undefined"&&n!==""}U.default=MockRTCStatsReport;return U}var H={},W=false;function dew$m(){if(W)return H;W=true;var e=H&&H.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,s=i.length;a<s;a++,o++)r[o]=i[a];return r};Object.defineProperty(H,"__esModule",{value:true});H.getRTCIceCandidateStatsReport=H.getRTCStats=void 0;var t=dew$y();var n=dew$n();var r="PeerConnection is null";var o="WebRTC statistics are unsupported";function findStatById(e,t){return typeof e.get==="function"?e.get(t):e.find((function(e){return e.id===t}))}
/**
   * Generate WebRTC statistics report for the given {@link PeerConnection}
   * @param {PeerConnection} peerConnection - Target connection.
   * @return {Promise<RTCStatsReport>} WebRTC RTCStatsReport object
   */function getRTCStatsReport(e){if(!e)return Promise.reject(new t.InvalidArgumentError(r));if(typeof e.getStats!=="function")return Promise.reject(new t.NotSupportedError(o));var i;try{i=e.getStats()}catch(t){i=new Promise((function(t){return e.getStats(t)})).then(n.default.fromRTCStatsResponse)}return i}
/**
   * @typedef {Object} StatsOptions
   * Used for testing to inject and extract methods.
   * @property {function} [createRTCSample] - Method for parsing an RTCStatsReport
   */
/**
   * Collects any WebRTC statistics for the given {@link PeerConnection}
   * @param {PeerConnection} peerConnection - Target connection.
   * @param {StatsOptions} options - List of custom options.
   * @return {Promise<RTCSample>} Universally-formatted version of RTC stats.
   */function getRTCStats(e,t){t=Object.assign({createRTCSample:createRTCSample},t);return getRTCStatsReport(e).then(t.createRTCSample)}H.getRTCStats=getRTCStats;
/**
   * Generate WebRTC stats report containing relevant information about ICE candidates for the given {@link PeerConnection}
   * @param {PeerConnection} peerConnection - Target connection.
   * @return {Promise<RTCIceCandidateStatsReport>} RTCIceCandidateStatsReport object
   */function getRTCIceCandidateStatsReport(t){return getRTCStatsReport(t).then((function(t){var n=Array.from(t.values()).reduce((function(e,t){["candidatePairs","localCandidates","remoteCandidates"].forEach((function(t){e[t]||(e[t]=[])}));switch(t.type){case"candidate-pair":e.candidatePairs.push(t);break;case"local-candidate":e.localCandidates.push(t);break;case"remote-candidate":e.remoteCandidates.push(t);break;case"transport":t.selectedCandidatePairId&&(e.transport=t);break}return e}),{}),r=n.candidatePairs,o=n.localCandidates,i=n.remoteCandidates,a=n.transport;var s=r.find((function(e){return e.selected||a&&e.id===a.selectedCandidatePairId}));var c;s&&(c={localCandidate:o.find((function(e){return e.id===s.localCandidateId})),remoteCandidate:i.find((function(e){return e.id===s.remoteCandidateId}))});return{iceCandidateStats:e(o,i),selectedIceCandidatePairStats:c}}))}H.getRTCIceCandidateStatsReport=getRTCIceCandidateStatsReport;
/**
   * @typedef {Object} RTCSample - A sample containing relevant WebRTC stats information.
   * @property {Number} [timestamp]
   * @property {String} [codecName] - MimeType name of the codec being used by the outbound audio stream
   * @property {Number} [rtt] - Round trip time
   * @property {Number} [jitter]
   * @property {Number} [packetsSent]
   * @property {Number} [packetsLost]
   * @property {Number} [packetsReceived]
   * @property {Number} [bytesReceived]
   * @property {Number} [bytesSent]
   * @property {Number} [localAddress]
   * @property {Number} [remoteAddress]
   */function RTCSample(){}
/**
   * Create an RTCSample object from an RTCStatsReport
   * @private
   * @param {RTCStatsReport} statsReport
   * @returns {RTCSample}
   */function createRTCSample(e){var t=null;var n=new RTCSample;var r;Array.from(e.values()).forEach((function(o){if(!o.isRemote){var i=o.type.replace("-","");r=r||o.timestamp;if(o.remoteId){var a=findStatById(e,o.remoteId);a&&a.roundTripTime&&(n.rtt=a.roundTripTime*1e3)}switch(i){case"inboundrtp":n.timestamp=n.timestamp||o.timestamp;n.jitter=o.jitter*1e3;n.packetsLost=o.packetsLost;n.packetsReceived=o.packetsReceived;n.bytesReceived=o.bytesReceived;break;case"outboundrtp":n.timestamp=o.timestamp;n.packetsSent=o.packetsSent;n.bytesSent=o.bytesSent;if(o.codecId){var s=findStatById(e,o.codecId);n.codecName=s?s.mimeType&&s.mimeType.match(/(.*\/)?(.*)/)[2]:o.codecId}break;case"transport":t=o.id;break}}}));n.timestamp||(n.timestamp=r);var o=findStatById(e,t);if(!o)return n;var i=findStatById(e,o.selectedCandidatePairId);if(!i)return n;var a=findStatById(e,i.localCandidateId);var s=findStatById(e,i.remoteCandidateId);n.rtt||(n.rtt=i&&i.currentRoundTripTime*1e3);Object.assign(n,{localAddress:a&&(a.address||a.ip),remoteAddress:s&&(s.address||s.ip)});return n}return H}var B=e;try{"default"in e&&(B=e.default)}catch(e){}var V={},$=false;function dew$l(){if($)return V;$=true;var e=V&&V.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();var t=V&&V.__assign||function(){t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};return t.apply(this,arguments)};var n=V&&V.__awaiter||function(e,t,n,r){function adopt(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,o){function fulfilled(e){try{step(r.next(e))}catch(e){o(e)}}function rejected(e){try{step(r.throw(e))}catch(e){o(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())}))};var r=V&&V.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]};return i={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(i[Symbol.iterator]=function(){return this}),i;function verb(e){return function(t){return step([e,t])}}function step(i){if(n)throw new TypeError("Generator is already executing.");while(a)try{if(n=1,r&&(o=i[0]&2?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;(r=0,o)&&(i=[i[0]&2,o.value]);switch(i[0]){case 0:case 1:o=i;break;case 4:a.label++;return{value:i[1],done:false};case 5:a.label++;r=i[1];i=[0];continue;case 7:i=a.ops.pop();a.trys.pop();continue;default:if(!(o=a.trys,o=o.length>0&&o[o.length-1])&&(i[0]===6||i[0]===2)){a=0;continue}if(i[0]===3&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(i[0]===6&&a.label<o[1]){a.label=o[1];o=i;break}if(o&&a.label<o[2]){a.label=o[2];a.ops.push(i);break}o[2]&&a.ops.pop();a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e];r=0}finally{n=o=0}if(i[0]&5)throw i[1];return{value:i[0]?i[1]:void 0,done:true}}};Object.defineProperty(V,"__esModule",{value:true});V.PreflightTest=void 0;var o=B;var i=dew$1();var a=dew$5();var s=dew$y();var c=dew$w();var u=dew$m();var l=dew$x();var d=function(o){e(PreflightTest,o);
/**
     * Construct a {@link PreflightTest} instance.
     * @constructor
     * @param token - A Twilio JWT token string.
     * @param options
     */function PreflightTest(e,n){var r=o.call(this)||this;r._hasInsightsErrored=false;r._log=new c.default("PreflightTest");r._networkTiming={};r._options={codecPreferences:[i.default.Codec.PCMU,i.default.Codec.Opus],edge:"roaming",fakeMicInput:false,logLevel:"error",signalingTimeoutMs:1e4};r._status=PreflightTest.Status.Connecting;Object.assign(r._options,n);r._samples=[];r._warnings=[];r._startTime=Date.now();r._initDevice(e,t(t({},r._options),{fileInputStream:r._options.fakeMicInput?r._getStreamFromFile():void 0}));var a=["codecPreferences","edge","fakeMicInput","logLevel","signalingTimeoutMs"];var s=["audioContext","deviceFactory","fileInputStream","getRTCIceCandidateStatsReport","iceServers","rtcConfiguration"];if(typeof n==="object"){var u=t({},n);Object.keys(u).forEach((function(e){a.includes(e)||s.includes(e)||delete u[e];s.includes(e)&&(u[e]=true)}));r._log.debug(".constructor",JSON.stringify(u))}return r}PreflightTest.prototype.stop=function(){var e=this;this._log.debug(".stop");var t=new s.GeneralErrors.CallCancelledError;if(this._device){this._device.once(a.default.EventName.Unregistered,(function(){return e._onFailed(t)}));this._device.destroy()}else this._onFailed(t)};PreflightTest.prototype._emitWarning=function(e,t,n){var r={name:e,description:t};n&&(r.rtcWarning=n);this._warnings.push(r);this._log.debug("#"+PreflightTest.Events.Warning,JSON.stringify(r));this.emit(PreflightTest.Events.Warning,r)};PreflightTest.prototype._getCallQuality=function(e){return e>4.2?PreflightTest.CallQuality.Excellent:e>=4.1&&e<=4.2?PreflightTest.CallQuality.Great:e>=3.7&&e<=4?PreflightTest.CallQuality.Good:e>=3.1&&e<=3.6?PreflightTest.CallQuality.Fair:PreflightTest.CallQuality.Degraded};PreflightTest.prototype._getReport=function(){var e=this._getRTCStats();var t={start:this._startTime};if(this._endTime){t.end=this._endTime;t.duration=this._endTime-this._startTime}var n={callSid:this._callSid,edge:this._edge,iceCandidateStats:this._rtcIceCandidateStatsReport.iceCandidateStats,networkTiming:this._networkTiming,samples:this._samples,selectedEdge:this._options.edge,stats:e,testTiming:t,totals:this._getRTCSampleTotals(),warnings:this._warnings};var r=this._rtcIceCandidateStatsReport.selectedIceCandidatePairStats;if(r){n.selectedIceCandidatePairStats=r;n.isTurnRequired=r.localCandidate.candidateType==="relay"||r.remoteCandidate.candidateType==="relay"}e&&(n.callQuality=this._getCallQuality(e.mos.average));return n};PreflightTest.prototype._getRTCSampleTotals=function(){if(this._latestSample)return t({},this._latestSample.totals)};PreflightTest.prototype._getRTCStats=function(){var e=this._samples.findIndex((function(e){return typeof e.mos==="number"&&e.mos>0}));var n=e>=0?this._samples.slice(e):[];if(n&&n.length)return["jitter","mos","rtt"].reduce((function(e,r){var o;var i=n.map((function(e){return e[r]}));return t(t({},e),(o={},o[r]={average:Number((i.reduce((function(e,t){return e+t}))/i.length).toPrecision(5)),max:Math.max.apply(Math,i),min:Math.min.apply(Math,i)},o))}),{})};PreflightTest.prototype._getStreamFromFile=function(){var e=this._options.audioContext;if(!e)throw new s.NotSupportedError("Cannot fake input audio stream: AudioContext is not supported by this browser.");var t=new Audio(l.COWBELL_AUDIO_URL);t.addEventListener("canplaythrough",(function(){return t.play()}));typeof t.setAttribute==="function"&&t.setAttribute("crossorigin","anonymous");var n=e.createMediaElementSource(t);var r=e.createMediaStreamDestination();n.connect(r);return r.stream};PreflightTest.prototype._initDevice=function(e,t){var n=this;try{this._device=new(t.deviceFactory||a.default)(e,{codecPreferences:t.codecPreferences,edge:t.edge,fileInputStream:t.fileInputStream,logLevel:t.logLevel,preflight:true});this._device.once(a.default.EventName.Registered,(function(){n._onDeviceRegistered()}));this._device.once(a.default.EventName.Error,(function(e){n._onDeviceError(e)}));this._device.register()}catch(e){setTimeout((function(){n._onFailed(e)}));return}this._signalingTimeoutTimer=setTimeout((function(){n._onDeviceError(new s.SignalingErrors.ConnectionError("WebSocket Connection Timeout"))}),t.signalingTimeoutMs)};
/**
     * Called on {@link Device} error event
     * @param error
     */PreflightTest.prototype._onDeviceError=function(e){this._device.destroy();this._onFailed(e)};PreflightTest.prototype._onDeviceRegistered=function(){return n(this,void 0,void 0,(function(){var e,t,n;var o=this;return r(this,(function(r){switch(r.label){case 0:clearTimeout(this._echoTimer);clearTimeout(this._signalingTimeoutTimer);e=this;return[4,this._device.connect({rtcConfiguration:this._options.rtcConfiguration})];case 1:e._call=r.sent();this._networkTiming.signaling={start:Date.now()};this._setupCallHandlers(this._call);this._edge=this._device.edge||void 0;if(this._options.fakeMicInput){this._echoTimer=setTimeout((function(){return o._device.disconnectAll()}),l.ECHO_TEST_DURATION);t=this._device.audio;if(t){t.disconnect(false);t.outgoing(false)}}this._call.once("disconnect",(function(){o._device.once(a.default.EventName.Unregistered,(function(){return o._onUnregistered()}));o._device.destroy()}));n=this._call._publisher;n.on("error",(function(){o._hasInsightsErrored||o._emitWarning("insights-connection-error","Received an error when attempting to connect to Insights gateway");o._hasInsightsErrored=true}));return[2]}}))}))};
/**
     * Called when there is a fatal error
     * @param error
     */PreflightTest.prototype._onFailed=function(e){clearTimeout(this._echoTimer);clearTimeout(this._signalingTimeoutTimer);this._releaseHandlers();this._endTime=Date.now();this._status=PreflightTest.Status.Failed;this._log.debug("#"+PreflightTest.Events.Failed,e);this.emit(PreflightTest.Events.Failed,e)};PreflightTest.prototype._onUnregistered=function(){var e=this;setTimeout((function(){if(e._status!==PreflightTest.Status.Failed){clearTimeout(e._echoTimer);clearTimeout(e._signalingTimeoutTimer);e._releaseHandlers();e._endTime=Date.now();e._status=PreflightTest.Status.Completed;e._report=e._getReport();e._log.debug("#"+PreflightTest.Events.Completed,JSON.stringify(e._report));e.emit(PreflightTest.Events.Completed,e._report)}}),10)};PreflightTest.prototype._releaseHandlers=function(){[this._device,this._call].forEach((function(e){e&&e.eventNames().forEach((function(t){return e.removeAllListeners(t)}))}))};
/**
     * Setup the event handlers for the {@link Call} of the test call
     * @param call
     */PreflightTest.prototype._setupCallHandlers=function(e){var t=this;this._options.fakeMicInput&&e.once("volume",(function(){e._mediaHandler.outputs.forEach((function(e){return e.audio.muted=true}))}));e.on("warning",(function(e,n){t._emitWarning(e,"Received an RTCWarning. See .rtcWarning for the RTCWarning",n)}));e.once("accept",(function(){t._callSid=e._mediaHandler.callSid;t._status=PreflightTest.Status.Connected;t._log.debug("#"+PreflightTest.Events.Connected);t.emit(PreflightTest.Events.Connected)}));e.on("sample",(function(o){return n(t,void 0,void 0,(function(){var t;return r(this,(function(n){switch(n.label){case 0:if(!!this._latestSample)return[3,2];t=this;return[4,(this._options.getRTCIceCandidateStatsReport||u.getRTCIceCandidateStatsReport)(e._mediaHandler.version.pc)];case 1:t._rtcIceCandidateStatsReport=n.sent();n.label=2;case 2:this._latestSample=o;this._samples.push(o);this._log.debug("#"+PreflightTest.Events.Sample,JSON.stringify(o));this.emit(PreflightTest.Events.Sample,o);return[2]}}))}))}));[{reportLabel:"peerConnection",type:"pcconnection"},{reportLabel:"ice",type:"iceconnection"},{reportLabel:"dtls",type:"dtlstransport"},{reportLabel:"signaling",type:"signaling"}].forEach((function(n){var r=n.type,o=n.reportLabel;var i="on"+r+"statechange";var a=e._mediaHandler[i];e._mediaHandler[i]=function(e){var n=t._networkTiming[o]=t._networkTiming[o]||{start:0};if(e==="connecting"||e==="checking")n.start=Date.now();else if((e==="connected"||e==="stable")&&!n.duration){n.end=Date.now();n.duration=n.end-n.start}a(e)}}))};Object.defineProperty(PreflightTest.prototype,"callSid",{get:function(){return this._callSid},enumerable:false,configurable:true});Object.defineProperty(PreflightTest.prototype,"endTime",{get:function(){return this._endTime},enumerable:false,configurable:true});Object.defineProperty(PreflightTest.prototype,"latestSample",{get:function(){return this._latestSample},enumerable:false,configurable:true});Object.defineProperty(PreflightTest.prototype,"report",{get:function(){return this._report},enumerable:false,configurable:true});Object.defineProperty(PreflightTest.prototype,"startTime",{get:function(){return this._startTime},enumerable:false,configurable:true});Object.defineProperty(PreflightTest.prototype,"status",{get:function(){return this._status},enumerable:false,configurable:true});return PreflightTest}(o.EventEmitter);V.PreflightTest=d;(function(e){(function(e){e.Excellent="excellent";e.Great="great";e.Good="good";e.Fair="fair";e.Degraded="degraded"})(e.CallQuality||(e.CallQuality={}));(function(e){e.Completed="completed";e.Connected="connected";e.Failed="failed";e.Sample="sample";e.Warning="warning"})(e.Events||(e.Events={}));(function(e){e.Connecting="connecting";e.Connected="connected";e.Completed="completed";e.Failed="failed"})(e.Status||(e.Status={}))})(d=V.PreflightTest||(V.PreflightTest={}));V.PreflightTest=d;return V}var q=e;try{"default"in e&&(q=e.default)}catch(e){}var G={},z=false;function dew$k(){if(z)return G;z=true;var e=G&&G.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();var t=G&&G.__assign||function(){t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};return t.apply(this,arguments)};Object.defineProperty(G,"__esModule",{value:true});G.WSTransportState=void 0;var n=q;var r=dew$B();var o=dew$y();var i=dew$w();var a=globalThis.WebSocket;var s=1e4;var c=5e3;var u=15e3;var l=15e3;var d=Infinity;var p=1e3;var f=2e4;var h;(function(e){e.Connecting="connecting";e.Closed="closed";e.Open="open"})(h=G.WSTransportState||(G.WSTransportState={}));var v=function(n){e(WSTransport,n);
/**
     * @constructor
     * @param uris - List of URI of the endpoints to connect to.
     * @param [options] - Constructor options.
     */function WSTransport(e,r){r===void 0&&(r={});var a=n.call(this)||this;a.state=h.Closed;a._backoffStartTime={preferred:null,primary:null};a._connectedUri=null;a._log=new i.default("WSTransport");a._shouldFallback=false;a._uriIndex=0;a._moveUriIndex=function(){a._uriIndex++;a._uriIndex>=a._uris.length&&(a._uriIndex=0)};a._onSocketClose=function(e){a._log.error("Received websocket close event code: "+e.code+". Reason: "+e.reason);if(e.code===1006||e.code===1015){a.emit("error",{code:31005,message:e.reason||"Websocket connection to Twilio's signaling servers were unexpectedly ended. If this is happening consistently, there may be an issue resolving the hostname provided. If a region or an edge is being specified in Device setup, ensure it is valid.",twilioError:new o.SignalingErrors.ConnectionError});var t=a.state===h.Open||a._previousState===h.Open;!a._shouldFallback&&t||a._moveUriIndex();a._shouldFallback=true}a._closeSocket()};a._onSocketError=function(e){a._log.error("WebSocket received error: "+e.message);a.emit("error",{code:31e3,message:e.message||"WSTransport socket error",twilioError:new o.SignalingErrors.ConnectionDisconnected})};a._onSocketMessage=function(e){a._setHeartbeatTimeout();a._socket&&e.data==="\n"?a._socket.send("\n"):a.emit("message",e)};a._onSocketOpen=function(){a._log.info("WebSocket opened successfully.");a._timeOpened=Date.now();a._shouldFallback=false;a._setState(h.Open);clearTimeout(a._connectTimeout);a._resetBackoffs();a._setHeartbeatTimeout();a.emit("open")};a._options=t(t({},WSTransport.defaultConstructorOptions),r);a._uris=e;a._backoff=a._setupBackoffs();return a}WSTransport.prototype.close=function(){this._log.info("WSTransport.close() called...");this._close()};WSTransport.prototype.open=function(){this._log.info("WSTransport.open() called...");!this._socket||this._socket.readyState!==a.CONNECTING&&this._socket.readyState!==a.OPEN?this._preferredUri?this._connect(this._preferredUri):this._connect(this._uris[this._uriIndex]):this._log.info("WebSocket already open.")};
/**
     * Send a message through the WebSocket connection.
     * @param message - A message to send to the endpoint.
     * @returns Whether the message was sent.
     */WSTransport.prototype.send=function(e){if(!this._socket||this._socket.readyState!==a.OPEN)return false;try{this._socket.send(e)}catch(e){this._log.error("Error while sending message:",e.message);this._closeSocket();return false}return true};
/**
     * Update the preferred URI to connect to. Useful for Call signaling
     * reconnection, which requires connecting on the same edge. If `null` is
     * passed, the preferred URI is unset and the original `uris` array and
     * `uriIndex` is used to determine the signaling URI to connect to.
     * @param uri
     */WSTransport.prototype.updatePreferredURI=function(e){this._preferredUri=e};WSTransport.prototype.updateURIs=function(e){typeof e==="string"&&(e=[e]);this._uris=e;this._uriIndex=0};WSTransport.prototype._close=function(){this._setState(h.Closed);this._closeSocket()};WSTransport.prototype._closeSocket=function(){clearTimeout(this._connectTimeout);clearTimeout(this._heartbeatTimeout);this._log.info("Closing and cleaning up WebSocket...");if(this._socket){this._socket.removeEventListener("close",this._onSocketClose);this._socket.removeEventListener("error",this._onSocketError);this._socket.removeEventListener("message",this._onSocketMessage);this._socket.removeEventListener("open",this._onSocketOpen);this._socket.readyState!==a.CONNECTING&&this._socket.readyState!==a.OPEN||this._socket.close();this._timeOpened&&Date.now()-this._timeOpened>s&&this._resetBackoffs();this.state!==h.Closed&&this._performBackoff();delete this._socket;this.emit("close")}else this._log.info("No WebSocket to clean up.")};
/**
     * Attempt to connect to the endpoint via WebSocket.
     * @param [uri] - URI string to connect to.
     * @param [retryCount] - Retry number, if this is a retry. Undefined if
     *   first attempt, 1+ if a retry.
     */WSTransport.prototype._connect=function(e,t){var n=this;this._log.info(typeof t==="number"?"Attempting to reconnect (retry #"+t+")...":"Attempting to connect...");this._closeSocket();this._setState(h.Connecting);this._connectedUri=e;try{this._socket=new this._options.WebSocket(this._connectedUri)}catch(e){this._log.error("Could not connect to endpoint:",e.message);this._close();this.emit("error",{code:31e3,message:e.message||"Could not connect to "+this._connectedUri,twilioError:new o.SignalingErrors.ConnectionDisconnected});return}this._socket.addEventListener("close",this._onSocketClose);this._socket.addEventListener("error",this._onSocketError);this._socket.addEventListener("message",this._onSocketMessage);this._socket.addEventListener("open",this._onSocketOpen);delete this._timeOpened;this._connectTimeout=setTimeout((function(){n._log.info("WebSocket connection attempt timed out.");n._moveUriIndex();n._closeSocket()}),this._options.connectTimeoutMs)};WSTransport.prototype._performBackoff=function(){if(this._preferredUri){this._log.info("Preferred URI set; backing off.");this._backoff.preferred.backoff()}else{this._log.info("Preferred URI not set; backing off.");this._backoff.primary.backoff()}};WSTransport.prototype._resetBackoffs=function(){this._backoff.preferred.reset();this._backoff.primary.reset();this._backoffStartTime.preferred=null;this._backoffStartTime.primary=null};WSTransport.prototype._setHeartbeatTimeout=function(){var e=this;clearTimeout(this._heartbeatTimeout);this._heartbeatTimeout=setTimeout((function(){e._log.info("No messages received in "+u/1e3+" seconds. Reconnecting...");e._shouldFallback=true;e._closeSocket()}),u)};WSTransport.prototype._setState=function(e){this._previousState=this.state;this.state=e};WSTransport.prototype._setupBackoffs=function(){var e=this;var t={factor:2,jitter:.4,max:this._options.maxPreferredDelayMs,min:100};this._log.info("Initializing preferred transport backoff using config: ",t);var n=new r.default(t);n.on("backoff",(function(t,n){if(e.state!==h.Closed){e._log.info("Will attempt to reconnect Websocket to preferred URI in "+n+"ms");if(t===0){e._backoffStartTime.preferred=Date.now();e._log.info("Preferred backoff start; "+e._backoffStartTime.preferred)}}else e._log.info("Preferred backoff initiated but transport state is closed; not attempting a connection.")}));n.on("ready",(function(t,n){if(e.state!==h.Closed)if(e._backoffStartTime.preferred!==null)if(Date.now()-e._backoffStartTime.preferred>e._options.maxPreferredDurationMs){e._log.info("Max preferred backoff attempt time exceeded; falling back to primary backoff.");e._preferredUri=null;e._backoff.primary.backoff()}else if(typeof e._preferredUri==="string")e._connect(e._preferredUri,t+1);else{e._log.info("Preferred URI cleared; falling back to primary backoff.");e._preferredUri=null;e._backoff.primary.backoff()}else e._log.info("Preferred backoff start time invalid; not attempting a connection.");else e._log.info("Preferred backoff ready but transport state is closed; not attempting a connection.")}));var o={factor:2,jitter:.4,max:this._options.maxPrimaryDelayMs,min:this._uris&&this._uris.length>1?Math.floor(Math.random()*4001)+1e3:100};this._log.info("Initializing primary transport backoff using config: ",o);var i=new r.default(o);i.on("backoff",(function(t,n){if(e.state!==h.Closed){e._log.info("Will attempt to reconnect WebSocket in "+n+"ms");if(t===0){e._backoffStartTime.primary=Date.now();e._log.info("Primary backoff start; "+e._backoffStartTime.primary)}}else e._log.info("Primary backoff initiated but transport state is closed; not attempting a connection.")}));i.on("ready",(function(t,n){e.state!==h.Closed?e._backoffStartTime.primary!==null?Date.now()-e._backoffStartTime.primary>e._options.maxPrimaryDurationMs?e._log.info("Max primary backoff attempt time exceeded; not attempting a connection."):e._connect(e._uris[e._uriIndex],t+1):e._log.info("Primary backoff start time invalid; not attempting a connection."):e._log.info("Primary backoff ready but transport state is closed; not attempting a connection.")}));return{preferred:n,primary:i}};Object.defineProperty(WSTransport.prototype,"uri",{get:function(){return this._connectedUri},enumerable:false,configurable:true});WSTransport.defaultConstructorOptions={WebSocket:a,connectTimeoutMs:c,maxPreferredDelayMs:p,maxPreferredDurationMs:l,maxPrimaryDelayMs:f,maxPrimaryDurationMs:d};return WSTransport}(n.EventEmitter);G.default=v;return G}var J=e;try{"default"in e&&(J=e.default)}catch(e){}var Q={},K=false;function dew$j(){if(K)return Q;K=true;var e=Q&&Q.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();Object.defineProperty(Q,"__esModule",{value:true});var t=J;var n=dew$x();var r=dew$y();var o=dew$w();var i=dew$k();var a="1.6";
/**
   * Constructor for PStream objects.
   *
   * @exports PStream as Twilio.PStream
   * @memberOf Twilio
   * @borrows EventEmitter#addListener as #addListener
   * @borrows EventEmitter#removeListener as #removeListener
   * @borrows EventEmitter#emit as #emit
   * @borrows EventEmitter#hasListener as #hasListener
   * @constructor
   * @param {string} token The Twilio capabilities JWT
   * @param {string[]} uris An array of PStream endpoint URIs
   * @param {object} [options]
   * @config {boolean} [options.backoffMaxMs=20000] Enable debugging
   */var s=function(t){e(PStream,t);function PStream(e,n,r){var a=t.call(this)||this;if(!(a instanceof PStream))return new PStream(e,n,r);var s={TransportFactory:i.default};r=r||{};for(var c in s)c in r||(r[c]=s[c]);a.options=r;a.token=e||"";a.status="disconnected";a.gateway=null;a.region=null;a._messageQueue=[];a._preferredUri=null;a._uris=n;a._handleTransportClose=a._handleTransportClose.bind(a);a._handleTransportError=a._handleTransportError.bind(a);a._handleTransportMessage=a._handleTransportMessage.bind(a);a._handleTransportOpen=a._handleTransportOpen.bind(a);a._log=new o.default("PStream");a.on("error",(function(){a._log.warn("Unexpected error handled in pstream")}));var u=a;a.addListener("ready",(function(){u.status="ready"}));a.addListener("offline",(function(){u.status="offline"}));a.addListener("close",(function(){u._log.info('Received "close" from server. Destroying PStream...');u._destroy()}));a.transport=new a.options.TransportFactory(a._uris,{backoffMaxMs:a.options.backoffMaxMs,maxPreferredDurationMs:a.options.maxPreferredDurationMs});Object.defineProperties(a,{uri:{enumerable:true,get:function(){return this.transport.uri}}});a.transport.on("close",a._handleTransportClose);a.transport.on("error",a._handleTransportError);a.transport.on("message",a._handleTransportMessage);a.transport.on("open",a._handleTransportOpen);a.transport.open();return a}return PStream}(t.EventEmitter);s.prototype._handleTransportClose=function(){this.emit("transportClose");if(this.status!=="disconnected"){this.status!=="offline"&&this.emit("offline",this);this.status="disconnected"}};s.prototype._handleTransportError=function(e){e?this.emit("error",typeof e.code!=="undefined"?{error:e}:e):this.emit("error",{error:{code:31e3,message:"Websocket closed without a provided reason",twilioError:new r.SignalingErrors.ConnectionDisconnected}})};s.prototype._handleTransportMessage=function(e){if(e&&e.data&&typeof e.data==="string"){var t=JSON.parse(e.data),n=t.type,o=t.payload,i=o===void 0?{}:o;this.gateway=i.gateway||this.gateway;this.region=i.region||this.region;n==="error"&&i.error&&(i.error.twilioError=new r.SignalingErrors.ConnectionError);this.emit(n,i)}};s.prototype._handleTransportOpen=function(){var e=this;this.status="connected";this.setToken(this.token);this.emit("transportOpen");var t=this._messageQueue.splice(0,this._messageQueue.length);t.forEach((function(t){return e._publish.apply(e,t)}))};s.toString=function(){return"[Twilio.PStream class]"};s.prototype.toString=function(){return"[Twilio.PStream instance]"};s.prototype.setToken=function(e){this._log.info("Setting token and publishing listen");this.token=e;var t={browserinfo:getBrowserInfo(),token:e};this._publish("listen",t)};s.prototype.sendMessage=function(e,t,n,r,o){n===void 0&&(n="application/json");var i={callsid:e,content:t,contenttype:n,messagetype:r,voiceeventsid:o};this._publish("message",i,true)};s.prototype.register=function(e){var t={media:e};this._publish("register",t,true)};s.prototype.invite=function(e,t,n,r){var o={callsid:t,preflight:!!n,sdp:e,twilio:r?{params:r}:{}};this._publish("invite",o,true)};s.prototype.reconnect=function(e,t,n,r){var o={callsid:t,preflight:false,reconnect:n,sdp:e,twilio:r?{params:r}:{}};this._publish("invite",o,true)};s.prototype.answer=function(e,t){this._publish("answer",{sdp:e,callsid:t},true)};s.prototype.dtmf=function(e,t){this._publish("dtmf",{callsid:e,dtmf:t},true)};s.prototype.hangup=function(e,t){var n=t?{callsid:e,message:t}:{callsid:e};this._publish("hangup",n,true)};s.prototype.reject=function(e){this._publish("reject",{callsid:e},true)};s.prototype.reinvite=function(e,t){this._publish("reinvite",{sdp:e,callsid:t},false)};s.prototype._destroy=function(){this.transport.removeListener("close",this._handleTransportClose);this.transport.removeListener("error",this._handleTransportError);this.transport.removeListener("message",this._handleTransportMessage);this.transport.removeListener("open",this._handleTransportOpen);this.transport.close();this.emit("offline",this)};s.prototype.destroy=function(){this._log.info("PStream.destroy() called...");this._destroy();return this};s.prototype.updatePreferredURI=function(e){this._preferredUri=e;this.transport.updatePreferredURI(e)};s.prototype.updateURIs=function(e){this._uris=e;this.transport.updateURIs(this._uris)};s.prototype.publish=function(e,t){return this._publish(e,t,true)};s.prototype._publish=function(e,t,n){var o=JSON.stringify({payload:t,type:e,version:a});var i=!!this.transport.send(o);if(!i){this.emit("error",{error:{code:31009,message:"No transport available to send or receive messages",twilioError:new r.GeneralErrors.TransportError}});n&&this._messageQueue.push([e,t,true])}};function getBrowserInfo(){var e=typeof navigator!=="undefined"?navigator:{};var t={browser:{platform:e.platform||"unknown",userAgent:e.userAgent||"unknown"},p:"browser",plugin:"rtc",v:n.RELEASE_VERSION};return t}Q.default=s;return Q}var X={},Y=false;function dew$i(){if(Y)return X;Y=true;var e;Object.defineProperty(X,"__esModule",{value:true});X.getRegionShortcode=X.getChunderURIs=X.createSignalingEndpointURL=X.createEventGatewayURI=X.defaultEdge=X.regionToEdge=X.regionShortcodes=X.Region=X.Edge=void 0;var t=dew$y();var n;(function(e){e.Sydney="sydney";e.SaoPaulo="sao-paulo";e.Dublin="dublin";e.Frankfurt="frankfurt";e.Tokyo="tokyo";e.Singapore="singapore";e.Ashburn="ashburn";e.Umatilla="umatilla";e.Roaming="roaming";e.AshburnIx="ashburn-ix";e.SanJoseIx="san-jose-ix";e.LondonIx="london-ix";e.FrankfurtIx="frankfurt-ix";e.SingaporeIx="singapore-ix";e.SydneyIx="sydney-ix";e.TokyoIx="tokyo-ix"})(n=X.Edge||(X.Edge={}));
/**
   * Valid current regions.
   *
   * @deprecated
   *
   * CLIENT-6831
   * This is no longer used or updated for checking validity of regions in the
   * SDK. We now allow any string to be passed for region. Invalid regions won't
   * be able to connect, and won't throw an exception.
   *
   * CLIENT-7519
   * This is used again to temporarily convert edge values to regions as part of
   * Phase 1 Regional. This is still considered deprecated.
   *
   * @private
   */var r;(function(e){e.Au1="au1";e.Au1Ix="au1-ix";e.Br1="br1";e.De1="de1";e.De1Ix="de1-ix";e.Gll="gll";e.Ie1="ie1";e.Ie1Ix="ie1-ix";e.Ie1Tnx="ie1-tnx";e.Jp1="jp1";e.Jp1Ix="jp1-ix";e.Sg1="sg1";e.Sg1Ix="sg1-ix";e.Sg1Tnx="sg1-tnx";e.Us1="us1";e.Us1Ix="us1-ix";e.Us1Tnx="us1-tnx";e.Us2="us2";e.Us2Ix="us2-ix";e.Us2Tnx="us2-tnx"})(r=X.Region||(X.Region={}));X.regionShortcodes={ASIAPAC_SINGAPORE:r.Sg1,ASIAPAC_SYDNEY:r.Au1,ASIAPAC_TOKYO:r.Jp1,EU_FRANKFURT:r.De1,EU_IRELAND:r.Ie1,SOUTH_AMERICA_SAO_PAULO:r.Br1,US_EAST_VIRGINIA:r.Us1,US_WEST_OREGON:r.Us2};X.regionToEdge=(e={},e[r.Au1]=n.Sydney,e[r.Br1]=n.SaoPaulo,e[r.Ie1]=n.Dublin,e[r.De1]=n.Frankfurt,e[r.Jp1]=n.Tokyo,e[r.Sg1]=n.Singapore,e[r.Us1]=n.Ashburn,e[r.Us2]=n.Umatilla,e[r.Gll]=n.Roaming,e[r.Us1Ix]=n.AshburnIx,e[r.Us2Ix]=n.SanJoseIx,e[r.Ie1Ix]=n.LondonIx,e[r.De1Ix]=n.FrankfurtIx,e[r.Sg1Ix]=n.SingaporeIx,e[r.Au1Ix]=n.SydneyIx,e[r.Jp1Ix]=n.TokyoIx,e[r.Us1Tnx]=n.AshburnIx,e[r.Us2Tnx]=n.AshburnIx,e[r.Ie1Tnx]=n.LondonIx,e[r.Sg1Tnx]=n.SingaporeIx,e);X.defaultEdge=n.Roaming;var o="eventgw.twilio.com";
/**
   * String template for an edge chunder URI
   * @param edge - The edge.
   */function createChunderEdgeURI(e){return"voice-js."+e+".twilio.com"}
/**
   * String template for a region insights URI
   * @param region - The region.
   */function createEventGatewayURI(e){return e?"eventgw."+e+".twilio.com":o}X.createEventGatewayURI=createEventGatewayURI;
/**
   * Create a signaling endpoint URL to connect a websocket to from a chunder URI.
   * @param uri the chunder URI to create a signaling endpoint URL for
   */function createSignalingEndpointURL(e){return"wss://"+e+"/signal"}X.createSignalingEndpointURL=createSignalingEndpointURL;
/**
   * Get the URI associated with the passed edge.
   * @private
   * @param edge - A string or an array of edge values
   * @returns An array of chunder URIs
   */function getChunderURIs(e){if(!!e&&typeof e!=="string"&&!Array.isArray(e))throw new t.InvalidArgumentError("If `edge` is provided, it must be of type `string` or an array of strings.");var n;if(e){var r=Array.isArray(e)?e:[e];n=r.map((function(e){return createChunderEdgeURI(e)}))}else n=[createChunderEdgeURI(X.defaultEdge)];return n}X.getChunderURIs=getChunderURIs;
/**
   * Get the region shortcode by its full AWS region string.
   *
   * @private
   * @param region - The region's full AWS string.
   */function getRegionShortcode(e){return X.regionShortcodes[e]||null}X.getRegionShortcode=getRegionShortcode;return X}var Z={},ee=false;function dew$h(){if(ee)return Z;ee=true;Object.defineProperty(Z,"__esModule",{value:true});Z.setMaxAverageBitrate=Z.setIceAggressiveNomination=Z.setCodecPreferences=Z.getPreferredCodecInfo=void 0;var e=dew$t();var t={0:"PCMU",8:"PCMA"};var n=111;var r=51e4;var o=6e3;function getPreferredCodecInfo(e){var t=/a=rtpmap:(\d+) (\S+)/m.exec(e)||[null,"",""],n=t[1],r=t[2];var o=new RegExp("a=fmtp:"+n+" (\\S+)","m");var i=o.exec(e)||[null,""],a=i[1];return{codecName:r,codecParams:a}}Z.getPreferredCodecInfo=getPreferredCodecInfo;function setIceAggressiveNomination(t){return e.isChrome(window,window.navigator)?t.split("\n").filter((function(e){return e.indexOf("a=ice-lite")===-1})).join("\n"):t}Z.setIceAggressiveNomination=setIceAggressiveNomination;function setMaxAverageBitrate(e,t){if(typeof t!=="number"||t<o||t>r)return e;var i=/a=rtpmap:(\d+) opus/m.exec(e);var a=i&&i.length?i[1]:n;var s=new RegExp("a=fmtp:"+a);var c=e.split("\n").map((function(e){return s.test(e)?e+";maxaveragebitrate="+t:e}));return c.join("\n")}Z.setMaxAverageBitrate=setMaxAverageBitrate;
/**
   * Return a new SDP string with the re-ordered codec preferences.
   * @param {string} sdp
   * @param {Array<AudioCodec>} preferredCodecs - If empty, the existing order
   *   of audio codecs is preserved
   * @returns {string} Updated SDP string
   */function setCodecPreferences(e,t){var n=getMediaSections(e);var r=e.split("\r\nm=")[0];return[r].concat(n.map((function(e){if(!/^m=(audio|video)/.test(e))return e;var n=e.match(/^m=(audio|video)/)[1];var r=createCodecMapForMediaSection(e);var o=getReorderedPayloadTypes(r,t);var i=setPayloadTypesInMediaSection(o,e);var a=r.get("pcma")||[];var s=r.get("pcmu")||[];var c=n==="audio"?new Set(a.concat(s)):new Set;return c.has(o[0])?i.replace(/\r\nb=(AS|TIAS):([0-9]+)/g,""):i}))).join("\r\n")}Z.setCodecPreferences=setCodecPreferences;
/**
   * Get the m= sections of a particular kind and direction from an sdp.
   * @param {string} sdp - SDP string
   * @param {string} [kind] - Pattern for matching kind
   * @param {string} [direction] - Pattern for matching direction
   * @returns {Array<string>} mediaSections
   */function getMediaSections(e,t,n){return e.replace(/\r\n\r\n$/,"\r\n").split("\r\nm=").slice(1).map((function(e){return"m="+e})).filter((function(e){var r=new RegExp("m="+(t||".*"),"gm");var o=new RegExp("a="+(n||".*"),"gm");return r.test(e)&&o.test(e)}))}
/**
   * Create a Codec Map for the given m= section.
   * @param {string} section - The given m= section
   * @returns {Map<Codec, Array<PT>>}
   */function createCodecMapForMediaSection(e){return Array.from(createPtToCodecName(e)).reduce((function(e,t){var n=t[0];var r=t[1];var o=e.get(r)||[];return e.set(r,o.concat(n))}),new Map)}
/**
   * Create the reordered Codec Payload Types based on the preferred Codec Names.
   * @param {Map<Codec, Array<PT>>} codecMap - Codec Map
   * @param {Array<Codec>} preferredCodecs - Preferred Codec Names
   * @returns {Array<PT>} Reordered Payload Types
   */function getReorderedPayloadTypes(t,n){n=n.map((function(e){return e.toLowerCase()}));var r=e.flatMap(n,(function(e){return t.get(e)||[]}));var o=e.difference(Array.from(t.keys()),n);var i=e.flatMap(o,(function(e){return t.get(e)}));return r.concat(i)}
/**
   * Set the given Codec Payload Types in the first line of the given m= section.
   * @param {Array<PT>} payloadTypes - Payload Types
   * @param {string} section - Given m= section
   * @returns {string} - Updated m= section
   */function setPayloadTypesInMediaSection(e,t){var n=t.split("\r\n");var r=n[0];var o=n.slice(1);r=r.replace(/([0-9]+\s?)+$/,e.join(" "));return[r].concat(o).join("\r\n")}
/**
   * Create a Map from PTs to codec names for the given m= section.
   * @param {string} mediaSection - The given m= section.
   * @returns {Map<PT, Codec>} ptToCodecName
   */function createPtToCodecName(e){return getPayloadTypesInMediaSection(e).reduce((function(n,r){var o=new RegExp("a=rtpmap:"+r+" ([^/]+)");var i=e.match(o);var a=i?i[1].toLowerCase():t[r]?t[r].toLowerCase():"";return n.set(r,a)}),new Map)}
/**
   * Get the Codec Payload Types present in the first line of the given m= section
   * @param {string} section - The m= section
   * @returns {Array<PT>} Payload Types
   */function getPayloadTypesInMediaSection(e){var t=e.split("\r\n")[0];var n=t.match(/([0-9]+)/g);return n?n.slice(1).map((function(e){return parseInt(e,10)})):[]}return Z}var te=n;try{"default"in n&&(te=n.default)}catch(e){}var ne={},re=false;var oe=typeof globalThis!=="undefined"?globalThis:typeof self!=="undefined"?self:global;function dew$g(){if(re)return ne;re=true;Object.defineProperty(ne,"__esModule",{value:true});var e=dew$w();var t=dew$t();var n=dew$h();var r=te;function RTCPC(e){if(typeof window!=="undefined")if(e&&e.RTCPeerConnection)this.RTCPeerConnection=e.RTCPeerConnection;else if(t.isLegacyEdge())this.RTCPeerConnection=new r(typeof window!=="undefined"?window:oe);else if(typeof window.RTCPeerConnection==="function")this.RTCPeerConnection=window.RTCPeerConnection;else if(typeof window.webkitRTCPeerConnection==="function")this.RTCPeerConnection=webkitRTCPeerConnection;else if(typeof window.mozRTCPeerConnection==="function"){this.RTCPeerConnection=mozRTCPeerConnection;window.RTCSessionDescription=mozRTCSessionDescription;window.RTCIceCandidate=mozRTCIceCandidate}else this.log.info("No RTCPeerConnection implementation available");else this.log.info("No RTCPeerConnection implementation available. The window object was not found.")}RTCPC.prototype.create=function(t,n){this.log=new e.default("RTCPC");this.pc=new this.RTCPeerConnection(n,t)};RTCPC.prototype.createModernConstraints=function(e){if(typeof e==="undefined")return null;var n=Object.assign({},e);if(typeof webkitRTCPeerConnection==="undefined"||t.isLegacyEdge()){typeof e.audio!=="undefined"&&(n.offerToReceiveAudio=e.audio);typeof e.video!=="undefined"&&(n.offerToReceiveVideo=e.video)}else{n.mandatory={};typeof e.audio!=="undefined"&&(n.mandatory.OfferToReceiveAudio=e.audio);typeof e.video!=="undefined"&&(n.mandatory.OfferToReceiveVideo=e.video)}delete n.audio;delete n.video;return n};RTCPC.prototype.createOffer=function(e,t,r,o,i){var a=this;r=this.createModernConstraints(r);return promisifyCreate(this.pc.createOffer,this.pc)(r).then((function(r){if(!a.pc)return Promise.resolve();var o=n.setMaxAverageBitrate(r.sdp,e);return promisifySet(a.pc.setLocalDescription,a.pc)(new RTCSessionDescription({sdp:n.setCodecPreferences(o,t),type:"offer"}))})).then(o,i)};RTCPC.prototype.createAnswer=function(e,t,r,o,i){var a=this;r=this.createModernConstraints(r);return promisifyCreate(this.pc.createAnswer,this.pc)(r).then((function(r){if(!a.pc)return Promise.resolve();var o=n.setMaxAverageBitrate(r.sdp,e);return promisifySet(a.pc.setLocalDescription,a.pc)(new RTCSessionDescription({sdp:n.setCodecPreferences(o,t),type:"answer"}))})).then(o,i)};RTCPC.prototype.processSDP=function(e,t,r,o,i,a){var s=this;r=n.setCodecPreferences(r,t);var c=new RTCSessionDescription({sdp:r,type:"offer"});return promisifySet(this.pc.setRemoteDescription,this.pc)(c).then((function(){s.createAnswer(e,t,o,i,a)}))};RTCPC.prototype.getSDP=function(){return this.pc.localDescription.sdp};RTCPC.prototype.processAnswer=function(e,t,r,o){if(!this.pc)return Promise.resolve();t=n.setCodecPreferences(t,e);return promisifySet(this.pc.setRemoteDescription,this.pc)(new RTCSessionDescription({sdp:t,type:"answer"})).then(r,o)};RTCPC.test=function(){if(typeof navigator==="object"){var e=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.getUserMedia;if(t.isLegacyEdge(navigator))return false;if(e&&typeof window.RTCPeerConnection==="function")return true;if(e&&typeof window.webkitRTCPeerConnection==="function")return true;if(e&&typeof window.mozRTCPeerConnection==="function"){try{var n=new window.mozRTCPeerConnection;if(typeof n.getLocalStreams!=="function")return false}catch(e){return false}return true}if(typeof RTCIceGatherer!=="undefined")return true}return false};function promisify(e,t,n,r){return function(){var o=Array.prototype.slice.call(arguments);return new Promise((function(n){var i=e.apply(t,o);if(r){if(typeof i!=="object"||typeof i.then!=="function")throw new Error;n(i)}else n(i)})).catch((function(){return new Promise((function(r,i){e.apply(t,n?[r,i].concat(o):o.concat([r,i]))}))}))}}function promisifyCreate(e,t){return promisify(e,t,true,true)}function promisifySet(e,t){return promisify(e,t,false,false)}ne.default=RTCPC;return ne}var ie={},ae=false;function dew$f(){if(ae)return ie;ae=true;Object.defineProperty(ie,"__esModule",{value:true});var e=dew$y();var t=dew$w();var n=dew$t();var r=dew$g();var o=dew$h();var i=15e3;var a="none";var s="timeout";var c="new";var u=50;
/**
   * @typedef {Object} PeerConnection
   * @param audioHelper
   * @param pstream
   * @param options
   * @return {PeerConnection}
   * @constructor
   */function PeerConnection(r,o,i){if(!r||!o)throw new e.InvalidArgumentError("Audiohelper, and pstream are required arguments");if(!(this instanceof PeerConnection))return new PeerConnection(r,o,i);this._log=new t.default("PeerConnection");function noop(){this._log.warn("Unexpected noop call in peerconnection")}this.onaudio=noop;this.onopen=noop;this.onerror=noop;this.onclose=noop;this.ondisconnected=noop;this.onfailed=noop;this.onconnected=noop;this.onreconnected=noop;this.onsignalingstatechange=noop;this.ondtlstransportstatechange=noop;this.onicegatheringfailure=noop;this.onicegatheringstatechange=noop;this.oniceconnectionstatechange=noop;this.onpcconnectionstatechange=noop;this.onicecandidate=noop;this.onselectedcandidatepairchange=noop;this.onvolume=noop;this.version=null;this.pstream=o;this.stream=null;this.sinkIds=new Set(["default"]);this.outputs=new Map;this.status="connecting";this.callSid=null;this.isMuted=false;var a=typeof window!=="undefined"&&(window.AudioContext||window.webkitAudioContext);this._isSinkSupported=!!a&&typeof HTMLAudioElement!=="undefined"&&HTMLAudioElement.prototype.setSinkId;this._audioContext=a&&r._audioContext;this._audioHelper=r;this._hasIceCandidates=false;this._hasIceGatheringFailures=false;this._iceGatheringTimeoutId=null;this._masterAudio=null;this._masterAudioDeviceId=null;this._mediaStreamSource=null;this._dtmfSender=null;this._dtmfSenderUnsupported=false;this._callEvents=[];this._nextTimeToPublish=Date.now();this._onAnswerOrRinging=noop;this._onHangup=noop;this._remoteStream=null;this._shouldManageStream=true;this._iceState=c;this._isUnifiedPlan=i.isUnifiedPlan;this.options=i=i||{};this.navigator=i.navigator||(typeof navigator!=="undefined"?navigator:null);this.util=i.util||n;this.codecPreferences=i.codecPreferences;return this}PeerConnection.prototype.uri=function(){return this._uri};
/**
   * Open the underlying RTCPeerConnection with a MediaStream obtained by
   *   passed constraints. The resulting MediaStream is created internally
   *   and will therefore be managed and destroyed internally.
   * @param {MediaStreamConstraints} constraints
   */PeerConnection.prototype.openDefaultDeviceWithConstraints=function(e){return this._audioHelper._openDefaultDeviceWithConstraints(e).then(this._setInputTracksFromStream.bind(this,false))};
/**
   * Replace the existing input audio tracks with the audio tracks from the
   *   passed input audio stream. We re-use the existing stream because
   *   the AnalyzerNode is bound to the stream.
   * @param {MediaStream} stream
   */PeerConnection.prototype.setInputTracksFromStream=function(e){var t=this;return this._setInputTracksFromStream(true,e).then((function(){t._shouldManageStream=false}))};PeerConnection.prototype._createAnalyser=function(e,t){t=Object.assign({fftSize:32,smoothingTimeConstant:.3},t);var n=e.createAnalyser();for(var r in t)n[r]=t[r];return n};PeerConnection.prototype._setVolumeHandler=function(e){this.onvolume=e};PeerConnection.prototype._startPollingVolume=function(){if(this._audioContext&&this.stream&&this._remoteStream){var e=this._audioContext;var t=this._inputAnalyser=this._createAnalyser(e);var n=t.frequencyBinCount;var r=new Uint8Array(n);this._inputAnalyser2=this._createAnalyser(e,{maxDecibels:0,minDecibels:-127,smoothingTimeConstant:0});var o=this._outputAnalyser=this._createAnalyser(e);var i=o.frequencyBinCount;var a=new Uint8Array(i);this._outputAnalyser2=this._createAnalyser(e,{maxDecibels:0,minDecibels:-127,smoothingTimeConstant:0});this._updateInputStreamSource(this.stream);this._updateOutputStreamSource(this._remoteStream);var s=this;setTimeout((function emitVolume(){if(s._audioContext)if(s.status!=="closed"){s._inputAnalyser.getByteFrequencyData(r);var e=s.util.average(r);s._inputAnalyser2.getByteFrequencyData(r);var t=s.util.average(r);s._outputAnalyser.getByteFrequencyData(a);var n=s.util.average(a);s._outputAnalyser2.getByteFrequencyData(a);var o=s.util.average(a);s.onvolume(e/255,n/255,t,o);setTimeout(emitVolume,u)}else{s._inputAnalyser.disconnect();s._outputAnalyser.disconnect();s._inputAnalyser2.disconnect();s._outputAnalyser2.disconnect()}}),u)}};PeerConnection.prototype._stopStream=function _stopStream(){this._shouldManageStream&&this._audioHelper._stopDefaultInputDeviceStream()};
/**
   * Update the stream source with the new input audio stream.
   * @param {MediaStream} stream
   * @private
   */PeerConnection.prototype._updateInputStreamSource=function(e){this._inputStreamSource&&this._inputStreamSource.disconnect();try{this._inputStreamSource=this._audioContext.createMediaStreamSource(e);this._inputStreamSource.connect(this._inputAnalyser);this._inputStreamSource.connect(this._inputAnalyser2)}catch(e){this._log.warn("Unable to update input MediaStreamSource",e);this._inputStreamSource=null}};
/**
   * Update the stream source with the new ouput audio stream.
   * @param {MediaStream} stream
   * @private
   */PeerConnection.prototype._updateOutputStreamSource=function(e){this._outputStreamSource&&this._outputStreamSource.disconnect();try{this._outputStreamSource=this._audioContext.createMediaStreamSource(e);this._outputStreamSource.connect(this._outputAnalyser);this._outputStreamSource.connect(this._outputAnalyser2)}catch(e){this._log.warn("Unable to update output MediaStreamSource",e);this._outputStreamSource=null}};
/**
   * Replace the tracks of the current stream with new tracks. We do this rather than replacing the
   *   whole stream because AnalyzerNodes are bound to a stream.
   * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first
   *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have
   *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks
   *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set
   *   directly so that when the call ends it is disposed of.
   * @param {MediaStream} newStream - The new stream to copy the tracks over from.
   * @private
   */PeerConnection.prototype._setInputTracksFromStream=function(e,t){return this._isUnifiedPlan?this._setInputTracksForUnifiedPlan(e,t):this._setInputTracksForPlanB(e,t)};
/**
   * Replace the tracks of the current stream with new tracks using the 'plan-b' method.
   * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first
   *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have
   *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks
   *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set
   *   directly so that when the call ends it is disposed of.
   * @param {MediaStream} newStream - The new stream to copy the tracks over from.
   * @private
   */PeerConnection.prototype._setInputTracksForPlanB=function(t,n){var r=this;if(!n)return Promise.reject(new e.InvalidArgumentError("Can not set input stream to null while in a call"));if(!n.getAudioTracks().length)return Promise.reject(new e.InvalidArgumentError("Supplied input stream has no audio tracks"));var o=this.stream;if(o){this._stopStream();removeStream(this.version.pc,o);o.getAudioTracks().forEach(o.removeTrack,o);n.getAudioTracks().forEach(o.addTrack,o);addStream(this.version.pc,n);this._updateInputStreamSource(this.stream)}else this.stream=t?cloneStream(n):n;this.mute(this.isMuted);return this.version?new Promise((function(e,t){r.version.createOffer(r.options.maxAverageBitrate,r.codecPreferences,{audio:true},(function(){r.version.processAnswer(r.codecPreferences,r._answerSdp,(function(){e(r.stream)}),t)}),t)})):Promise.resolve(this.stream)};
/**
   * Replace the tracks of the current stream with new tracks using the 'unified-plan' method.
   * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first
   *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have
   *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks
   *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set
   *   directly so that when the call ends it is disposed of.
   * @param {MediaStream} newStream - The new stream to copy the tracks over from.
   * @private
   */PeerConnection.prototype._setInputTracksForUnifiedPlan=function(t,n){var r=this;if(!n)return Promise.reject(new e.InvalidArgumentError("Can not set input stream to null while in a call"));if(!n.getAudioTracks().length)return Promise.reject(new e.InvalidArgumentError("Supplied input stream has no audio tracks"));var o=this.stream;var getStreamPromise=function(){r.mute(r.isMuted);return Promise.resolve(r.stream)};if(o){this._shouldManageStream&&this._stopStream();this._sender||(this._sender=this.version.pc.getSenders()[0]);return this._sender.replaceTrack(n.getAudioTracks()[0]).then((function(){r._updateInputStreamSource(n);r.stream=t?cloneStream(n):n;return getStreamPromise()}))}this.stream=t?cloneStream(n):n;return getStreamPromise()};PeerConnection.prototype._onInputDevicesChanged=function(){if(this.stream){var e=this.stream.getAudioTracks().every((function(e){return e.readyState==="ended"}));e&&this._shouldManageStream&&this.openDefaultDeviceWithConstraints({audio:true})}};PeerConnection.prototype._onIceGatheringFailure=function(e){this._hasIceGatheringFailures=true;this.onicegatheringfailure(e)};PeerConnection.prototype._onMediaConnectionStateChange=function(e){var t=this._iceState;if(t!==e&&(e==="connected"||e==="disconnected"||e==="failed")){this._iceState=e;var n;switch(e){case"connected":if(t==="disconnected"||t==="failed"){n="ICE liveliness check succeeded. Connection with Twilio restored";this._log.info(n);this.onreconnected(n)}else{n="Media connection established.";this._log.info(n);this.onconnected(n)}this._stopIceGatheringTimeout();this._hasIceGatheringFailures=false;break;case"disconnected":n="ICE liveliness check failed. May be having trouble connecting to Twilio";this._log.warn(n);this.ondisconnected(n);break;case"failed":n="Connection with Twilio was interrupted.";this._log.warn(n);this.onfailed(n);break}}};PeerConnection.prototype._setSinkIds=function(t){if(!this._isSinkSupported)return Promise.reject(new e.NotSupportedError("Audio output selection is not supported by this browser"));this.sinkIds=new Set(t.forEach?t:[t]);return this.version?this._updateAudioOutputs():Promise.resolve()};PeerConnection.prototype._startIceGatheringTimeout=function startIceGatheringTimeout(){var e=this;this._stopIceGatheringTimeout();this._iceGatheringTimeoutId=setTimeout((function(){e._onIceGatheringFailure(s)}),i)};PeerConnection.prototype._stopIceGatheringTimeout=function stopIceGatheringTimeout(){clearInterval(this._iceGatheringTimeoutId)};PeerConnection.prototype._updateAudioOutputs=function updateAudioOutputs(){var e=Array.from(this.sinkIds).filter((function(e){return!this.outputs.has(e)}),this);var t=Array.from(this.outputs.keys()).filter((function(e){return!this.sinkIds.has(e)}),this);var n=this;var r=e.map(this._createAudioOutput,this);return Promise.all(r).then((function(){return Promise.all(t.map(n._removeAudioOutput,n))}))};PeerConnection.prototype._createAudio=function createAudio(e){var t=new Audio(e);this.onaudio(t);return t};PeerConnection.prototype._createAudioOutput=function createAudioOutput(e){var t=null;if(this._mediaStreamSource){t=this._audioContext.createMediaStreamDestination();this._mediaStreamSource.connect(t)}var n=this._createAudio();setAudioSource(n,t&&t.stream?t.stream:this.pcStream);var r=this;return n.setSinkId(e).then((function(){return n.play()})).then((function(){r.outputs.set(e,{audio:n,dest:t})}))};PeerConnection.prototype._removeAudioOutputs=function removeAudioOutputs(){if(this._masterAudio&&typeof this._masterAudioDeviceId!=="undefined"){this._disableOutput(this,this._masterAudioDeviceId);this.outputs.delete(this._masterAudioDeviceId);this._masterAudioDeviceId=null;this._masterAudio.paused||this._masterAudio.pause();typeof this._masterAudio.srcObject!=="undefined"?this._masterAudio.srcObject=null:this._masterAudio.src="";this._masterAudio=null}return Array.from(this.outputs.keys()).map(this._removeAudioOutput,this)};PeerConnection.prototype._disableOutput=function disableOutput(e,t){var n=e.outputs.get(t);if(n){if(n.audio){n.audio.pause();n.audio.src=""}n.dest&&n.dest.disconnect()}};
/**
   * Disable a non-master output, and update the master output to assume its state. This
   *   is called when the device ID assigned to the master output has been removed from
   *   active devices. We can not simply remove the master audio output, so we must
   *   instead reassign it.
   * @private
   * @param {PeerConnection} pc
   * @param {string} masterId - The current device ID assigned to the master audio element.
   */PeerConnection.prototype._reassignMasterOutput=function reassignMasterOutput(e,t){var n=e.outputs.get(t);e.outputs.delete(t);var r=this;var o=Array.from(e.outputs.keys())[0]||"default";return n.audio.setSinkId(o).then((function(){r._disableOutput(e,o);e.outputs.set(o,n);e._masterAudioDeviceId=o})).catch((function rollback(){e.outputs.set(t,n);r._log.info("Could not reassign master output. Attempted to roll back.")}))};PeerConnection.prototype._removeAudioOutput=function removeAudioOutput(e){if(this._masterAudioDeviceId===e)return this._reassignMasterOutput(this,e);this._disableOutput(this,e);this.outputs.delete(e);return Promise.resolve()};PeerConnection.prototype._onAddTrack=function onAddTrack(e,t){var n=e._masterAudio=this._createAudio();setAudioSource(n,t);n.play();var r=Array.from(e.outputs.keys())[0]||"default";e._masterAudioDeviceId=r;e.outputs.set(r,{audio:n});try{e._mediaStreamSource=e._audioContext.createMediaStreamSource(t)}catch(e){this._log.warn("Unable to create a MediaStreamSource from onAddTrack",e);this._mediaStreamSource=null}e.pcStream=t;e._updateAudioOutputs()};PeerConnection.prototype._fallbackOnAddTrack=function fallbackOnAddTrack(e,t){var n=document&&document.createElement("audio");n.autoplay=true;setAudioSource(n,t)||e._log.info("Error attaching stream to element.");e.outputs.set("default",{audio:n})};PeerConnection.prototype._setEncodingParameters=function(e){if(e&&this._sender&&typeof this._sender.getParameters==="function"&&typeof this._sender.setParameters==="function"){var t=this._sender.getParameters();if(t.priority||t.encodings&&t.encodings.length){t.priority="high";t.encodings&&t.encodings.length&&t.encodings.forEach((function(e){e.priority="high";e.networkPriority="high"}));this._sender.setParameters(t)}}};PeerConnection.prototype._setupPeerConnection=function(e,t){var n=this;var o=this;var i=new(this.options.rtcpcFactory||r.default)({RTCPeerConnection:this.options.RTCPeerConnection});i.create(e,t);addStream(i.pc,this.stream);var a="ontrack"in i.pc?"ontrack":"onaddstream";i.pc[a]=function(e){var t=o._remoteStream=e.stream||e.streams[0];typeof i.pc.getSenders==="function"&&(n._sender=i.pc.getSenders()[0]);o._isSinkSupported?o._onAddTrack(o,t):o._fallbackOnAddTrack(o,t);o._startPollingVolume()};return i};PeerConnection.prototype._maybeSetIceAggressiveNomination=function(e){return this.options.forceAggressiveIceNomination?o.setIceAggressiveNomination(e):e};PeerConnection.prototype._setupChannel=function(){var e=this;var t=this.version.pc;this.version.pc.onopen=function(){e.status="open";e.onopen()};this.version.pc.onstatechange=function(){if(e.version.pc&&e.version.pc.readyState==="stable"){e.status="open";e.onopen()}};this.version.pc.onsignalingstatechange=function(){var n=t.signalingState;e._log.info('signalingState is "'+n+'"');if(e.version.pc&&e.version.pc.signalingState==="stable"){e.status="open";e.onopen()}e.onsignalingstatechange(t.signalingState)};t.onconnectionstatechange=function(n){var r=t.connectionState;if(!r&&n&&n.target){var o=n.target;r=o.connectionState||o.connectionState_;e._log.info("pc.connectionState not detected. Using target PC. State="+r)}r?e._log.info('pc.connectionState is "'+r+'"'):e._log.warn('onconnectionstatechange detected but state is "'+r+'"');e.onpcconnectionstatechange(r);e._onMediaConnectionStateChange(r)};t.onicecandidate=function(t){var n=t.candidate;if(n){e._hasIceCandidates=true;e.onicecandidate(n);e._setupRTCIceTransportListener()}e._log.info("ICE Candidate: "+JSON.stringify(n))};t.onicegatheringstatechange=function(){var n=t.iceGatheringState;if(n==="gathering")e._startIceGatheringTimeout();else if(n==="complete"){e._stopIceGatheringTimeout();e._hasIceCandidates||e._onIceGatheringFailure(a);e._hasIceCandidates&&e._hasIceGatheringFailures&&e._startIceGatheringTimeout()}e._log.info('pc.iceGatheringState is "'+t.iceGatheringState+'"');e.onicegatheringstatechange(n)};t.oniceconnectionstatechange=function(){e._log.info('pc.iceConnectionState is "'+t.iceConnectionState+'"');e.oniceconnectionstatechange(t.iceConnectionState);e._onMediaConnectionStateChange(t.iceConnectionState)}};PeerConnection.prototype._initializeMediaStream=function(t,n){if(this.status==="open")return false;if(this.pstream.status==="disconnected"){this.onerror({info:{code:31e3,message:"Cannot establish connection. Client is disconnected",twilioError:new e.SignalingErrors.ConnectionDisconnected}});this.close();return false}this.version=this._setupPeerConnection(t,n);this._setupChannel();return true};PeerConnection.prototype._removeReconnectionListeners=function(){if(this.pstream){this.pstream.removeListener("answer",this._onAnswerOrRinging);this.pstream.removeListener("hangup",this._onHangup)}};PeerConnection.prototype._setupRTCDtlsTransportListener=function(){var e=this;var t=this.getRTCDtlsTransport();if(t&&!t.onstatechange){var handler=function(){e._log.info('dtlsTransportState is "'+t.state+'"');e.ondtlstransportstatechange(t.state)};handler();t.onstatechange=handler}};PeerConnection.prototype._setupRTCIceTransportListener=function(){var e=this;var t=this._getRTCIceTransport();t&&!t.onselectedcandidatepairchange&&(t.onselectedcandidatepairchange=function(){return e.onselectedcandidatepairchange(t.getSelectedCandidatePair())})};PeerConnection.prototype.iceRestart=function(){var e=this;this._log.info("Attempting to restart ICE...");this._hasIceCandidates=false;this.version.createOffer(this.options.maxAverageBitrate,this.codecPreferences,{iceRestart:true}).then((function(){e._removeReconnectionListeners();e._onAnswerOrRinging=function(t){e._removeReconnectionListeners();if(t.sdp&&e.version.pc.signalingState==="have-local-offer"){var n=e._maybeSetIceAggressiveNomination(t.sdp);e._answerSdp=n;e.status!=="closed"&&e.version.processAnswer(e.codecPreferences,n,null,(function(t){var n=t&&t.message?t.message:t;e._log.error("Failed to process answer during ICE Restart. Error: "+n)}))}else{var r="Invalid state or param during ICE Restart:hasSdp:"+!!t.sdp+", signalingState:"+e.version.pc.signalingState;e._log.warn(r)}};e._onHangup=function(){e._log.info("Received hangup during ICE Restart");e._removeReconnectionListeners()};e.pstream.on("answer",e._onAnswerOrRinging);e.pstream.on("hangup",e._onHangup);e.pstream.reinvite(e.version.getSDP(),e.callSid)})).catch((function(t){var n=t&&t.message?t.message:t;e._log.error("Failed to createOffer during ICE Restart. Error: "+n);e.onfailed(n)}))};PeerConnection.prototype.makeOutgoingCall=function(t,n,r,o,i,a){var s=this;if(this._initializeMediaStream(o,i)){var c=this;this.callSid=r;this._onAnswerOrRinging=function(e){if(e.sdp){var t=s._maybeSetIceAggressiveNomination(e.sdp);c._answerSdp=t;c.status!=="closed"&&c.version.processAnswer(s.codecPreferences,t,onAnswerSuccess,onAnswerError);c.pstream.removeListener("answer",c._onAnswerOrRinging);c.pstream.removeListener("ringing",c._onAnswerOrRinging)}};this.pstream.on("answer",this._onAnswerOrRinging);this.pstream.on("ringing",this._onAnswerOrRinging);this.version.createOffer(this.options.maxAverageBitrate,this.codecPreferences,{audio:true},onOfferSuccess,onOfferError)}function onAnswerSuccess(){c.options&&c._setEncodingParameters(c.options.dscp);a(c.version.pc)}function onAnswerError(t){var n=t.message||t;c.onerror({info:{code:31e3,message:"Error processing answer: "+n,twilioError:new e.MediaErrors.ClientRemoteDescFailed}})}function onOfferSuccess(){if(c.status!=="closed"){c.pstream.invite(c.version.getSDP(),c.callSid,c.options.preflight,n);c._setupRTCDtlsTransportListener()}}function onOfferError(t){var n=t.message||t;c.onerror({info:{code:31e3,message:"Error creating the offer: "+n,twilioError:new e.MediaErrors.ClientLocalDescFailed}})}};PeerConnection.prototype.answerIncomingCall=function(t,n,r,o,i){if(this._initializeMediaStream(r,o)){n=this._maybeSetIceAggressiveNomination(n);this._answerSdp=n.replace(/^a=setup:actpass$/gm,"a=setup:passive");this.callSid=t;var a=this;this.version.processSDP(this.options.maxAverageBitrate,this.codecPreferences,n,{audio:true},onAnswerSuccess,onAnswerError)}function onAnswerSuccess(){if(a.status!=="closed"){a.pstream.answer(a.version.getSDP(),t);a.options&&a._setEncodingParameters(a.options.dscp);i(a.version.pc);a._setupRTCDtlsTransportListener()}}function onAnswerError(t){var n=t.message||t;a.onerror({info:{code:31e3,message:"Error creating the answer: "+n,twilioError:new e.MediaErrors.ClientRemoteDescFailed}})}};PeerConnection.prototype.close=function(){if(this.version&&this.version.pc){this.version.pc.signalingState!=="closed"&&this.version.pc.close();this.version.pc=null}if(this.stream){this.mute(false);this._stopStream()}this.stream=null;this._removeReconnectionListeners();this._stopIceGatheringTimeout();Promise.all(this._removeAudioOutputs()).catch((function(){}));this._mediaStreamSource&&this._mediaStreamSource.disconnect();this._inputAnalyser&&this._inputAnalyser.disconnect();this._outputAnalyser&&this._outputAnalyser.disconnect();this._inputAnalyser2&&this._inputAnalyser2.disconnect();this._outputAnalyser2&&this._outputAnalyser2.disconnect();this.status="closed";this.onclose()};PeerConnection.prototype.reject=function(e){this.callSid=e};PeerConnection.prototype.ignore=function(e){this.callSid=e};
/**
   * Mute or unmute input audio. If the stream is not yet present, the setting
   *   is saved and applied to future streams/tracks.
   * @params {boolean} shouldMute - Whether the input audio should
   *   be muted or unmuted.
   */PeerConnection.prototype.mute=function(e){this.isMuted=e;if(this.stream)if(this._sender&&this._sender.track)this._sender.track.enabled=!e;else{var t=typeof this.stream.getAudioTracks==="function"?this.stream.getAudioTracks():this.stream.audioTracks;t.forEach((function(t){t.enabled=!e}))}};
/**
   * Get or create an RTCDTMFSender for the first local audio MediaStreamTrack
   * we can get from the RTCPeerConnection. Return null if unsupported.
   * @instance
   * @returns ?RTCDTMFSender
   */PeerConnection.prototype.getOrCreateDTMFSender=function getOrCreateDTMFSender(){if(this._dtmfSender||this._dtmfSenderUnsupported)return this._dtmfSender||null;var e=this;var t=this.version.pc;if(!t){this._log.warn("No RTCPeerConnection available to call createDTMFSender on");return null}if(typeof t.getSenders==="function"&&(typeof RTCDTMFSender==="function"||typeof RTCDtmfSender==="function")){var n=t.getSenders().find((function(e){return e.dtmf}));if(n){this._log.info("Using RTCRtpSender#dtmf");this._dtmfSender=n.dtmf;return this._dtmfSender}}if(typeof t.createDTMFSender==="function"&&typeof t.getLocalStreams==="function"){var r=t.getLocalStreams().map((function(t){var n=e._getAudioTracks(t);return n&&n[0]}))[0];if(!r){this._log.warn("No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender");return null}this._log.info("Creating RTCDTMFSender");this._dtmfSender=t.createDTMFSender(r);return this._dtmfSender}this._log.info("RTCPeerConnection does not support RTCDTMFSender");this._dtmfSenderUnsupported=true;return null};
/**
   * Get the RTCDtlTransport object from the PeerConnection
   * @returns RTCDtlTransport
   */PeerConnection.prototype.getRTCDtlsTransport=function getRTCDtlsTransport(){var e=this.version&&this.version.pc&&typeof this.version.pc.getSenders==="function"&&this.version.pc.getSenders()[0];return e&&e.transport||null};PeerConnection.prototype._canStopMediaStreamTrack=function(){return typeof MediaStreamTrack.prototype.stop==="function"};PeerConnection.prototype._getAudioTracks=function(e){return typeof e.getAudioTracks==="function"?e.getAudioTracks():e.audioTracks};
/**
   * Get the RTCIceTransport object from the PeerConnection
   * @returns RTCIceTransport
   */PeerConnection.prototype._getRTCIceTransport=function _getRTCIceTransport(){var e=this.getRTCDtlsTransport();return e&&e.iceTransport||null};PeerConnection.protocol=function(){return r.default.test()?new r.default:null}();function addStream(e,t){typeof e.addTrack==="function"?t.getAudioTracks().forEach((function(n){e.addTrack(n,t)})):e.addStream(t)}function cloneStream(e){var t=typeof MediaStream!=="undefined"?new MediaStream:new webkitMediaStream;e.getAudioTracks().forEach(t.addTrack,t);return t}function removeStream(e,t){typeof e.removeTrack==="function"?e.getSenders().forEach((function(t){e.removeTrack(t)})):e.removeStream(t)}
/**
   * Set the source of an HTMLAudioElement to the specified MediaStream
   * @param {HTMLAudioElement} audio
   * @param {MediaStream} stream
   * @returns {boolean} Whether the audio source was set successfully
   */function setAudioSource(e,t){if(typeof e.srcObject!=="undefined")e.srcObject=t;else if(typeof e.mozSrcObject!=="undefined")e.mozSrcObject=t;else{if(typeof e.src==="undefined")return false;var n=e.options.window||window;e.src=(n.URL||n.webkitURL).createObjectURL(t)}return true}PeerConnection.enabled=r.default.test();ie.default=PeerConnection;return ie}var se={},ce=false;function dew$e(){if(ce)return se;ce=true;Object.defineProperty(se,"__esModule",{value:true});se.PeerConnection=se.getMediaEngine=se.enabled=void 0;var e=dew$f();se.PeerConnection=e.default;var t=dew$g();function enabled(){return t.default.test()}se.enabled=enabled;function getMediaEngine(){return typeof RTCIceGatherer!=="undefined"?"ORTC":"WebRTC"}se.getMediaEngine=getMediaEngine;return se}var ue={},le=false;function dew$d(){if(le)return ue;le=true;Object.defineProperty(ue,"__esModule",{value:true});var e=dew$y();var t=dew$t();function getUserMedia(n,r){r=r||{};r.util=r.util||t;r.navigator=r.navigator||(typeof navigator!=="undefined"?navigator:null);return new Promise((function(t,o){if(!r.navigator)throw new e.NotSupportedError("getUserMedia is not supported");switch("function"){case typeof(r.navigator.mediaDevices&&r.navigator.mediaDevices.getUserMedia):return t(r.navigator.mediaDevices.getUserMedia(n));case typeof r.navigator.webkitGetUserMedia:return r.navigator.webkitGetUserMedia(n,t,o);case typeof r.navigator.mozGetUserMedia:return r.navigator.mozGetUserMedia(n,t,o);case typeof r.navigator.getUserMedia:return r.navigator.getUserMedia(n,t,o);default:throw new e.NotSupportedError("getUserMedia is not supported")}})).catch((function(t){throw r.util.isFirefox()&&t.name==="NotReadableError"?new e.NotSupportedError("Firefox does not currently support opening multiple audio input trackssimultaneously, even across different tabs.\nRelated Bugzilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324"):t}))}ue.default=getUserMedia;return ue}var de={},pe=false;function dew$c(){if(pe)return de;pe=true;Object.defineProperty(de,"__esModule",{value:true});var e=function(){function Deferred(){var e=this;this._promise=new Promise((function(t,n){e._resolve=t;e._reject=n}))}Object.defineProperty(Deferred.prototype,"promise",{
/**
       * @returns The {@link Deferred} Promise
       */
get:function(){return this._promise},enumerable:false,configurable:true});Deferred.prototype.reject=function(e){this._reject(e)};Deferred.prototype.resolve=function(e){this._resolve(e)};return Deferred}();de.default=e;return de}var fe={},he=false;function dew$b(){if(he)return fe;he=true;var e=fe&&fe.__awaiter||function(e,t,n,r){function adopt(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,o){function fulfilled(e){try{step(r.next(e))}catch(e){o(e)}}function rejected(e){try{step(r.throw(e))}catch(e){o(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())}))};var t=fe&&fe.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]};return i={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(i[Symbol.iterator]=function(){return this}),i;function verb(e){return function(t){return step([e,t])}}function step(i){if(n)throw new TypeError("Generator is already executing.");while(a)try{if(n=1,r&&(o=i[0]&2?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;(r=0,o)&&(i=[i[0]&2,o.value]);switch(i[0]){case 0:case 1:o=i;break;case 4:a.label++;return{value:i[1],done:false};case 5:a.label++;r=i[1];i=[0];continue;case 7:i=a.ops.pop();a.trys.pop();continue;default:if(!(o=a.trys,o=o.length>0&&o[o.length-1])&&(i[0]===6||i[0]===2)){a=0;continue}if(i[0]===3&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(i[0]===6&&a.label<o[1]){a.label=o[1];o=i;break}if(o&&a.label<o[2]){a.label=o[2];a.ops.push(i);break}o[2]&&a.ops.pop();a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e];r=0}finally{n=o=0}if(i[0]&5)throw i[1];return{value:i[0]?i[1]:void 0,done:true}}};Object.defineProperty(fe,"__esModule",{value:true});fe.AsyncQueue=void 0;var n=dew$c();var r=function(){function AsyncQueue(){this._operations=[]}
/**
     * Adds the async operation to the queue
     * @param callback An async callback that returns a promise
     * @returns A promise that will get resolved or rejected after executing the callback
     */AsyncQueue.prototype.enqueue=function(e){var t=!!this._operations.length;var r=new n.default;this._operations.push({deferred:r,callback:e});t||this._processQueue();return r.promise};AsyncQueue.prototype._processQueue=function(){return e(this,void 0,void 0,(function(){var e,n,r,o,i,a,s;return t(this,(function(t){switch(t.label){case 0:if(!this._operations.length)return[3,5];e=this._operations[0],n=e.deferred,r=e.callback;o=void 0;i=void 0;a=void 0;t.label=1;case 1:t.trys.push([1,3,,4]);return[4,r()];case 2:o=t.sent();a=true;return[3,4];case 3:s=t.sent();i=s;return[3,4];case 4:this._operations.shift();a?n.resolve(o):n.reject(i);return[3,0];case 5:return[2]}}))}))};return AsyncQueue}();fe.AsyncQueue=r;return fe}var ve={},me=false;function dew$a(){if(me)return ve;me=true;Object.defineProperty(ve,"__esModule",{value:true});var e=function(){function Deferred(){var e=this;this.promise=new Promise((function(t,n){e._resolve=t;e._reject=n}))}Object.defineProperty(Deferred.prototype,"reject",{get:function(){return this._reject},enumerable:false,configurable:true});Object.defineProperty(Deferred.prototype,"resolve",{get:function(){return this._resolve},enumerable:false,configurable:true});return Deferred}();ve.default=e;return ve}var ge=e;try{"default"in e&&(ge=e.default)}catch(e){}var _e={},ye=false;function dew$9(){if(ye)return _e;ye=true;var e=_e&&_e.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,s=i.length;a<s;a++,o++)r[o]=i[a];return r};Object.defineProperty(_e,"__esModule",{value:true});var t=ge;var n=function(){function EventTarget(){this._eventEmitter=new t.EventEmitter}EventTarget.prototype.addEventListener=function(e,t){return this._eventEmitter.addListener(e,t)};EventTarget.prototype.dispatchEvent=function(t){var n;var r=[];for(var o=1;o<arguments.length;o++)r[o-1]=arguments[o];return(n=this._eventEmitter).emit.apply(n,e([t],r))};EventTarget.prototype.removeEventListener=function(e,t){return this._eventEmitter.removeListener(e,t)};return EventTarget}();_e.default=n;return _e}var Se={},be=false;function dew$8(){if(be)return Se;be=true;var e=Se&&Se.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();var t=Se&&Se.__awaiter||function(e,t,n,r){function adopt(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,o){function fulfilled(e){try{step(r.next(e))}catch(e){o(e)}}function rejected(e){try{step(r.throw(e))}catch(e){o(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())}))};var n=Se&&Se.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]};return i={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(i[Symbol.iterator]=function(){return this}),i;function verb(e){return function(t){return step([e,t])}}function step(i){if(n)throw new TypeError("Generator is already executing.");while(a)try{if(n=1,r&&(o=i[0]&2?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;(r=0,o)&&(i=[i[0]&2,o.value]);switch(i[0]){case 0:case 1:o=i;break;case 4:a.label++;return{value:i[1],done:false};case 5:a.label++;r=i[1];i=[0];continue;case 7:i=a.ops.pop();a.trys.pop();continue;default:if(!(o=a.trys,o=o.length>0&&o[o.length-1])&&(i[0]===6||i[0]===2)){a=0;continue}if(i[0]===3&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(i[0]===6&&a.label<o[1]){a.label=o[1];o=i;break}if(o&&a.label<o[2]){a.label=o[2];a.ops.push(i);break}o[2]&&a.ops.pop();a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e];r=0}finally{n=o=0}if(i[0]&5)throw i[1];return{value:i[0]?i[1]:void 0,done:true}}};Object.defineProperty(Se,"__esModule",{value:true});var r=dew$a();var o=dew$9();var i=function(o){e(AudioPlayer,o);function AudioPlayer(e,t,n){t===void 0&&(t={});n===void 0&&(n={});var r=o.call(this)||this;r._audioNode=null;r._loop=false;r._pendingPlayDeferreds=[];r._sinkId="default";r._src="";typeof t!=="string"&&(n=t);r._audioContext=e;r._audioElement=new(n.AudioFactory||Audio);r._bufferPromise=r._createPlayDeferred().promise;r._destination=r._audioContext.destination;r._gainNode=r._audioContext.createGain();r._gainNode.connect(r._destination);r._XMLHttpRequest=n.XMLHttpRequestFactory||XMLHttpRequest;r.addEventListener("canplaythrough",(function(){r._resolvePlayDeferreds()}));typeof t==="string"&&(r.src=t);return r}Object.defineProperty(AudioPlayer.prototype,"destination",{get:function(){return this._destination},enumerable:false,configurable:true});Object.defineProperty(AudioPlayer.prototype,"loop",{get:function(){return this._loop},set:function(e){var t=this;function pauseAfterPlaythrough(){t._audioNode.removeEventListener("ended",pauseAfterPlaythrough);t.pause()}e||!this.loop||this.paused||this._audioNode.addEventListener("ended",pauseAfterPlaythrough);this._loop=e},enumerable:false,configurable:true});Object.defineProperty(AudioPlayer.prototype,"muted",{get:function(){return this._gainNode.gain.value===0},set:function(e){this._gainNode.gain.value=e?0:1},enumerable:false,configurable:true});Object.defineProperty(AudioPlayer.prototype,"paused",{get:function(){return this._audioNode===null},enumerable:false,configurable:true});Object.defineProperty(AudioPlayer.prototype,"src",{get:function(){return this._src},set:function(e){this._load(e)},enumerable:false,configurable:true});Object.defineProperty(AudioPlayer.prototype,"srcObject",{get:function(){return this._audioElement.srcObject},set:function(e){this._audioElement.srcObject=e},enumerable:false,configurable:true});Object.defineProperty(AudioPlayer.prototype,"sinkId",{get:function(){return this._sinkId},enumerable:false,configurable:true});AudioPlayer.prototype.load=function(){this._load(this._src)};AudioPlayer.prototype.pause=function(){if(!this.paused){this._audioElement.pause();this._audioNode.stop();this._audioNode.disconnect(this._gainNode);this._audioNode=null;this._rejectPlayDeferreds(new Error("The play() request was interrupted by a call to pause()."))}};AudioPlayer.prototype.play=function(){return t(this,void 0,void 0,(function(){var e;var t=this;return n(this,(function(n){switch(n.label){case 0:return this.paused?[3,2]:[4,this._bufferPromise];case 1:n.sent();if(!this.paused)return[2];throw new Error("The play() request was interrupted by a call to pause().");case 2:this._audioNode=this._audioContext.createBufferSource();this._audioNode.loop=this.loop;this._audioNode.addEventListener("ended",(function(){t._audioNode&&t._audioNode.loop||t.dispatchEvent("ended")}));return[4,this._bufferPromise];case 3:e=n.sent();if(this.paused)throw new Error("The play() request was interrupted by a call to pause().");this._audioNode.buffer=e;this._audioNode.connect(this._gainNode);this._audioNode.start();return this._audioElement.srcObject?[2,this._audioElement.play()]:[2]}}))}))};
/**
     * Change which device the sound should play through.
     * @param sinkId - The sink of the device to play sound through.
     */AudioPlayer.prototype.setSinkId=function(e){return t(this,void 0,void 0,(function(){return n(this,(function(t){switch(t.label){case 0:if(typeof this._audioElement.setSinkId!=="function")throw new Error("This browser does not support setSinkId.");if(e===this.sinkId)return[2];if(e==="default"){this.paused||this._gainNode.disconnect(this._destination);this._audioElement.srcObject=null;this._destination=this._audioContext.destination;this._gainNode.connect(this._destination);this._sinkId=e;return[2]}return[4,this._audioElement.setSinkId(e)];case 1:t.sent();if(this._audioElement.srcObject)return[2];this._gainNode.disconnect(this._audioContext.destination);this._destination=this._audioContext.createMediaStreamDestination();this._audioElement.srcObject=this._destination.stream;this._sinkId=e;this._gainNode.connect(this._destination);return[2]}}))}))};AudioPlayer.prototype._createPlayDeferred=function(){var e=new r.default;this._pendingPlayDeferreds.push(e);return e};
/**
     * Stop current playback and load a sound file.
     * @param src - The source URL of the file to load
     */AudioPlayer.prototype._load=function(e){var r=this;this._src&&this._src!==e&&this.pause();this._src=e;this._bufferPromise=new Promise((function(o,i){return t(r,void 0,void 0,(function(){var t;return n(this,(function(n){switch(n.label){case 0:return e?[4,bufferSound(this._audioContext,this._XMLHttpRequest,e)]:[2,this._createPlayDeferred().promise];case 1:t=n.sent();this.dispatchEvent("canplaythrough");o(t);return[2]}}))}))}))};
/**
     * Reject all deferreds for the Play promise.
     * @param reason
     */AudioPlayer.prototype._rejectPlayDeferreds=function(e){var t=this._pendingPlayDeferreds;t.splice(0,t.length).forEach((function(t){var n=t.reject;return n(e)}))};
/**
     * Resolve all deferreds for the Play promise.
     * @param result
     */AudioPlayer.prototype._resolvePlayDeferreds=function(e){var t=this._pendingPlayDeferreds;t.splice(0,t.length).forEach((function(t){var n=t.resolve;return n(e)}))};return AudioPlayer}(o.default);
/**
   * Use XMLHttpRequest to load the AudioBuffer of a remote audio asset.
   * @private
   * @param context - The AudioContext to use to decode the audio data
   * @param RequestFactory - The XMLHttpRequest factory to build
   * @param src - The URL of the audio asset to load.
   * @returns A Promise containing the decoded AudioBuffer.
   */function bufferSound(e,r,o){return t(this,void 0,void 0,(function(){var t,i;return n(this,(function(n){switch(n.label){case 0:t=new r;t.open("GET",o,true);t.responseType="arraybuffer";return[4,new Promise((function(e){t.addEventListener("load",e);t.send()}))];case 1:i=n.sent();try{return[2,e.decodeAudioData(i.target.response)]}catch(t){return[2,new Promise((function(t){e.decodeAudioData(i.target.response,t)}))]}return[2]}}))}))}Se.default=i;return Se}var Ce={},we=false;function dew$7(){if(we)return Ce;we=true;Object.defineProperty(Ce,"__esModule",{value:true});var e=dew$b();var t=dew$8();var n=dew$y();
/**
   * @class
   * @param {string} name - Name of the sound
   * @param {string} url - URL of the sound
   * @param {Sound#ConstructorOptions} options
   * @property {boolean} isPlaying - Whether the Sound is currently playing audio.
   * @property {string} name - Name of the sound
   * @property {string} url - URL of the sound
   * @property {AudioContext} audioContext - The AudioContext to use if available for AudioPlayer.
   */
/**
   * @typedef {Object} Sound#ConstructorOptions
   * @property {number} [maxDuration=0] - The maximum length of time to play the sound
   *   before stopping it.
   * @property {Boolean} [shouldLoop=false] - Whether the sound should be looped.
   */function Sound(r,o,i){if(!(this instanceof Sound))return new Sound(r,o,i);if(!r||!o)throw new n.InvalidArgumentError("name and url are required arguments");i=Object.assign({AudioFactory:typeof Audio!=="undefined"?Audio:null,maxDuration:0,shouldLoop:false},i);i.AudioPlayer=i.audioContext?t.default.bind(t.default,i.audioContext):i.AudioFactory;Object.defineProperties(this,{_Audio:{value:i.AudioPlayer},_activeEls:{value:new Map},_isSinkSupported:{value:i.AudioFactory!==null&&typeof i.AudioFactory.prototype.setSinkId==="function"},_maxDuration:{value:i.maxDuration},_maxDurationTimeout:{value:null,writable:true},_operations:{value:new e.AsyncQueue},_playPromise:{value:null,writable:true},_shouldLoop:{value:i.shouldLoop},_sinkIds:{value:["default"]},isPlaying:{enumerable:true,get:function(){return!!this._playPromise}},name:{enumerable:true,value:r},url:{enumerable:true,value:o}});this._Audio&&this._play(true,false)}function destroyAudioElement(e){if(e){e.pause();e.src="";e.srcObject=null;e.load()}}Sound.prototype._playAudioElement=function _playAudioElement(e,t,r){var o=this;var i=this._activeEls.get(e);if(!i)throw new n.InvalidArgumentError('sinkId: "'+e+"\" doesn't have an audio element");i.muted=!!t;i.loop=!!r;return i.play().then((function(){return i})).catch((function(t){destroyAudioElement(i);o._activeEls.delete(e);throw t}))};Sound.prototype._play=function _play(e,t){this.isPlaying&&this._stop();this._maxDuration>0&&(this._maxDurationTimeout=setTimeout(this._stop.bind(this),this._maxDuration));t=typeof t==="boolean"?t:this._shouldLoop;var n=this;var r=this._playPromise=Promise.all(this._sinkIds.map((function createAudioElement(r){if(!n._Audio)return Promise.resolve();var o=n._activeEls.get(r);if(o)return n._playAudioElement(r,e,t);o=new n._Audio(n.url);typeof o.setAttribute==="function"&&o.setAttribute("crossorigin","anonymous");return new Promise((function(e){o.addEventListener("canplaythrough",e)})).then((function(){return(n._isSinkSupported?o.setSinkId(r):Promise.resolve()).then((function setSinkIdSuccess(){n._activeEls.set(r,o);return n._playPromise?n._playAudioElement(r,e,t):Promise.resolve()}))}))})));return r};Sound.prototype._stop=function _stop(){var e=this;this._activeEls.forEach((function(t,n){if(e._sinkIds.includes(n)){t.pause();t.currentTime=0}else{destroyAudioElement(t);e._activeEls.delete(n)}}));clearTimeout(this._maxDurationTimeout);this._playPromise=null;this._maxDurationTimeout=null};Sound.prototype.setSinkIds=function setSinkIds(e){if(this._isSinkSupported){e=e.forEach?e:[e];[].splice.apply(this._sinkIds,[0,this._sinkIds.length].concat(e))}};Sound.prototype.stop=function stop(){var e=this;this._operations.enqueue((function(){e._stop();return Promise.resolve()}))};Sound.prototype.play=function play(){var e=this;return this._operations.enqueue((function(){return e._play()}))};Ce.default=Sound;return Ce}var Ee=r;try{"default"in r&&(Ee=r.default)}catch(e){}var Te={},Pe=false;function dew$6(){if(Pe)return Te;Pe=true;Object.defineProperty(Te,"__esModule",{value:true});Te.generateVoiceEventSid=void 0;var e=Ee;var t=dew$y();var n=typeof e==="function"?e:e.default;function generateUuid(){if(typeof window!=="object")throw new t.NotSupportedError("This platform is not supported.");var e=window.crypto;if(typeof e!=="object")throw new t.NotSupportedError("The `crypto` module is not available on this platform.");if(typeof(e.randomUUID||e.getRandomValues)==="undefined")throw new t.NotSupportedError("Neither `crypto.randomUUID` or `crypto.getRandomValues` are available on this platform.");var r=window.Uint32Array;if(typeof r==="undefined")throw new t.NotSupportedError("The `Uint32Array` module is not available on this platform.");var o=typeof e.randomUUID==="function"?function(){return e.randomUUID()}:function(){return e.getRandomValues(new Uint32Array(32)).toString()};return n(o())}function generateVoiceEventSid(){return"KX"+generateUuid()}Te.generateVoiceEventSid=generateVoiceEventSid;return Te}var Ie=e;try{"default"in e&&(Ie=e.default)}catch(e){}var ke=t;try{"default"in t&&(ke=t.default)}catch(e){}var De={},Ae=false;function dew$5(){if(Ae)return De;Ae=true;var e=De&&De.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();var t=De&&De.__assign||function(){t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};return t.apply(this,arguments)};var n=De&&De.__awaiter||function(e,t,n,r){function adopt(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,o){function fulfilled(e){try{step(r.next(e))}catch(e){o(e)}}function rejected(e){try{step(r.throw(e))}catch(e){o(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())}))};var r=De&&De.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]};return i={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(i[Symbol.iterator]=function(){return this}),i;function verb(e){return function(t){return step([e,t])}}function step(i){if(n)throw new TypeError("Generator is already executing.");while(a)try{if(n=1,r&&(o=i[0]&2?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;(r=0,o)&&(i=[i[0]&2,o.value]);switch(i[0]){case 0:case 1:o=i;break;case 4:a.label++;return{value:i[1],done:false};case 5:a.label++;r=i[1];i=[0];continue;case 7:i=a.ops.pop();a.trys.pop();continue;default:if(!(o=a.trys,o=o.length>0&&o[o.length-1])&&(i[0]===6||i[0]===2)){a=0;continue}if(i[0]===3&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(i[0]===6&&a.label<o[1]){a.label=o[1];o=i;break}if(o&&a.label<o[2]){a.label=o[2];a.ops.push(i);break}o[2]&&a.ops.pop();a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e];r=0}finally{n=o=0}if(i[0]&5)throw i[1];return{value:i[0]?i[1]:void 0,done:true}}};Object.defineProperty(De,"__esModule",{value:true});var o=Ie;var i=ke;var a=dew$s();var s=dew$r();var c=dew$1();var u=dew$x();var l=dew$q();var d=dew$y();var p=dew$o();var f=dew$w();var h=dew$l();var v=dew$j();var m=dew$i();var g=dew$e();var _=dew$d();var y=dew$7();var S=dew$t();var b=dew$6();var C=3e4;var w=2e3;var E="twilio-js-sdk";var T='Parameter "token" must be of type "string".';var P=function(P){e(Device,P);
/**
     * Construct a {@link Device} instance. The {@link Device} can be registered
     * to make and listen for calls using {@link Device.register}.
     * @constructor
     * @param options
     */function Device(e,t){var o;t===void 0&&(t={});var a=P.call(this)||this;a._activeCall=null;a._audio=null;a._audioProcessorEventObserver=null;a._callInputStream=null;a._calls=[];a._callSinkIds=["default"];a._chunderURIs=[];a._defaultOptions={allowIncomingWhileBusy:false,closeProtection:false,codecPreferences:[c.default.Codec.PCMU,c.default.Codec.Opus],dscp:true,enableImprovedSignalingErrorPrecision:false,forceAggressiveIceNomination:false,logLevel:i.levels.ERROR,maxCallSignalingTimeoutMs:0,preflight:false,sounds:{},tokenRefreshMs:1e4,voiceEventSidGenerator:b.generateVoiceEventSid};a._edge=null;a._home=null;a._identity=null;a._log=new f.default("Device");a._options={};a._preferredURI=null;a._publisher=null;a._region=null;a._regTimer=null;a._shouldReRegister=false;a._soundcache=new Map;a._state=Device.State.Unregistered;a._stateEventMapping=(o={},o[Device.State.Destroyed]=Device.EventName.Destroyed,o[Device.State.Unregistered]=Device.EventName.Unregistered,o[Device.State.Registering]=Device.EventName.Registering,o[Device.State.Registered]=Device.EventName.Registered,o);a._stream=null;a._streamConnectedPromise=null;a._tokenWillExpireTimeout=null;
/**
       * Create the default Insights payload
       * @param call
       */a._createDefaultPayload=function(e){var t={aggressive_nomination:a._options.forceAggressiveIceNomination,browser_extension:a._isBrowserExtension,dscp:!!a._options.dscp,ice_restart_enabled:true,platform:g.getMediaEngine(),sdk_version:u.RELEASE_VERSION};function setIfDefined(e,n){n&&(t[e]=n)}if(e){var n=e.parameters.CallSid;setIfDefined("call_sid",/^TJ/.test(n)?void 0:n);setIfDefined("temp_call_sid",e.outboundConnectionId);setIfDefined("audio_codec",e.codec);t.direction=e.direction}setIfDefined("gateway",a._stream&&a._stream.gateway);setIfDefined("region",a._stream&&a._stream.region);return t};a._onSignalingClose=function(){a._stream=null;a._streamConnectedPromise=null};a._onSignalingConnected=function(e){var t;var n=m.getRegionShortcode(e.region);a._edge=e.edge||m.regionToEdge[n]||e.region;a._region=n||e.region;a._home=e.home;(t=a._publisher)===null||t===void 0?void 0:t.setHost(m.createEventGatewayURI(e.home));if(e.token){a._identity=e.token.identity;if(typeof e.token.ttl==="number"&&typeof a._options.tokenRefreshMs==="number"){var r=e.token.ttl*1e3;var o=Math.max(0,r-a._options.tokenRefreshMs);a._tokenWillExpireTimeout=setTimeout((function(){a._log.debug("#tokenWillExpire");a.emit("tokenWillExpire",a);if(a._tokenWillExpireTimeout){clearTimeout(a._tokenWillExpireTimeout);a._tokenWillExpireTimeout=null}}),o)}}var i=m.getChunderURIs(a._edge);if(i.length>0){var s=i[0];a._preferredURI=m.createSignalingEndpointURL(s)}else a._log.warn("Could not parse a preferred URI from the stream#connected event.");a._shouldReRegister&&a.register()};a._onSignalingError=function(e){if(typeof e==="object"){var t=e.error,n=e.callsid;if(typeof t==="object"){var r=typeof n==="string"&&a._findCall(n)||void 0;var o=t.code,i=t.message;var s=t.twilioError;if(typeof o==="number")if(o===31201)s=new d.AuthorizationErrors.AuthenticationFailed(t);else if(o===31204)s=new d.AuthorizationErrors.AccessTokenInvalid(t);else if(o===31205){a._stopRegistrationTimer();s=new d.AuthorizationErrors.AccessTokenExpired(t)}else{var c=d.getPreciseSignalingErrorByCode(!!a._options.enableImprovedSignalingErrorPrecision,o);typeof c!=="undefined"&&(s=new c(t))}if(!s){a._log.error("Unknown signaling error: ",t);s=new d.GeneralErrors.UnknownError(i,t)}a._log.error("Received error: ",s);a._log.debug("#error",t);a.emit(Device.EventName.Error,s,r)}}};a._onSignalingInvite=function(e){return n(a,void 0,void 0,(function(){var t,n,o,i,a;var s=this;var c;return r(this,(function(r){switch(r.label){case 0:t=!!this._activeCall;if(t&&!this._options.allowIncomingWhileBusy){this._log.info("Device busy; ignoring incoming invite");return[2]}if(!e.callsid||!e.sdp){this._log.debug("#error",e);this.emit(Device.EventName.Error,new d.ClientErrors.BadRequest("Malformed invite from gateway"));return[2]}n=e.parameters||{};n.CallSid=n.CallSid||e.callsid;o=Object.assign({},S.queryToJson(n.Params));return[4,this._makeCall(o,{callParameters:n,enableImprovedSignalingErrorPrecision:!!this._options.enableImprovedSignalingErrorPrecision,offerSdp:e.sdp,reconnectToken:e.reconnect,voiceEventSidGenerator:this._options.voiceEventSidGenerator})];case 1:i=r.sent();this._calls.push(i);i.once("accept",(function(){s._soundcache.get(Device.SoundName.Incoming).stop();s._publishNetworkChange()}));a=((c=this._audio)===null||c===void 0?void 0:c.incoming())&&!t?function(){return s._soundcache.get(Device.SoundName.Incoming).play()}:function(){return Promise.resolve()};this._showIncomingCall(i,a);return[2]}}))}))};a._onSignalingOffline=function(){a._log.info("Stream is offline");a._edge=null;a._region=null;a._shouldReRegister=a.state!==Device.State.Unregistered;a._setState(Device.State.Unregistered)};a._onSignalingReady=function(){a._log.info("Stream is ready");a._setState(Device.State.Registered)};a._publishNetworkChange=function(){a._activeCall&&a._networkInformation&&a._publisher.info("network-information","network-change",{connection_type:a._networkInformation.type,downlink:a._networkInformation.downlink,downlinkMax:a._networkInformation.downlinkMax,effective_type:a._networkInformation.effectiveType,rtt:a._networkInformation.rtt},a._activeCall)};
/**
       * Update the input stream being used for calls so that any current call and all future calls
       * will use the new input stream.
       * @param inputStream
       */a._updateInputStream=function(e){var t=a._activeCall;if(t&&!e)return Promise.reject(new d.InvalidStateError("Cannot unset input device while a call is in progress."));a._callInputStream=e;return t?t._setInputTracksFromStream(e):Promise.resolve()};
/**
       * Update the device IDs of output devices being used to play sounds through.
       * @param type - Whether to update ringtone or speaker sounds
       * @param sinkIds - An array of device IDs
       */a._updateSinkIds=function(e,t){var n=e==="ringtone"?a._updateRingtoneSinkIds(t):a._updateSpeakerSinkIds(t);return n.then((function(){a._publisher.info("audio",e+"-devices-set",{audio_device_ids:t},a._activeCall)}),(function(n){a._publisher.error("audio",e+"-devices-set-failed",{audio_device_ids:t,message:n.message},a._activeCall);throw n}))};a._setupLoglevel(t.logLevel);a._logOptions("constructor",t);a.updateToken(e);if(S.isLegacyEdge())throw new d.NotSupportedError("Microsoft Edge Legacy (https://support.microsoft.com/en-us/help/4533505/what-is-microsoft-edge-legacy) is deprecated and will not be able to connect to Twilio to make or receive calls after September 1st, 2020. Please see this documentation for a list of supported browsers https://www.twilio.com/docs/voice/client/javascript#supported-browsers");if(!Device.isSupported&&t.ignoreBrowserSupport){if(window&&window.location&&window.location.protocol==="http:")throw new d.NotSupportedError("twilio.js wasn't able to find WebRTC browser support.           This is most likely because this page is served over http rather than https,           which does not support WebRTC in many browsers. Please load this page over https and           try again.");throw new d.NotSupportedError("twilio.js 1.3+ SDKs require WebRTC browser support.         For more information, see <https://www.twilio.com/docs/api/client/twilio-js>.         If you have any questions about this announcement, please contact         Twilio Support at <help@twilio.com>.")}if(window){var s=window;var p=s.msBrowser||s.browser||s.chrome;a._isBrowserExtension=!!p&&!!p.runtime&&!!p.runtime.id||!!s.safari&&!!s.safari.extension}a._isBrowserExtension&&a._log.info("Running as browser extension.");if(navigator){var h=navigator;a._networkInformation=h.connection||h.mozConnection||h.webkitConnection}a._networkInformation&&typeof a._networkInformation.addEventListener==="function"&&a._networkInformation.addEventListener("change",a._publishNetworkChange);Device._getOrCreateAudioContext();Device._audioContext&&(Device._dialtonePlayer||(Device._dialtonePlayer=new l.default(Device._audioContext)));typeof Device._isUnifiedPlanDefault==="undefined"&&(Device._isUnifiedPlanDefault=typeof window!=="undefined"&&typeof RTCPeerConnection!=="undefined"&&typeof RTCRtpTransceiver!=="undefined"&&S.isUnifiedPlanDefault(window,window.navigator,RTCPeerConnection,RTCRtpTransceiver));a._boundDestroy=a.destroy.bind(a);a._boundConfirmClose=a._confirmClose.bind(a);if(typeof window!=="undefined"&&window.addEventListener){window.addEventListener("unload",a._boundDestroy);window.addEventListener("pagehide",a._boundDestroy)}a.updateOptions(t);return a}Object.defineProperty(Device,"audioContext",{get:function(){return Device._audioContext},enumerable:false,configurable:true});Object.defineProperty(Device,"extension",{get:function(){var e=typeof document!=="undefined"?document.createElement("audio"):{canPlayType:false};var t;try{t=e.canPlayType&&!!e.canPlayType("audio/mpeg").replace(/no/,"")}catch(e){t=false}var n;try{n=e.canPlayType&&!!e.canPlayType("audio/ogg;codecs='vorbis'").replace(/no/,"")}catch(e){n=false}return n&&!t?"ogg":"mp3"},enumerable:false,configurable:true});Object.defineProperty(Device,"isSupported",{get:function(){return g.enabled()},enumerable:false,configurable:true});Object.defineProperty(Device,"packageName",{get:function(){return u.PACKAGE_NAME},enumerable:false,configurable:true});
/**
     * Run some tests to identify issues, if any, prohibiting successful calling.
     * @param token - A Twilio JWT token string
     * @param options
     */Device.runPreflight=function(e,n){return new h.PreflightTest(e,t({audioContext:Device._getOrCreateAudioContext()},n))};Device.toString=function(){return"[Twilio.Device class]"};Object.defineProperty(Device,"version",{get:function(){return u.RELEASE_VERSION},enumerable:false,configurable:true});Device._getOrCreateAudioContext=function(){Device._audioContext||(typeof AudioContext!=="undefined"?Device._audioContext=new AudioContext:typeof webkitAudioContext!=="undefined"&&(Device._audioContext=new webkitAudioContext));return Device._audioContext};Object.defineProperty(Device.prototype,"audio",{get:function(){return this._audio},enumerable:false,configurable:true});
/**
     * Make an outgoing Call.
     * @param options
     */Device.prototype.connect=function(e){e===void 0&&(e={});return n(this,void 0,void 0,(function(){var t,n;return r(this,(function(r){switch(r.label){case 0:this._log.debug(".connect",JSON.stringify(e&&e.params||{}),e);this._throwIfDestroyed();if(this._activeCall)throw new d.InvalidStateError("A Call is already active");n=this;return[4,this._makeCall(e.params||{},{enableImprovedSignalingErrorPrecision:!!this._options.enableImprovedSignalingErrorPrecision,rtcConfiguration:e.rtcConfiguration,voiceEventSidGenerator:this._options.voiceEventSidGenerator})];case 1:t=n._activeCall=r.sent();this._calls.splice(0).forEach((function(e){return e.ignore()}));this._soundcache.get(Device.SoundName.Incoming).stop();t.accept({rtcConstraints:e.rtcConstraints});this._publishNetworkChange();return[2,t]}}))}))};Object.defineProperty(Device.prototype,"calls",{get:function(){return this._calls},enumerable:false,configurable:true});Device.prototype.destroy=function(){var e;this._log.debug(".destroy");this.disconnectAll();this._stopRegistrationTimer();this._destroyStream();this._destroyPublisher();this._destroyAudioHelper();(e=this._audioProcessorEventObserver)===null||e===void 0?void 0:e.destroy();this._networkInformation&&typeof this._networkInformation.removeEventListener==="function"&&this._networkInformation.removeEventListener("change",this._publishNetworkChange);if(typeof window!=="undefined"&&window.removeEventListener){window.removeEventListener("beforeunload",this._boundConfirmClose);window.removeEventListener("unload",this._boundDestroy);window.removeEventListener("pagehide",this._boundDestroy)}this._setState(Device.State.Destroyed);o.EventEmitter.prototype.removeAllListeners.call(this)};Device.prototype.disconnectAll=function(){this._log.debug(".disconnectAll");var e=this._calls.splice(0);e.forEach((function(e){return e.disconnect()}));this._activeCall&&this._activeCall.disconnect()};Object.defineProperty(Device.prototype,"edge",{get:function(){return this._edge},enumerable:false,configurable:true});Object.defineProperty(Device.prototype,"home",{get:function(){return this._home},enumerable:false,configurable:true});Object.defineProperty(Device.prototype,"identity",{get:function(){return this._identity},enumerable:false,configurable:true});Object.defineProperty(Device.prototype,"isBusy",{get:function(){return!!this._activeCall},enumerable:false,configurable:true});Device.prototype.register=function(){return n(this,void 0,void 0,(function(){return r(this,(function(e){switch(e.label){case 0:this._log.debug(".register");if(this.state!==Device.State.Unregistered)throw new d.InvalidStateError('Attempt to register when device is in state "'+this.state+'". Must be "'+Device.State.Unregistered+'".');this._shouldReRegister=false;this._setState(Device.State.Registering);return[4,this._streamConnectedPromise||this._setupStream()];case 1:e.sent();return[4,this._sendPresence(true)];case 2:e.sent();return[4,S.promisifyEvents(this,Device.State.Registered,Device.State.Unregistered)];case 3:e.sent();return[2]}}))}))};Object.defineProperty(Device.prototype,"state",{get:function(){return this._state},enumerable:false,configurable:true});Object.defineProperty(Device.prototype,"token",{get:function(){return this._token},enumerable:false,configurable:true});Device.prototype.toString=function(){return"[Twilio.Device instance]"};Device.prototype.unregister=function(){return n(this,void 0,void 0,(function(){var e,t;return r(this,(function(n){switch(n.label){case 0:this._log.debug(".unregister");if(this.state!==Device.State.Registered)throw new d.InvalidStateError('Attempt to unregister when device is in state "'+this.state+'". Must be "'+Device.State.Registered+'".');this._shouldReRegister=false;return[4,this._streamConnectedPromise];case 1:e=n.sent();t=new Promise((function(t){e.on("offline",t)}));return[4,this._sendPresence(false)];case 2:n.sent();return[4,t];case 3:n.sent();return[2]}}))}))};
/**
     * Set the options used within the {@link Device}.
     * @param options
     */Device.prototype.updateOptions=function(e){e===void 0&&(e={});this._logOptions("updateOptions",e);if(this.state===Device.State.Destroyed)throw new d.InvalidStateError('Attempt to "updateOptions" when device is in state "'+this.state+'".');this._options=t(t(t({},this._defaultOptions),this._options),e);var n=new Set(this._chunderURIs);var r=typeof this._options.chunderw==="string"?[this._options.chunderw]:Array.isArray(this._options.chunderw)&&this._options.chunderw;var o=this._chunderURIs=(r||m.getChunderURIs(this._options.edge)).map(m.createSignalingEndpointURL);var i=n.size!==o.length;if(!i)for(var a=0,s=o;a<s.length;a++){var c=s[a];if(!n.has(c)){i=true;break}}if(this.isBusy&&i)throw new d.InvalidStateError("Cannot change Edge while on an active Call");this._setupLoglevel(this._options.logLevel);if(this._options.dscp){this._options.rtcConstraints||(this._options.rtcConstraints={});this._options.rtcConstraints.optional=[{googDscp:true}]}for(var l=0,p=Object.keys(Device._defaultSounds);l<p.length;l++){var f=p[l];var h=Device._defaultSounds[f];var v=u.SOUNDS_BASE_URL+"/"+h.filename+"."+Device.extension+"?cache="+u.RELEASE_VERSION;var g=this._options.sounds&&this._options.sounds[f]||v;var _=new(this._options.Sound||y.default)(f,g,{audioContext:this._options.disableAudioContextSounds?null:Device.audioContext,maxDuration:h.maxDuration,shouldLoop:h.shouldLoop});this._soundcache.set(f,_)}this._setupAudioHelper();this._setupPublisher();i&&this._streamConnectedPromise&&this._setupStream();if(typeof window!=="undefined"&&typeof window.addEventListener==="function"&&this._options.closeProtection){window.removeEventListener("beforeunload",this._boundConfirmClose);window.addEventListener("beforeunload",this._boundConfirmClose)}};
/**
     * Update the token used by this {@link Device} to connect to Twilio.
     * It is recommended to call this API after [[Device.tokenWillExpireEvent]] is emitted,
     * and before or after a call to prevent a potential ~1s audio loss during the update process.
     * @param token
     */Device.prototype.updateToken=function(e){this._log.debug(".updateToken");if(this.state===Device.State.Destroyed)throw new d.InvalidStateError('Attempt to "updateToken" when device is in state "'+this.state+'".');if(typeof e!=="string")throw new d.InvalidArgumentError(T);this._token=e;this._stream&&this._stream.setToken(this._token);this._publisher&&this._publisher.setToken(this._token)};
/**
     * Called on window's beforeunload event if closeProtection is enabled,
     * preventing users from accidentally navigating away from an active call.
     * @param event
     */Device.prototype._confirmClose=function(e){if(!this._activeCall)return"";var t=this._options.closeProtection||false;var n=typeof t!=="string"?"A call is currently in-progress. Leaving or reloading this page will end the call.":t;(e||window.event).returnValue=n;return n};Device.prototype._destroyAudioHelper=function(){if(this._audio){this._audio._destroy();this._audio=null}};Device.prototype._destroyPublisher=function(){this._publisher&&(this._publisher=null)};Device.prototype._destroyStream=function(){if(this._stream){this._stream.removeListener("close",this._onSignalingClose);this._stream.removeListener("connected",this._onSignalingConnected);this._stream.removeListener("error",this._onSignalingError);this._stream.removeListener("invite",this._onSignalingInvite);this._stream.removeListener("offline",this._onSignalingOffline);this._stream.removeListener("ready",this._onSignalingReady);this._stream.destroy();this._stream=null}this._onSignalingOffline();this._streamConnectedPromise=null};
/**
     * Find a {@link Call} by its CallSid.
     * @param callSid
     */Device.prototype._findCall=function(e){return this._calls.find((function(t){return t.parameters.CallSid===e||t.outboundConnectionId===e}))||null};Device.prototype._logOptions=function(e,n){n===void 0&&(n={});var r=["allowIncomingWhileBusy","appName","appVersion","closeProtection","codecPreferences","disableAudioContextSounds","dscp","edge","enableImprovedSignalingErrorPrecision","forceAggressiveIceNomination","logLevel","maxAverageBitrate","maxCallSignalingTimeoutMs","sounds","tokenRefreshMs"];var o=["RTCPeerConnection","enumerateDevices","getUserMedia"];if(typeof n==="object"){var i=t({},n);Object.keys(i).forEach((function(e){r.includes(e)||o.includes(e)||delete i[e];o.includes(e)&&(i[e]=true)}));this._log.debug("."+e,JSON.stringify(i))}};
/**
     * Create a new {@link Call}.
     * @param twimlParams - A flat object containing key:value pairs to be sent to the TwiML app.
     * @param options - Options to be used to instantiate the {@link Call}.
     */Device.prototype._makeCall=function(e,t){return n(this,void 0,void 0,(function(){var n,o,i;var a;var s=this;return r(this,(function(r){switch(r.label){case 0:if(typeof Device._isUnifiedPlanDefault==="undefined")throw new d.InvalidStateError("Device has not been initialized.");a={audioHelper:this._audio,isUnifiedPlanDefault:Device._isUnifiedPlanDefault,onIgnore:function(){s._soundcache.get(Device.SoundName.Incoming).stop()}};return[4,this._streamConnectedPromise||this._setupStream()];case 1:n=(a.pstream=r.sent(),a.publisher=this._publisher,a.soundcache=this._soundcache,a);t=Object.assign({MediaStream:this._options.MediaStream||g.PeerConnection,RTCPeerConnection:this._options.RTCPeerConnection,beforeAccept:function(e){if(s._activeCall&&s._activeCall!==e){s._activeCall.disconnect();s._removeCall(s._activeCall)}},codecPreferences:this._options.codecPreferences,customSounds:this._options.sounds,dialtonePlayer:Device._dialtonePlayer,dscp:this._options.dscp,forceAggressiveIceNomination:this._options.forceAggressiveIceNomination,getInputStream:function(){return s._options.fileInputStream||s._callInputStream},getSinkIds:function(){return s._callSinkIds},maxAverageBitrate:this._options.maxAverageBitrate,preflight:this._options.preflight,rtcConstraints:this._options.rtcConstraints,shouldPlayDisconnect:function(){var e;return(e=s._audio)===null||e===void 0?void 0:e.disconnect()},twimlParams:e,voiceEventSidGenerator:this._options.voiceEventSidGenerator},t);o=function(){s._stream?s._activeCall===null&&s._calls.length===0&&s._stream.updatePreferredURI(null):s._log.warn("UnsetPreferredUri called without a stream")};i=new(this._options.Call||c.default)(n,t);this._publisher.info("settings","init",{RTCPeerConnection:!!this._options.RTCPeerConnection,enumerateDevices:!!this._options.enumerateDevices,getUserMedia:!!this._options.getUserMedia},i);i.once("accept",(function(){var e,t,n;s._stream.updatePreferredURI(s._preferredURI);s._removeCall(i);s._activeCall=i;s._audio&&s._audio._maybeStartPollingVolume();i.direction===c.default.CallDirection.Outgoing&&((e=s._audio)===null||e===void 0?void 0:e.outgoing())&&s._soundcache.get(Device.SoundName.Outgoing).play();var r={edge:s._edge||s._region};s._options.edge&&(r.selected_edge=Array.isArray(s._options.edge)?s._options.edge:[s._options.edge]);s._publisher.info("settings","edge",r,i);((t=s._audio)===null||t===void 0?void 0:t.processedStream)&&((n=s._audioProcessorEventObserver)===null||n===void 0?void 0:n.emit("enabled"))}));i.addListener("error",(function(e){if(i.status()==="closed"){s._removeCall(i);o()}s._audio&&s._audio._maybeStopPollingVolume();s._maybeStopIncomingSound()}));i.once("cancel",(function(){s._log.info("Canceled: "+i.parameters.CallSid);s._removeCall(i);o();s._audio&&s._audio._maybeStopPollingVolume();s._maybeStopIncomingSound()}));i.once("disconnect",(function(){s._audio&&s._audio._maybeStopPollingVolume();s._removeCall(i);o();s._maybeStopIncomingSound()}));i.once("reject",(function(){s._log.info("Rejected: "+i.parameters.CallSid);s._audio&&s._audio._maybeStopPollingVolume();s._removeCall(i);o();s._maybeStopIncomingSound()}));i.on("transportClose",(function(){if(i.status()===c.default.State.Pending){s._audio&&s._audio._maybeStopPollingVolume();s._removeCall(i);s._maybeStopIncomingSound()}}));return[2,i]}}))}))};Device.prototype._maybeStopIncomingSound=function(){this._calls.length||this._soundcache.get(Device.SoundName.Incoming).stop()};
/**
     * Remove a {@link Call} from device.calls by reference
     * @param call
     */Device.prototype._removeCall=function(e){this._activeCall===e&&(this._activeCall=null);for(var t=this._calls.length-1;t>=0;t--)e===this._calls[t]&&this._calls.splice(t,1)};Device.prototype._sendPresence=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(n){switch(n.label){case 0:return[4,this._streamConnectedPromise];case 1:t=n.sent();if(!t)return[2];t.register({audio:e});e?this._startRegistrationTimer():this._stopRegistrationTimer();return[2]}}))}))};
/**
     * Helper function that sets and emits the state of the device.
     * @param state The new state of the device.
     */Device.prototype._setState=function(e){if(e!==this.state){this._state=e;var t=this._stateEventMapping[e];this._log.debug("#"+t);this.emit(t)}};Device.prototype._setupAudioHelper=function(){var e=this;if(!this._audioProcessorEventObserver){this._audioProcessorEventObserver=new s.AudioProcessorEventObserver;this._audioProcessorEventObserver.on("event",(function(t){var n=t.name,r=t.group;e._publisher.info(r,n,{},e._activeCall)}))}var t={audioContext:Device.audioContext,audioProcessorEventObserver:this._audioProcessorEventObserver,enumerateDevices:this._options.enumerateDevices,getUserMedia:this._options.getUserMedia||_.default};if(this._audio){this._log.info("Found existing audio helper; updating options...");this._audio._updateUserOptions(t)}else{this._audio=new(this._options.AudioHelper||a.default)(this._updateSinkIds,this._updateInputStream,t);this._audio.on("deviceChange",(function(t){var n=e._activeCall;var r=t.map((function(e){return e.deviceId}));e._publisher.info("audio","device-change",{lost_active_device_ids:r},n);n&&n._mediaHandler._onInputDevicesChanged()}))}};Device.prototype._setupLoglevel=function(e){var t=typeof e==="number"||typeof e==="string"?e:i.levels.ERROR;this._log.setDefaultLevel(t);this._log.info("Set logger default level to",t)};Device.prototype._setupPublisher=function(){var e=this;if(this._publisher){this._log.info("Found existing publisher; destroying...");this._destroyPublisher()}var t={defaultPayload:this._createDefaultPayload,metadata:{app_name:this._options.appName,app_version:this._options.appVersion}};this._options.eventgw&&(t.host=this._options.eventgw);this._home&&(t.host=m.createEventGatewayURI(this._home));this._publisher=new(this._options.Publisher||p.default)(E,this.token,t);this._options.publishEvents===false?this._publisher.disable():this._publisher.on("error",(function(t){e._log.warn("Cannot connect to insights.",t)}));return this._publisher};Device.prototype._setupStream=function(){var e=this;if(this._stream){this._log.info("Found existing stream; destroying...");this._destroyStream()}this._log.info("Setting up VSP");this._stream=new(this._options.PStream||v.default)(this.token,this._chunderURIs,{backoffMaxMs:this._options.backoffMaxMs,maxPreferredDurationMs:this._options.maxCallSignalingTimeoutMs});this._stream.addListener("close",this._onSignalingClose);this._stream.addListener("connected",this._onSignalingConnected);this._stream.addListener("error",this._onSignalingError);this._stream.addListener("invite",this._onSignalingInvite);this._stream.addListener("offline",this._onSignalingOffline);this._stream.addListener("ready",this._onSignalingReady);return this._streamConnectedPromise=S.promisifyEvents(this._stream,"connected","close").then((function(){return e._stream}))};
/**
     * Start playing the incoming ringtone, and subsequently emit the incoming event.
     * @param call
     * @param play - The function to be used to play the sound. Must return a Promise.
     */Device.prototype._showIncomingCall=function(e,t){var n=this;var r;return Promise.race([t(),new Promise((function(e,t){r=setTimeout((function(){var e="Playing incoming ringtone took too long; it might not play. Continuing execution...";t(new Error(e))}),w)}))]).catch((function(e){n._log.warn(e.message)})).then((function(){clearTimeout(r);n._log.debug("#incoming",JSON.stringify({customParameters:e.customParameters,parameters:e.parameters}));n.emit(Device.EventName.Incoming,e)}))};Device.prototype._startRegistrationTimer=function(){var e=this;this._stopRegistrationTimer();this._regTimer=setTimeout((function(){e._sendPresence(true)}),C)};Device.prototype._stopRegistrationTimer=function(){this._regTimer&&clearTimeout(this._regTimer)};Device.prototype._throwIfDestroyed=function(){if(this.state===Device.State.Destroyed)throw new d.InvalidStateError("Device has been destroyed.")};
/**
     * Update the device IDs of output devices being used to play the incoming ringtone through.
     * @param sinkIds - An array of device IDs
     */Device.prototype._updateRingtoneSinkIds=function(e){return Promise.resolve(this._soundcache.get(Device.SoundName.Incoming).setSinkIds(e))};
/**
     * Update the device IDs of output devices being used to play the non-ringtone sounds
     * and Call audio through.
     * @param sinkIds - An array of device IDs
     */Device.prototype._updateSpeakerSinkIds=function(e){Array.from(this._soundcache.entries()).filter((function(e){return e[0]!==Device.SoundName.Incoming})).forEach((function(t){return t[1].setSinkIds(e)}));this._callSinkIds=e;var t=this._activeCall;return t?t._setSinkIds(e):Promise.resolve()};Device._defaultSounds={disconnect:{filename:"disconnect",maxDuration:3e3},dtmf0:{filename:"dtmf-0",maxDuration:1e3},dtmf1:{filename:"dtmf-1",maxDuration:1e3},dtmf2:{filename:"dtmf-2",maxDuration:1e3},dtmf3:{filename:"dtmf-3",maxDuration:1e3},dtmf4:{filename:"dtmf-4",maxDuration:1e3},dtmf5:{filename:"dtmf-5",maxDuration:1e3},dtmf6:{filename:"dtmf-6",maxDuration:1e3},dtmf7:{filename:"dtmf-7",maxDuration:1e3},dtmf8:{filename:"dtmf-8",maxDuration:1e3},dtmf9:{filename:"dtmf-9",maxDuration:1e3},dtmfh:{filename:"dtmf-hash",maxDuration:1e3},dtmfs:{filename:"dtmf-star",maxDuration:1e3},incoming:{filename:"incoming",shouldLoop:true},outgoing:{filename:"outgoing",maxDuration:3e3}};return Device}(o.EventEmitter);(function(e){(function(e){e.Error="error";e.Incoming="incoming";e.Destroyed="destroyed";e.Unregistered="unregistered";e.Registering="registering";e.Registered="registered";e.TokenWillExpire="tokenWillExpire"})(e.EventName||(e.EventName={}));(function(e){e.Destroyed="destroyed";e.Unregistered="unregistered";e.Registering="registering";e.Registered="registered"})(e.State||(e.State={}));(function(e){e.Incoming="incoming";e.Outgoing="outgoing";e.Disconnect="disconnect";e.Dtmf0="dtmf0";e.Dtmf1="dtmf1";e.Dtmf2="dtmf2";e.Dtmf3="dtmf3";e.Dtmf4="dtmf4";e.Dtmf5="dtmf5";e.Dtmf6="dtmf6";e.Dtmf7="dtmf7";e.Dtmf8="dtmf8";e.Dtmf9="dtmf9";e.DtmfS="dtmfs";e.DtmfH="dtmfh"})(e.SoundName||(e.SoundName={}))})(P||(P={}));De.default=P;return De}var Re={},Oe=false;function dew$4(){if(Oe)return Re;Oe=true;Object.defineProperty(Re,"__esModule",{value:true});Re.IceCandidate=void 0;var e=function(){
/**
     * @constructor
     * @param iceCandidate RTCIceCandidate coming from the browser
     */
function IceCandidate(e,t){t===void 0&&(t=false);this.deleted=false;var n;var r=e.candidate.split("network-cost ");r[1]&&(n=parseInt(r[1],10));this.candidateType=e.type;this.ip=e.ip||e.address;this.isRemote=t;this.networkCost=n;this.port=e.port;this.priority=e.priority;this.protocol=e.protocol;this.relatedAddress=e.relatedAddress;this.relatedPort=e.relatedPort;this.tcpType=e.tcpType;this.transportId=e.sdpMid}IceCandidate.prototype.toPayload=function(){return{candidate_type:this.candidateType,deleted:this.deleted,ip:this.ip,is_remote:this.isRemote,"network-cost":this.networkCost,port:this.port,priority:this.priority,protocol:this.protocol,related_address:this.relatedAddress,related_port:this.relatedPort,tcp_type:this.tcpType,transport_id:this.transportId}};return IceCandidate}();Re.IceCandidate=e;return Re}var xe={},Me=false;function dew$3(){if(Me)return xe;Me=true;Object.defineProperty(xe,"__esModule",{value:true});xe.isNonNegativeNumber=xe.calculate=void 0;var e=94.768;
/**
   * Calculate the mos score of a stats object
   * @param {number} rtt
   * @param {number} jitter
   * @param {number} fractionLost - The fraction of packets that have been lost.
   * Calculated by packetsLost / totalPackets
   * @return {number | null} mos - Calculated MOS, `1.0` through roughly `4.5`.
   * Returns `null` when any of the input parameters are not a `non-negative`
   * number.
   */function calculate(t,n,r){if(typeof t!=="number"||typeof n!=="number"||typeof r!=="number"||!isNonNegativeNumber(t)||!isNonNegativeNumber(n)||!isNonNegativeNumber(r))return null;var o=t+n*2+10;var i=0;switch(true){case o<160:i=e-o/40;break;case o<1e3:i=e-(o-120)/10;break}switch(true){case r<=i/2.5:i=Math.max(i-r*2.5,6.52);break;default:i=0;break}var a=1+.035*i+7e-6*i*(i-60)*(100-i);return a}xe.calculate=calculate;
/**
   * Returns true if and only if the parameter passed is a number, is not `NaN`,
   * is finite, and is greater than or equal to `0`.
   * @param n
   */function isNonNegativeNumber(e){return typeof e==="number"&&!isNaN(e)&&isFinite(e)&&e>=0}xe.isNonNegativeNumber=isNonNegativeNumber;xe.default={calculate:calculate,isNonNegativeNumber:isNonNegativeNumber};return xe}var je=e;try{"default"in e&&(je=e.default)}catch(e){}var Le={},Ne=false;function dew$2(){if(Ne)return Le;Ne=true;var e=Le&&Le.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();var t=Le&&Le.__assign||function(){t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};return t.apply(this,arguments)};var n=Le&&Le.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,s=i.length;a<s;a++,o++)r[o]=i[a];return r};Object.defineProperty(Le,"__esModule",{value:true});var r=je;var o=dew$y();var i=dew$3();var a=dew$m();var s=dew$t();var c=5;var u=0;var l=3;var d=1e3;var p=5e3;var f={audioInputLevel:{minStandardDeviation:327.67,sampleCount:10},audioOutputLevel:{minStandardDeviation:327.67,sampleCount:10},bytesReceived:{clearCount:2,min:1,raiseCount:3,sampleCount:3},bytesSent:{clearCount:2,min:1,raiseCount:3,sampleCount:3},jitter:{max:30},mos:{min:3},packetsLostFraction:[{max:1},{clearValue:1,maxAverage:3,sampleCount:7}],rtt:{max:400}};
/**
   * Count the number of values that cross the max threshold.
   * @private
   * @param max - The max allowable value.
   * @param values - The values to iterate over.
   * @returns The amount of values in which the stat crossed the threshold.
   */function countHigh(e,t){return t.reduce((function(t,n){return t+(n>e?1:0)}),0)}
/**
   * Count the number of values that cross the min threshold.
   * @private
   * @param min - The minimum allowable value.
   * @param values - The values to iterate over.
   * @returns The amount of values in which the stat crossed the threshold.
   */function countLow(e,t){return t.reduce((function(t,n){return t+(n<e?1:0)}),0)}
/**
   * Calculate the standard deviation from a list of numbers.
   * @private
   * @param values The list of numbers to calculate the standard deviation from.
   * @returns The standard deviation of a list of numbers.
   */function calculateStandardDeviation(e){if(e.length<=0)return null;var t=e.reduce((function(e,t){return e+t}),0)/e.length;var n=e.map((function(e){return Math.pow(e-t,2)}));var r=Math.sqrt(n.reduce((function(e,t){return e+t}),0)/n.length);return r}
/**
   * Flatten a set of numerical sample sets into a single array of samples.
   * @param sampleSets
   */function flattenSamples(e){return e.reduce((function(e,t){return n(e,t)}),[])}var h=function(r){e(StatsMonitor,r);
/**
     * @constructor
     * @param [options] - Optional settings
     */function StatsMonitor(e){var o=r.call(this)||this;o._activeWarnings=new Map;o._currentStreaks=new Map;o._inputVolumes=[];o._outputVolumes=[];o._sampleBuffer=[];o._supplementalSampleBuffers={audioInputLevel:[],audioOutputLevel:[]};o._warningsEnabled=true;e=e||{};o._getRTCStats=e.getRTCStats||a.getRTCStats;o._mos=e.Mos||i.default;o._peerConnection=e.peerConnection;o._thresholds=t(t({},f),e.thresholds);var s=Object.values(o._thresholds).map((function(e){return e.sampleCount})).filter((function(e){return!!e}));o._maxSampleCount=Math.max.apply(Math,n([c],s));o._peerConnection&&o.enable(o._peerConnection);return o}
/**
     * Called when a volume sample is available
     * @param inputVolume - Input volume level from 0 to 32767
     * @param outputVolume - Output volume level from 0 to 32767
     */StatsMonitor.prototype.addVolumes=function(e,t){this._inputVolumes.push(e);this._outputVolumes.push(t)};
/**
     * Stop sampling RTC statistics for this {@link StatsMonitor}.
     * @returns The current {@link StatsMonitor}.
     */StatsMonitor.prototype.disable=function(){if(this._sampleInterval){clearInterval(this._sampleInterval);delete this._sampleInterval}return this};
/**
     * Disable warnings for this {@link StatsMonitor}.
     * @returns The current {@link StatsMonitor}.
     */StatsMonitor.prototype.disableWarnings=function(){this._warningsEnabled&&this._activeWarnings.clear();this._warningsEnabled=false;return this};
/**
     * Start sampling RTC statistics for this {@link StatsMonitor}.
     * @param peerConnection - A PeerConnection to monitor.
     * @returns The current {@link StatsMonitor}.
     */StatsMonitor.prototype.enable=function(e){if(e){if(this._peerConnection&&e!==this._peerConnection)throw new o.InvalidArgumentError("Attempted to replace an existing PeerConnection in StatsMonitor.enable");this._peerConnection=e}if(!this._peerConnection)throw new o.InvalidArgumentError("Can not enable StatsMonitor without a PeerConnection");this._sampleInterval=this._sampleInterval||setInterval(this._fetchSample.bind(this),d);return this};
/**
     * Enable warnings for this {@link StatsMonitor}.
     * @returns The current {@link StatsMonitor}.
     */StatsMonitor.prototype.enableWarnings=function(){this._warningsEnabled=true;return this};
/**
     * Check if there is an active warning for a specific stat and threshold
     * @param statName - The name of the stat to check
     * @param thresholdName - The name of the threshold to check
     * @returns Whether there is an active warning for a specific stat and threshold
     */StatsMonitor.prototype.hasActiveWarning=function(e,t){var n=e+":"+t;return!!this._activeWarnings.get(n)};
/**
     * Add a sample to our sample buffer and remove the oldest if we are over the limit.
     * @param sample - Sample to add
     */StatsMonitor.prototype._addSample=function(e){var t=this._sampleBuffer;t.push(e);t.length>this._maxSampleCount&&t.splice(0,t.length-this._maxSampleCount)};
/**
     * Clear an active warning.
     * @param statName - The name of the stat to clear.
     * @param thresholdName - The name of the threshold to clear
     * @param [data] - Any relevant sample data.
     */StatsMonitor.prototype._clearWarning=function(e,n,r){var o=e+":"+n;var i=this._activeWarnings.get(o);if(i&&!(Date.now()-i.timeRaised<p)){this._activeWarnings.delete(o);this.emit("warning-cleared",t(t({},r),{name:e,threshold:{name:n,value:this._thresholds[e][n]}}))}};
/**
     * Create a sample object from a stats object using the previous sample, if available.
     * @param stats - Stats retrieved from getStatistics
     * @param [previousSample=null] - The previous sample to use to calculate deltas.
     * @returns A universally-formatted version of RTC stats.
     */StatsMonitor.prototype._createSample=function(e,t){var n=t&&t.totals.bytesSent||0;var r=t&&t.totals.bytesReceived||0;var o=t&&t.totals.packetsSent||0;var i=t&&t.totals.packetsReceived||0;var a=t&&t.totals.packetsLost||0;var c=e.bytesSent-n;var u=e.bytesReceived-r;var l=e.packetsSent-o;var d=e.packetsReceived-i;var p=e.packetsLost-a;var f=d+p;var h=f>0?p/f*100:0;var v=e.packetsReceived+e.packetsLost;var m=v>0?e.packetsLost/v*100:100;var g=typeof e.rtt!=="number"&&t?t.rtt:e.rtt;var _=this._inputVolumes.splice(0);this._supplementalSampleBuffers.audioInputLevel.push(_);var y=this._outputVolumes.splice(0);this._supplementalSampleBuffers.audioOutputLevel.push(y);return{audioInputLevel:Math.round(s.average(_)),audioOutputLevel:Math.round(s.average(y)),bytesReceived:u,bytesSent:c,codecName:e.codecName,jitter:e.jitter,mos:this._mos.calculate(g,e.jitter,t&&h),packetsLost:p,packetsLostFraction:h,packetsReceived:d,packetsSent:l,rtt:g,timestamp:e.timestamp,totals:{bytesReceived:e.bytesReceived,bytesSent:e.bytesSent,packetsLost:e.packetsLost,packetsLostFraction:m,packetsReceived:e.packetsReceived,packetsSent:e.packetsSent}}};StatsMonitor.prototype._fetchSample=function(){var e=this;this._getSample().then((function(t){e._addSample(t);e._raiseWarnings();e.emit("sample",t)})).catch((function(t){e.disable();e.emit("error",t)}))};
/**
     * Get stats from the PeerConnection.
     * @returns A universally-formatted version of RTC stats.
     */StatsMonitor.prototype._getSample=function(){var e=this;return this._getRTCStats(this._peerConnection).then((function(t){var n=null;e._sampleBuffer.length&&(n=e._sampleBuffer[e._sampleBuffer.length-1]);return e._createSample(t,n)}))};
/**
     * Raise a warning and log its raised time.
     * @param statName - The name of the stat to raise.
     * @param thresholdName - The name of the threshold to raise
     * @param [data] - Any relevant sample data.
     */StatsMonitor.prototype._raiseWarning=function(e,n,r){var o=e+":"+n;if(!this._activeWarnings.has(o)){this._activeWarnings.set(o,{timeRaised:Date.now()});var i=this._thresholds[e];var a;if(Array.isArray(i)){var s=i.find((function(e){return n in e}));s&&(a=s[n])}else a=this._thresholds[e][n];this.emit("warning",t(t({},r),{name:e,threshold:{name:n,value:a}}))}};StatsMonitor.prototype._raiseWarnings=function(){var e=this;this._warningsEnabled&&Object.keys(this._thresholds).forEach((function(t){return e._raiseWarningsForStat(t)}))};
/**
     * Apply thresholds for a given stat name to our array of
     * RTCStat samples and raise or clear any associated warnings.
     * @param statName - Name of the stat to compare.
     */StatsMonitor.prototype._raiseWarningsForStat=function(e){var t=this;var n=Array.isArray(this._thresholds[e])?this._thresholds[e]:[this._thresholds[e]];n.forEach((function(n){var r=t._sampleBuffer;var o=n.clearCount||u;var i=n.raiseCount||l;var a=n.sampleCount||t._maxSampleCount;var c=r.slice(-a);var d=c.map((function(t){return t[e]}));var p=d.some((function(e){return typeof e==="undefined"||e===null}));if(!p){var f;if(typeof n.max==="number"){f=countHigh(n.max,d);f>=i?t._raiseWarning(e,"max",{values:d,samples:c}):f<=o&&t._clearWarning(e,"max",{values:d,samples:c})}if(typeof n.min==="number"){f=countLow(n.min,d);f>=i?t._raiseWarning(e,"min",{values:d,samples:c}):f<=o&&t._clearWarning(e,"min",{values:d,samples:c})}if(typeof n.maxDuration==="number"&&r.length>1){c=r.slice(-2);var h=c[0][e];var v=c[1][e];var m=t._currentStreaks.get(e)||0;var g=h===v?m+1:0;t._currentStreaks.set(e,g);g>=n.maxDuration?t._raiseWarning(e,"maxDuration",{value:g}):g===0&&t._clearWarning(e,"maxDuration",{value:m})}if(typeof n.minStandardDeviation==="number"){var _=t._supplementalSampleBuffers[e];if(!_||_.length<n.sampleCount)return;_.length>n.sampleCount&&_.splice(0,_.length-n.sampleCount);var y=flattenSamples(_.slice(-a));var S=calculateStandardDeviation(y);if(typeof S!=="number")return;S<n.minStandardDeviation?t._raiseWarning(e,"minStandardDeviation",{value:S}):t._clearWarning(e,"minStandardDeviation",{value:S})}[["maxAverage",function(e,t){return e>t}],["minAverage",function(e,t){return e<t}]].forEach((function(r){var o=r[0],i=r[1];if(typeof n[o]==="number"&&d.length>=a){var u=s.average(d);i(u,n[o])?t._raiseWarning(e,o,{values:d,samples:c}):i(u,n.clearValue||n[o])||t._clearWarning(e,o,{values:d,samples:c})}}))}}))};return StatsMonitor}(r.EventEmitter);Le.default=h;return Le}var Ue=e;try{"default"in e&&(Ue=e.default)}catch(e){}var Fe={},He=false;function dew$1(){if(He)return Fe;He=true;var e=Fe&&Fe.__extends||function(){var extendStatics=function(e,t){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])};return extendStatics(e,t)};return function(e,t){extendStatics(e,t);function __(){this.constructor=e}e.prototype=t===null?Object.create(t):(__.prototype=t.prototype,new __)}}();var t=Fe&&Fe.__assign||function(){t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};return t.apply(this,arguments)};Object.defineProperty(Fe,"__esModule",{value:true});var n=Ue;var r=dew$B();var o=dew$5();var i=dew$y();var a=dew$w();var s=dew$e();var c=dew$4();var u=dew$h();var l=dew$2();var d=dew$t();var p=dew$6();var f=dew$x();var h={factor:1.1,jitter:.5,max:3e4,min:1};var v=70;var m=500;var g=160;var _=10;var y=5e3;var S={disconnect:true,info:{code:31003,message:"Connection with Twilio was interrupted.",twilioError:new i.MediaErrors.ConnectionError}};var b={packetsLostFraction:{max:"packet-loss",maxAverage:"packets-lost-fraction"}};var C={audioInputLevel:"audio-input-level",audioOutputLevel:"audio-output-level",bytesReceived:"bytes-received",bytesSent:"bytes-sent",jitter:"jitter",mos:"mos",rtt:"rtt"};var w={max:"high-",maxAverage:"high-",maxDuration:"constant-",min:"low-",minStandardDeviation:"constant-"};var E=function(n){e(Call,n);
/**
     * @constructor
     * @private
     * @param config - Mandatory configuration options
     * @param [options] - Optional settings
     */function Call(e,u){var f=n.call(this)||this;f.parameters={};f._inputVolumeStreak=0;f._isAnswered=false;f._isCancelled=false;f._isRejected=false;f._latestInputVolume=0;f._latestOutputVolume=0;f._log=new a.default("Call");f._mediaStatus=Call.State.Pending;f._messages=new Map;f._metricsSamples=[];f._options={MediaHandler:s.PeerConnection,enableImprovedSignalingErrorPrecision:false,offerSdp:null,shouldPlayDisconnect:function(){return true},voiceEventSidGenerator:p.generateVoiceEventSid};f._outputVolumeStreak=0;f._shouldSendHangup=true;f._signalingStatus=Call.State.Pending;f._soundcache=new Map;f._status=Call.State.Pending;f._wasConnected=false;f.toString=function(){return"[Twilio.Call instance]"};f._emitWarning=function(e,t,n,r,o,i){var a=o?"-cleared":"-raised";var s=e+"warning"+a;if(t!=="constant-audio-input-level"||!f.isMuted()){var c=o?"info":"warning";t==="constant-audio-output-level"&&(c="info");var u={threshold:n};r&&(r instanceof Array?u.values=r.map((function(e){return typeof e==="number"?Math.round(e*100)/100:r})):u.value=r);f._publisher.post(c,s,t,{data:u},f);if(t!=="constant-audio-output-level"){var l=o?"warning-cleared":"warning";f._log.debug("#"+l,t);f.emit(l,t,i&&!o?i:null)}}};
/**
       * Called when the {@link Call} receives an ack from signaling
       * @param payload
       */f._onAck=function(e){var t=e.acktype,n=e.callsid,r=e.voiceeventsid;f.parameters.CallSid===n?t==="message"&&f._onMessageSent(r):f._log.warn("Received ack from a different callsid: "+n)};
/**
       * Called when the {@link Call} is answered.
       * @param payload
       */f._onAnswer=function(e){typeof e.reconnect==="string"&&(f._signalingReconnectToken=e.reconnect);if(!f._isAnswered||f._status===Call.State.Reconnecting){f._setCallSid(e);f._isAnswered=true;f._maybeTransitionToOpen()}};
/**
       * Called when the {@link Call} is cancelled.
       * @param payload
       */f._onCancel=function(e){var t=e.callsid;if(f.parameters.CallSid===t){f._isCancelled=true;f._publisher.info("connection","cancel",null,f);f._cleanupEventListeners();f._mediaHandler.close();f._status=Call.State.Closed;f._log.debug("#cancel");f.emit("cancel");f._pstream.removeListener("cancel",f._onCancel)}};f._onConnected=function(){f._log.info("Received connected from pstream");f._signalingReconnectToken&&f._mediaHandler.version&&f._pstream.reconnect(f._mediaHandler.version.getSDP(),f.parameters.CallSid,f._signalingReconnectToken)};
/**
       * Called when the {@link Call} is hung up.
       * @param payload
       */f._onHangup=function(e){if(f.status()!==Call.State.Closed){if(e.callsid&&(f.parameters.CallSid||f.outboundConnectionId)){if(e.callsid!==f.parameters.CallSid&&e.callsid!==f.outboundConnectionId)return}else if(e.callsid)return;f._log.info("Received HANGUP from gateway");if(e.error){var t=e.error.code;var n=i.getPreciseSignalingErrorByCode(f._options.enableImprovedSignalingErrorPrecision,t);var r=typeof n!=="undefined"?new n(e.error.message):new i.GeneralErrors.ConnectionError("Error sent from gateway in HANGUP");f._log.error("Received an error from the gateway:",r);f._log.debug("#error",r);f.emit("error",r)}f._shouldSendHangup=false;f._publisher.info("connection","disconnected-by-remote",null,f);f._disconnect(null,true);f._cleanupEventListeners()}};
/**
       * Called when there is a media failure.
       * Manages all media-related states and takes action base on the states
       * @param type - Type of media failure
       */f._onMediaFailure=function(e){var t=Call.MediaFailure,n=t.ConnectionDisconnected,r=t.ConnectionFailed,o=t.IceGatheringFailed,a=t.LowBytes;var s=e===r||e===o;if(!d.isChrome(window,window.navigator)&&e===r)return f._mediaHandler.onerror(S);if(f._mediaStatus!==Call.State.Reconnecting){var c=f._mediaHandler.version.pc;var u=c&&c.iceConnectionState==="disconnected";var l=f._monitor.hasActiveWarning("bytesSent","min")||f._monitor.hasActiveWarning("bytesReceived","min");if(e===a&&u||e===n&&l||s){var p=new i.MediaErrors.ConnectionError("Media connection failed.");f._log.warn("ICE Connection disconnected.");f._publisher.warn("connection","error",p,f);f._publisher.info("connection","reconnecting",null,f);f._mediaReconnectStartTime=Date.now();f._status=Call.State.Reconnecting;f._mediaStatus=Call.State.Reconnecting;f._mediaReconnectBackoff.reset();f._mediaReconnectBackoff.backoff();f._log.debug("#reconnecting");f.emit("reconnecting",p)}}else if(s){if(Date.now()-f._mediaReconnectStartTime>h.max){f._log.warn("Exceeded max ICE retries");return f._mediaHandler.onerror(S)}try{f._mediaReconnectBackoff.backoff()}catch(e){if(!(e.message&&e.message==="Backoff in progress."))throw e}}};f._onMediaReconnected=function(){if(f._mediaStatus===Call.State.Reconnecting){f._log.info("ICE Connection reestablished.");f._mediaStatus=Call.State.Open;if(f._signalingStatus===Call.State.Open){f._publisher.info("connection","reconnected",null,f);f._log.debug("#reconnected");f.emit("reconnected");f._status=Call.State.Open}}};
/**
       * Raised when a Call receives a message from the backend.
       * @param payload - A record representing the payload of the message from the
       * Twilio backend.
       */f._onMessageReceived=function(e){var t=e.callsid,n=e.content,r=e.contenttype,o=e.messagetype,i=e.voiceeventsid;if(f.parameters.CallSid===t){var a={content:n,contentType:r,messageType:o,voiceEventSid:i};f._log.debug("#messageReceived",JSON.stringify(a));f.emit("messageReceived",a)}else f._log.warn("Received a message from a different callsid: "+t)};
/**
       * Raised when a Call receives an 'ack' with an 'acktype' of 'message.
       * This means that the message sent via sendMessage API has been received by the signaling server.
       * @param voiceEventSid
       */f._onMessageSent=function(e){if(f._messages.has(e)){var t=f._messages.get(e);f._messages.delete(e);f._log.debug("#messageSent",JSON.stringify(t));f.emit("messageSent",t)}else f._log.warn("Received a messageSent with a voiceEventSid that doesn't exists: "+e)};
/**
       * When we get a RINGING signal from PStream, update the {@link Call} status.
       * @param payload
       */f._onRinging=function(e){f._setCallSid(e);if(f._status===Call.State.Connecting||f._status===Call.State.Ringing){var t=!!e.sdp;f._status=Call.State.Ringing;f._publisher.info("connection","outgoing-ringing",{hasEarlyMedia:t},f);f._log.debug("#ringing");f.emit("ringing",t)}};
/**
       * Called each time StatsMonitor emits a sample.
       * Emits stats event and batches the call stats metrics and sends them to Insights.
       * @param sample
       */f._onRTCSample=function(e){var n=t(t({},e),{inputVolume:f._latestInputVolume,outputVolume:f._latestOutputVolume});f._codec=n.codecName;f._metricsSamples.push(n);f._metricsSamples.length>=_&&f._publishMetrics();f.emit("sample",e)};f._onSignalingError=function(e){var t=e.callsid,n=e.voiceeventsid;if(f.parameters.CallSid===t){if(n&&f._messages.has(n)){f._messages.delete(n);f._log.warn("Received an error while sending a message.",e)}}else f._log.warn("Received an error from a different callsid: "+t)};f._onSignalingReconnected=function(){if(f._signalingStatus===Call.State.Reconnecting){f._log.info("Signaling Connection reestablished.");f._signalingStatus=Call.State.Open;if(f._mediaStatus===Call.State.Open){f._publisher.info("connection","reconnected",null,f);f._log.debug("#reconnected");f.emit("reconnected");f._status=Call.State.Open}}};f._onTransportClose=function(){f._log.error("Received transportClose from pstream");f._log.debug("#transportClose");f.emit("transportClose");if(f._signalingReconnectToken){f._status=Call.State.Reconnecting;f._signalingStatus=Call.State.Reconnecting;f._log.debug("#reconnecting");f.emit("reconnecting",new i.SignalingErrors.ConnectionDisconnected)}else{f._status=Call.State.Closed;f._signalingStatus=Call.State.Closed}};
/**
       * Re-emit an StatsMonitor warning as a {@link Call}.warning or .warning-cleared event.
       * @param warningData
       * @param wasCleared - Whether this is a -cleared or -raised event.
       */f._reemitWarning=function(e,t){var n=/^audio/.test(e.name)?"audio-level-":"network-quality-";var r=w[e.threshold.name];var o;e.name in b?o=b[e.name][e.threshold.name]:e.name in C&&(o=C[e.name]);var i=r+o;f._emitWarning(n,i,e.threshold.value,e.values||e.value,t,e)};
/**
       * Re-emit an StatsMonitor warning-cleared as a .warning-cleared event.
       * @param warningData
       */f._reemitWarningCleared=function(e){f._reemitWarning(e,true)};f._isUnifiedPlanDefault=e.isUnifiedPlanDefault;f._soundcache=e.soundcache;typeof e.onIgnore==="function"&&(f._onIgnore=e.onIgnore);var v=u&&u.twimlParams||{};f.customParameters=new Map(Object.entries(v).map((function(e){var t=e[0],n=e[1];return[t,String(n)]})));Object.assign(f._options,u);f._options.callParameters&&(f.parameters=f._options.callParameters);f._options.reconnectToken&&(f._signalingReconnectToken=f._options.reconnectToken);f._voiceEventSidGenerator=f._options.voiceEventSidGenerator||p.generateVoiceEventSid;f._direction=f.parameters.CallSid?Call.CallDirection.Incoming:Call.CallDirection.Outgoing;f._direction===Call.CallDirection.Incoming&&f.parameters?f.callerInfo=f.parameters.StirStatus?{isVerified:f.parameters.StirStatus==="TN-Validation-Passed-A"}:null:f.callerInfo=null;f._mediaReconnectBackoff=new r.default(h);f._mediaReconnectBackoff.on("ready",(function(){return f._mediaHandler.iceRestart()}));f.outboundConnectionId=generateTempCallSid();var m=f._publisher=e.publisher;f._direction===Call.CallDirection.Incoming?m.info("connection","incoming",null,f):m.info("connection","outgoing",{preflight:f._options.preflight},f);var g=f._monitor=new(f._options.StatsMonitor||l.default);g.on("sample",f._onRTCSample);g.disableWarnings();setTimeout((function(){return g.enableWarnings()}),y);g.on("warning",(function(e,t){e.name!=="bytesSent"&&e.name!=="bytesReceived"||f._onMediaFailure(Call.MediaFailure.LowBytes);f._reemitWarning(e,t)}));g.on("warning-cleared",(function(e){f._reemitWarningCleared(e)}));f._mediaHandler=new f._options.MediaHandler(e.audioHelper,e.pstream,{RTCPeerConnection:f._options.RTCPeerConnection,codecPreferences:f._options.codecPreferences,dscp:f._options.dscp,forceAggressiveIceNomination:f._options.forceAggressiveIceNomination,isUnifiedPlan:f._isUnifiedPlanDefault,maxAverageBitrate:f._options.maxAverageBitrate,preflight:f._options.preflight});f.on("volume",(function(e,t){f._inputVolumeStreak=f._checkVolume(e,f._inputVolumeStreak,f._latestInputVolume,"input");f._outputVolumeStreak=f._checkVolume(t,f._outputVolumeStreak,f._latestOutputVolume,"output");f._latestInputVolume=e;f._latestOutputVolume=t}));f._mediaHandler.onaudio=function(e){f._log.debug("#audio");f.emit("audio",e)};f._mediaHandler.onvolume=function(e,t,n,r){g.addVolumes(n/255*32767,r/255*32767);f.emit("volume",e,t)};f._mediaHandler.ondtlstransportstatechange=function(e){var t=e==="failed"?"error":"debug";f._publisher.post(t,"dtls-transport-state",e,null,f)};f._mediaHandler.onpcconnectionstatechange=function(e){var t="debug";var n=f._mediaHandler.getRTCDtlsTransport();e==="failed"&&(t=n&&n.state==="failed"?"error":"warning");f._publisher.post(t,"pc-connection-state",e,null,f)};f._mediaHandler.onicecandidate=function(e){var t=new c.IceCandidate(e).toPayload();f._publisher.debug("ice-candidate","ice-candidate",t,f)};f._mediaHandler.onselectedcandidatepairchange=function(e){var t=new c.IceCandidate(e.local).toPayload();var n=new c.IceCandidate(e.remote,true).toPayload();f._publisher.debug("ice-candidate","selected-ice-candidate-pair",{local_candidate:t,remote_candidate:n},f)};f._mediaHandler.oniceconnectionstatechange=function(e){var t=e==="failed"?"error":"debug";f._publisher.post(t,"ice-connection-state",e,null,f)};f._mediaHandler.onicegatheringfailure=function(e){f._publisher.warn("ice-gathering-state",e,null,f);f._onMediaFailure(Call.MediaFailure.IceGatheringFailed)};f._mediaHandler.onicegatheringstatechange=function(e){f._publisher.debug("ice-gathering-state",e,null,f)};f._mediaHandler.onsignalingstatechange=function(e){f._publisher.debug("signaling-state",e,null,f)};f._mediaHandler.ondisconnected=function(e){f._log.warn(e);f._publisher.warn("network-quality-warning-raised","ice-connectivity-lost",{message:e},f);f._log.debug("#warning","ice-connectivity-lost");f.emit("warning","ice-connectivity-lost");f._onMediaFailure(Call.MediaFailure.ConnectionDisconnected)};f._mediaHandler.onfailed=function(e){f._onMediaFailure(Call.MediaFailure.ConnectionFailed)};f._mediaHandler.onconnected=function(){f._status===Call.State.Reconnecting&&f._onMediaReconnected()};f._mediaHandler.onreconnected=function(e){f._log.info(e);f._publisher.info("network-quality-warning-cleared","ice-connectivity-lost",{message:e},f);f._log.debug("#warning-cleared","ice-connectivity-lost");f.emit("warning-cleared","ice-connectivity-lost");f._onMediaReconnected()};f._mediaHandler.onerror=function(e){e.disconnect===true&&f._disconnect(e.info&&e.info.message);var t=e.info.twilioError||new i.GeneralErrors.UnknownError(e.info.message);f._log.error("Received an error from MediaStream:",e);f._log.debug("#error",t);f.emit("error",t)};f._mediaHandler.onopen=function(){if(f._status!==Call.State.Open&&f._status!==Call.State.Reconnecting)if(f._status===Call.State.Ringing||f._status===Call.State.Connecting){f.mute(f._mediaHandler.isMuted);f._mediaStatus=Call.State.Open;f._maybeTransitionToOpen()}else f._mediaHandler.close()};f._mediaHandler.onclose=function(){f._status=Call.State.Closed;f._options.shouldPlayDisconnect&&f._options.shouldPlayDisconnect()&&!f._isCancelled&&!f._isRejected&&f._soundcache.get(o.default.SoundName.Disconnect).play();g.disable();f._publishMetrics();if(!f._isCancelled&&!f._isRejected){f._log.debug("#disconnect");f.emit("disconnect",f)}};f._pstream=e.pstream;f._pstream.on("ack",f._onAck);f._pstream.on("cancel",f._onCancel);f._pstream.on("error",f._onSignalingError);f._pstream.on("ringing",f._onRinging);f._pstream.on("transportClose",f._onTransportClose);f._pstream.on("connected",f._onConnected);f._pstream.on("message",f._onMessageReceived);f.on("error",(function(e){f._publisher.error("connection","error",{code:e.code,message:e.message},f);f._pstream&&f._pstream.status==="disconnected"&&f._cleanupEventListeners()}));f.on("disconnect",(function(){f._cleanupEventListeners()}));return f}Object.defineProperty(Call.prototype,"direction",{get:function(){return this._direction},enumerable:false,configurable:true});Object.defineProperty(Call.prototype,"codec",{get:function(){return this._codec},enumerable:false,configurable:true});
/**
     * Set the audio input tracks from a given stream.
     * @param stream
     * @private
     */Call.prototype._setInputTracksFromStream=function(e){return this._mediaHandler.setInputTracksFromStream(e)};
/**
     * Set the audio output sink IDs.
     * @param sinkIds
     * @private
     */Call.prototype._setSinkIds=function(e){return this._mediaHandler._setSinkIds(e)};
/**
     * Accept the incoming {@link Call}.
     * @param [options]
     */Call.prototype.accept=function(e){var t=this;if(this._status===Call.State.Pending){this._log.debug(".accept",e);e=e||{};var n=e.rtcConfiguration||this._options.rtcConfiguration;var r=e.rtcConstraints||this._options.rtcConstraints||{};var o=r.audio||{audio:true};this._status=Call.State.Connecting;var connect=function(){if(t._status===Call.State.Connecting){var onAnswer=function(e,n){var r=t._direction===Call.CallDirection.Incoming?"accepted-by-local":"accepted-by-remote";t._publisher.info("connection",r,null,t);typeof n==="string"&&(t._signalingReconnectToken=n);var o=u.getPreferredCodecInfo(t._mediaHandler.version.getSDP()),i=o.codecName,a=o.codecParams;t._publisher.info("settings","codec",{codec_params:a,selected_codec:i},t);t._monitor.enable(e)};var e=typeof t._options.getSinkIds==="function"&&t._options.getSinkIds();Array.isArray(e)&&t._mediaHandler._setSinkIds(e).catch((function(){}));t._pstream.addListener("hangup",t._onHangup);if(t._direction===Call.CallDirection.Incoming){t._isAnswered=true;t._pstream.on("answer",t._onAnswer);t._mediaHandler.answerIncomingCall(t.parameters.CallSid,t._options.offerSdp,r,n,onAnswer)}else{var o=Array.from(t.customParameters.entries()).map((function(e){return encodeURIComponent(e[0])+"="+encodeURIComponent(e[1])})).join("&");t._pstream.on("answer",t._onAnswer);t._mediaHandler.makeOutgoingCall(t._pstream.token,o,t.outboundConnectionId,r,n,onAnswer)}}else{t._cleanupEventListeners();t._mediaHandler.close()}};this._options.beforeAccept&&this._options.beforeAccept(this);var a=typeof this._options.getInputStream==="function"&&this._options.getInputStream();var s=a?this._mediaHandler.setInputTracksFromStream(a):this._mediaHandler.openDefaultDeviceWithConstraints(o);s.then((function(){t._publisher.info("get-user-media","succeeded",{data:{audioConstraints:o}},t);connect()}),(function(e){var n;if(e.code===31208||["PermissionDeniedError","NotAllowedError"].indexOf(e.name)!==-1){n=new i.UserMediaErrors.PermissionDeniedError;t._publisher.error("get-user-media","denied",{data:{audioConstraints:o,error:e}},t)}else{n=new i.UserMediaErrors.AcquisitionFailedError;t._publisher.error("get-user-media","failed",{data:{audioConstraints:o,error:e}},t)}t._disconnect();t._log.debug("#error",e);t.emit("error",n)}))}};Call.prototype.disconnect=function(){this._log.debug(".disconnect");this._disconnect()};Call.prototype.getLocalStream=function(){return this._mediaHandler&&this._mediaHandler.stream};Call.prototype.getRemoteStream=function(){return this._mediaHandler&&this._mediaHandler._remoteStream};Call.prototype.ignore=function(){if(this._status===Call.State.Pending){this._log.debug(".ignore");this._status=Call.State.Closed;this._mediaHandler.ignore(this.parameters.CallSid);this._publisher.info("connection","ignored-by-local",null,this);this._onIgnore&&this._onIgnore()}};Call.prototype.isMuted=function(){return this._mediaHandler.isMuted};
/**
     * Mute incoming audio.
     * @param shouldMute - Whether the incoming audio should be muted. Defaults to true.
     */Call.prototype.mute=function(e){e===void 0&&(e=true);this._log.debug(".mute",e);var t=this._mediaHandler.isMuted;this._mediaHandler.mute(e);var n=this._mediaHandler.isMuted;if(t!==n){this._publisher.info("connection",n?"muted":"unmuted",null,this);this._log.debug("#mute",n);this.emit("mute",n,this)}};
/**
     * Post an event to Endpoint Analytics indicating that the end user
     *   has given call quality feedback. Called without a score, this
     *   will report that the customer declined to give feedback.
     * @param score - The end-user's rating of the call; an
     *   integer 1 through 5. Or undefined if the user declined to give
     *   feedback.
     * @param issue - The primary issue the end user
     *   experienced on the call. Can be: ['one-way-audio', 'choppy-audio',
     *   'dropped-call', 'audio-latency', 'noisy-call', 'echo']
     */Call.prototype.postFeedback=function(e,t){if(typeof e==="undefined"||e===null)return this._postFeedbackDeclined();if(!Object.values(Call.FeedbackScore).includes(e))throw new i.InvalidArgumentError("Feedback score must be one of: "+Object.values(Call.FeedbackScore));if(typeof t!=="undefined"&&t!==null&&!Object.values(Call.FeedbackIssue).includes(t))throw new i.InvalidArgumentError("Feedback issue must be one of: "+Object.values(Call.FeedbackIssue));return this._publisher.info("feedback","received",{issue_name:t,quality_score:e},this,true)};Call.prototype.reject=function(){if(this._status===Call.State.Pending){this._log.debug(".reject");this._isRejected=true;this._pstream.reject(this.parameters.CallSid);this._mediaHandler.reject(this.parameters.CallSid);this._publisher.info("connection","rejected-by-local",null,this);this._cleanupEventListeners();this._mediaHandler.close();this._status=Call.State.Closed;this._log.debug("#reject");this.emit("reject")}};
/**
     * Send a string of digits.
     * @param digits
     */Call.prototype.sendDigits=function(e){var t=this;this._log.debug(".sendDigits",e);if(e.match(/[^0-9*#w]/))throw new i.InvalidArgumentError("Illegal character passed into sendDigits");var n=this._options.customSounds||{};var r=[];e.split("").forEach((function(e){var t=e!=="w"?"dtmf"+e:"";t==="dtmf*"&&(t="dtmfs");t==="dtmf#"&&(t="dtmfh");r.push(t)}));var playNextDigit=function(){var e=r.shift();e&&(t._options.dialtonePlayer&&!n[e]?t._options.dialtonePlayer.play(e):t._soundcache.get(e).play());r.length&&setTimeout((function(){return playNextDigit()}),200)};playNextDigit();var o=this._mediaHandler.getOrCreateDTMFSender();function insertDTMF(e){if(e.length){var t=e.shift();t&&t.length&&o.insertDTMF(t,g,v);setTimeout(insertDTMF.bind(null,e),m)}}if(o){if(!("canInsertDTMF"in o)||o.canInsertDTMF){this._log.info("Sending digits using RTCDTMFSender");insertDTMF(e.split("w"));return}this._log.info("RTCDTMFSender cannot insert DTMF")}this._log.info("Sending digits over PStream");if(this._pstream!==null&&this._pstream.status!=="disconnected")this._pstream.dtmf(this.parameters.CallSid,e);else{var a=new i.GeneralErrors.ConnectionError("Could not send DTMF: Signaling channel is disconnected");this._log.debug("#error",a);this.emit("error",a)}};
/**
     * Send a message to Twilio. Your backend application can listen for these
     * messages to allow communication between your frontend and backend applications.
     * <br/><br/>This feature is currently in Beta.
     * @param message - The message object to send.
     * @returns A voice event sid that uniquely identifies the message that was sent.
     */Call.prototype.sendMessage=function(e){this._log.debug(".sendMessage",JSON.stringify(e));var t=e.content,n=e.contentType,r=e.messageType;if(typeof t==="undefined"||t===null)throw new i.InvalidArgumentError("`content` is empty");if(typeof r!=="string")throw new i.InvalidArgumentError("`messageType` must be an enumeration value of `Call.MessageType` or a string.");if(r.length===0)throw new i.InvalidArgumentError("`messageType` must be a non-empty string.");if(this._pstream===null)throw new i.InvalidStateError("Could not send CallMessage; Signaling channel is disconnected");var o=this.parameters.CallSid;if(typeof this.parameters.CallSid==="undefined")throw new i.InvalidStateError("Could not send CallMessage; Call has no CallSid");var a=this._voiceEventSidGenerator();this._messages.set(a,{content:t,contentType:n,messageType:r,voiceEventSid:a});this._pstream.sendMessage(o,t,n,r,a);return a};Call.prototype.status=function(){return this._status};
/**
     * Check the volume passed, emitting a warning if one way audio is detected or cleared.
     * @param currentVolume - The current volume for this direction
     * @param streakFieldName - The name of the field on the {@link Call} object that tracks how many times the
     *   current value has been repeated consecutively.
     * @param lastValueFieldName - The name of the field on the {@link Call} object that tracks the most recent
     *   volume for this direction
     * @param direction - The directionality of this audio track, either 'input' or 'output'
     * @returns The current streak; how many times in a row the same value has been polled.
     */Call.prototype._checkVolume=function(e,t,n,r){var o=t>=10;var i=0;n===e&&(i=t);i>=10?this._emitWarning("audio-level-","constant-audio-"+r+"-level",10,i,false):o&&this._emitWarning("audio-level-","constant-audio-"+r+"-level",10,i,true);return i};Call.prototype._cleanupEventListeners=function(){var e=this;var cleanup=function(){if(e._pstream){e._pstream.removeListener("ack",e._onAck);e._pstream.removeListener("answer",e._onAnswer);e._pstream.removeListener("cancel",e._onCancel);e._pstream.removeListener("error",e._onSignalingError);e._pstream.removeListener("hangup",e._onHangup);e._pstream.removeListener("ringing",e._onRinging);e._pstream.removeListener("transportClose",e._onTransportClose);e._pstream.removeListener("connected",e._onConnected);e._pstream.removeListener("message",e._onMessageReceived)}};cleanup();setTimeout(cleanup,0)};Call.prototype._createMetricPayload=function(){var e={call_sid:this.parameters.CallSid,dscp:!!this._options.dscp,sdk_version:f.RELEASE_VERSION};this._options.gateway&&(e.gateway=this._options.gateway);e.direction=this._direction;return e};
/**
     * Disconnect the {@link Call}.
     * @param message - A message explaining why the {@link Call} is being disconnected.
     * @param wasRemote - Whether the disconnect was triggered locally or remotely.
     */Call.prototype._disconnect=function(e,t){e=typeof e==="string"?e:null;if(this._status===Call.State.Open||this._status===Call.State.Connecting||this._status===Call.State.Reconnecting||this._status===Call.State.Ringing){this._log.info("Disconnecting...");if(this._pstream!==null&&this._pstream.status!=="disconnected"&&this._shouldSendHangup){var n=this.parameters.CallSid||this.outboundConnectionId;n&&this._pstream.hangup(n,e)}this._cleanupEventListeners();this._mediaHandler.close();t||this._publisher.info("connection","disconnected-by-local",null,this)}};Call.prototype._maybeTransitionToOpen=function(){this._wasConnected;if(this._isAnswered){this._onSignalingReconnected();this._signalingStatus=Call.State.Open;if(this._mediaHandler&&this._mediaHandler.status==="open"){this._status=Call.State.Open;if(!this._wasConnected){this._wasConnected=true;this._log.debug("#accept");this.emit("accept",this)}}}};Call.prototype._postFeedbackDeclined=function(){return this._publisher.info("feedback","received-none",null,this,true)};Call.prototype._publishMetrics=function(){var e=this;this._metricsSamples.length!==0&&this._publisher.postMetrics("quality-metrics-samples","metrics-sample",this._metricsSamples.splice(0),this._createMetricPayload(),this).catch((function(t){e._log.warn("Unable to post metrics to Insights. Received error:",t)}))};
/**
     * Set the CallSid
     * @param payload
     */Call.prototype._setCallSid=function(e){var t=e.callsid;if(t){this.parameters.CallSid=t;this._mediaHandler.callSid=t}};Call.toString=function(){return"[Twilio.Call class]"};return Call}(n.EventEmitter);(function(e){(function(e){e.Closed="closed";e.Connecting="connecting";e.Open="open";e.Pending="pending";e.Reconnecting="reconnecting";e.Ringing="ringing"})(e.State||(e.State={}));(function(e){e.AudioLatency="audio-latency";e.ChoppyAudio="choppy-audio";e.DroppedCall="dropped-call";e.Echo="echo";e.NoisyCall="noisy-call";e.OneWayAudio="one-way-audio"})(e.FeedbackIssue||(e.FeedbackIssue={}));(function(e){e[e.One=1]="One";e[e.Two=2]="Two";e[e.Three=3]="Three";e[e.Four=4]="Four";e[e.Five=5]="Five"})(e.FeedbackScore||(e.FeedbackScore={}));(function(e){e.Incoming="INCOMING";e.Outgoing="OUTGOING"})(e.CallDirection||(e.CallDirection={}));(function(e){e.Opus="opus";e.PCMU="pcmu"})(e.Codec||(e.Codec={}));(function(e){e.None="none";e.Timeout="timeout"})(e.IceGatheringFailureReason||(e.IceGatheringFailureReason={}));(function(e){e.ConnectionDisconnected="ConnectionDisconnected";e.ConnectionFailed="ConnectionFailed";e.IceGatheringFailed="IceGatheringFailed";e.LowBytes="LowBytes"})(e.MediaFailure||(e.MediaFailure={}));(function(e){e.UserDefinedMessage="user-defined-message"})(e.MessageType||(e.MessageType={}))})(E||(E={}));function generateTempCallSid(){return"TJSxxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=Math.random()*16|0;var n=e==="x"?t:t&3|8;return n.toString(16)}))}Fe.default=E;return Fe}var We={},Be=false;function dew(){if(Be)return We;Be=true;Object.defineProperty(We,"__esModule",{value:true});We.TwilioError=We.Logger=We.PreflightTest=We.Device=We.Call=void 0;var e=dew$1();We.Call=e.default;var t=dew$5();We.Device=t.default;var n=dew$y();We.TwilioError=n;var r=dew$w();Object.defineProperty(We,"Logger",{enumerable:true,get:function(){return r.Logger}});var o=dew$l();Object.defineProperty(We,"PreflightTest",{enumerable:true,get:function(){return o.PreflightTest}});return We}const Ve=dew();var $e=Ve.__esModule,qe=Ve.TwilioError,Ge=Ve.Logger,ze=Ve.PreflightTest,Je=Ve.Device,Qe=Ve.Call;export{Qe as Call,Je as Device,Ge as Logger,ze as PreflightTest,qe as TwilioError,$e as __esModule,Ve as default};

