var e="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var o={};(function(e,t){o?o=t():e.log=t()})(o,(function(){var noop=function(){};var o="undefined";var t=typeof window!==o&&typeof window.navigator!==o&&/Trident\/|MSIE /.test(window.navigator.userAgent);var n=["trace","debug","info","warn","error"];function bindMethod(e,o){var t=e[o];if("function"===typeof t.bind)return t.bind(e);try{return Function.prototype.bind.call(t,e)}catch(o){return function(){return Function.prototype.apply.apply(t,[e,arguments])}}}function traceForIE(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments]));console.trace&&console.trace()}function realMethod(e){"debug"===e&&(e="log");return typeof console!==o&&("trace"===e&&t?traceForIE:void 0!==console[e]?bindMethod(console,e):void 0!==console.log?bindMethod(console,"log"):noop)}function replaceLoggingMethods(o,t){for(var l=0;l<n.length;l++){var r=n[l];(this||e)[r]=l<o?noop:this.methodFactory(r,o,t)}(this||e).log=(this||e).debug}function enableLoggingWhenConsoleArrives(t,n,l){return function(){if(typeof console!==o){replaceLoggingMethods.call(this||e,n,l);(this||e)[t].apply(this||e,arguments)}}}function defaultMethodFactory(o,t,n){return realMethod(o)||enableLoggingWhenConsoleArrives.apply(this||e,arguments)}function Logger(t,l,r){var i=this||e;var a;var c="loglevel";t&&(c+=":"+t);function persistLevelIfPossible(e){var t=(n[e]||"silent").toUpperCase();if(typeof window!==o){try{window.localStorage[c]=t;return}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+t+";"}catch(e){}}}function getPersistedLevel(){var e;if(typeof window!==o){try{e=window.localStorage[c]}catch(e){}if(typeof e===o)try{var t=window.document.cookie;var n=t.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(t.slice(n))[1])}catch(e){}void 0===i.levels[e]&&(e=void 0);return e}}i.name=t;i.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5};i.methodFactory=r||defaultMethodFactory;i.getLevel=function(){return a};i.setLevel=function(e,n){"string"===typeof e&&void 0!==i.levels[e.toUpperCase()]&&(e=i.levels[e.toUpperCase()]);if(!("number"===typeof e&&e>=0&&e<=i.levels.SILENT))throw"log.setLevel() called with invalid level: "+e;a=e;false!==n&&persistLevelIfPossible(e);replaceLoggingMethods.call(i,e,t);if(typeof console===o&&e<i.levels.SILENT)return"No console available for logging"};i.setDefaultLevel=function(e){getPersistedLevel()||i.setLevel(e,false)};i.enableAll=function(e){i.setLevel(i.levels.TRACE,e)};i.disableAll=function(e){i.setLevel(i.levels.SILENT,e)};var s=getPersistedLevel();null==s&&(s=null==l?"WARN":l);i.setLevel(s,false)}var l=new Logger;var r={};l.getLogger=function getLogger(e){if("string"!==typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var o=r[e];o||(o=r[e]=new Logger(e,l.getLevel(),l.methodFactory));return o};var i=typeof window!==o?window.log:void 0;l.noConflict=function(){typeof window!==o&&window.log===l&&(window.log=i);return l};l.getLoggers=function getLoggers(){return r};return l}));var t=o;export default t;

